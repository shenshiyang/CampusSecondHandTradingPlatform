{"ast":null,"code":"export default {\n  name: \"Orders\",\n  data() {\n    return {\n      url: 'selectPage',\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      goodsName: null,\n      orderNo: null,\n      status: null\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    pay(orderNo) {\n      window.open('http://localhost:9090/alipay/pay?orderNo=' + orderNo);\n    },\n    changeStatus(row, status) {\n      this.$confirm('您确认操作吗？', '确认操作', {\n        type: \"warning\"\n      }).then(response => {\n        this.form = JSON.parse(JSON.stringify(row));\n        this.form.status = status;\n        this.$request.put('/orders/update', this.form).then(res => {\n          if (res.code === '200') {\n            // 表示成功保存\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(e => {});\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/orders/update' : '/orders/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/orders/' + this.url, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          goodsName: this.goodsName,\n          status: this.status,\n          orderNo: this.orderNo\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.goodsName = null;\n      this.orderNo = null;\n      this.status = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","url","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","goodsName","orderNo","status","created","load","methods","pay","window","open","changeStatus","row","$confirm","type","then","response","stringify","$request","put","res","code","$message","success","error","msg","catch","e","handleAdd","handleEdit","save","$refs","formRef","validate","valid","id","method","del","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/front/Orders.vue"],"sourcesContent":["<template>\n  <div style=\"width: 85%; margin: 10px auto\" class=\"card\">\n\n    <div style=\"margin-bottom: 15px; display: flex\">\n      <div style=\"flex: 1\">\n        <el-radio-group v-model=\"url\" @change=\"load(1)\">\n          <el-radio-button label=\"selectPage\">我购买的订单</el-radio-button>\n          <el-radio-button label=\"selectSalePage\">我出售的订单</el-radio-button>\n        </el-radio-group>\n      </div>\n请优化\n\n      <div>\n        <el-input v-model=\"goodsName\" placeholder=\"请输入商品名称\" style=\"width: 200px; margin-right: 5px\" clearable></el-input>\n        <el-input v-model=\"orderNo\" placeholder=\"请输入订单编号\" style=\"width: 200px; margin-right: 5px\" clearable></el-input>\n        <el-select v-model=\"status\" style=\"width: 200px; margin-right: 5px\" clearable>\n          <el-option value=\"已取消\"></el-option>\n          <el-option value=\"待支付\"></el-option>\n          <el-option value=\"待发货\"></el-option>\n          <el-option value=\"待收货\"></el-option>\n          <el-option value=\"已完成\"></el-option>\n        </el-select>\n        <el-button type=\"primary\" @click=\"load(1)\">搜索</el-button>\n        <el-button type=\"warning\" @click=\"reset\">重置</el-button>\n      </div>\n    </div>\n\n    <div style=\"margin: 10px 0\">\n      <el-table :data=\"tableData\" strip >\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"goodsName\" label=\"商品名称\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"goodsImg\" label=\"商品图片\">\n          <template v-slot=\"scope\">\n            <el-image v-if=\"scope.row.goodsImg\" style=\"width: 50px\" :src=\"scope.row.goodsImg\" :preview-src-list=\"[scope.row.goodsImg]\"></el-image>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"orderNo\" label=\"订单编号\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"total\" label=\"总价\">\n          <template v-slot=\"scope\">\n            <span style=\"color: red\">￥{{ scope.row.total }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"time\" label=\"下单时间\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"payNo\" label=\"支付单号\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"payTime\" label=\"支付时间\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"user\" label=\"下单人名称\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"address\" label=\"收货地址\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"phone\" label=\"联系方式\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"userName\" label=\"收货人名称\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"订单状态\">\n          <template v-slot=\"scope\">\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '已取消'\">已取消</el-tag>\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '待支付'\">待支付</el-tag>\n            <el-tag type=\"primary\" v-if=\"scope.row.status === '待发货'\">待发货</el-tag>\n            <el-tag type=\"info\" v-if=\"scope.row.status === '待收货'\">待收货</el-tag>\n            <el-tag type=\"success\" v-if=\"scope.row.status === '已完成'\">已完成</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"saleName\" label=\"卖家名称\"></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"300\">\n          <template v-slot=\"scope\">\n            <el-button v-if=\"scope.row.status === '待支付'\" size=\"mini\" type=\"primary\" plain @click=\"pay(scope.row.orderNo)\">支付</el-button>\n            <el-button v-if=\"scope.row.status === '待支付'\" size=\"mini\" type=\"danger\" plain @click=\"changeStatus(scope.row, '已取消')\">取消</el-button>\n            <el-button v-if=\"scope.row.status === '待发货' && scope.row.saleId === user.id\" size=\"mini\" type=\"info\" plain @click=\"changeStatus(scope.row, '待收货')\">发货</el-button>\n            <el-button v-if=\"scope.row.status === '待收货' && scope.row.userId === user.id\" size=\"mini\" type=\"primary\" plain @click=\"changeStatus(scope.row, '已完成')\">收货</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div style=\"margin: 15px 0\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"订单信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"商品名称\" prop=\"goodsName\">\n          <el-input v-model=\"form.goodsName\" placeholder=\"商品名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品图片\" prop=\"goodsImg\">\n          <el-input v-model=\"form.goodsImg\" placeholder=\"商品图片\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单编号\" prop=\"orderNo\">\n          <el-input v-model=\"form.orderNo\" placeholder=\"订单编号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"总价\" prop=\"total\">\n          <el-input v-model=\"form.total\" placeholder=\"总价\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"下单时间\" prop=\"time\">\n          <el-input v-model=\"form.time\" placeholder=\"下单时间\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"支付单号\" prop=\"payNo\">\n          <el-input v-model=\"form.payNo\" placeholder=\"支付单号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"支付时间\" prop=\"payTime\">\n          <el-input v-model=\"form.payTime\" placeholder=\"支付时间\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"下单人ID\" prop=\"userId\">\n          <el-input v-model=\"form.userId\" placeholder=\"下单人ID\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"收货地址\" prop=\"address\">\n          <el-input v-model=\"form.address\" placeholder=\"收货地址\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"联系方式\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" placeholder=\"联系方式\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"收货人名称\" prop=\"userName\">\n          <el-input v-model=\"form.userName\" placeholder=\"收货人名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单状态\" prop=\"status\">\n          <el-input v-model=\"form.status\" placeholder=\"订单状态\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"卖家ID\" prop=\"saleId\">\n          <el-input v-model=\"form.saleId\" placeholder=\"卖家ID\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Orders\",\n  data() {\n    return {\n      url: 'selectPage',\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n      },\n      ids: [],\n      goodsName: null,\n      orderNo: null,\n      status: null\n    }\n  },\n  created() {\n    this.load(1)\n  },\n  methods: {\n    pay(orderNo) {\n      window.open('http://localhost:9090/alipay/pay?orderNo=' + orderNo)\n    },\n    changeStatus(row, status) {\n      this.$confirm('您确认操作吗？', '确认操作', {type: \"warning\"}).then(response => {\n        this.form = JSON.parse(JSON.stringify(row))\n        this.form.status = status\n        this.$request.put('/orders/update', this.form).then(res => {\n          if (res.code === '200') {  // 表示成功保存\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(e => {})\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/orders/update' : '/orders/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/orders/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/orders/' + this.url, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          goodsName: this.goodsName,\n          status: this.status,\n          orderNo: this.orderNo,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list\n          this.total = res.data?.total\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    reset() {\n      this.goodsName = null\n      this.orderNo = null\n      this.status = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}