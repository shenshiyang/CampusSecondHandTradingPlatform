{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0,\n      // ‰ªäÊó•ÈîÄÂîÆÈ¢ù\n      todayCount: 0 // ‰ªäÊó•ËÆ¢ÂçïÊï∞\n    };\n  },\n\n  mounted() {\n    // ËØ∑Ê±Ç‰ªäÊó•ÈîÄÂîÆÈ¢ù\n    this.$request.get('/orders/todayTotal').then(res => {\n      this.todayTotal = res.data || 0;\n    });\n    // ËØ∑Ê±Ç‰ªäÊó•ËÆ¢ÂçïÊï∞\n    this.$request.get('/orders/todayCount').then(res => {\n      this.todayCount = res.data || 0;\n    });\n    const pieChart = echarts.init(document.getElementById('pie'));\n    const pictorialChart = echarts.init(document.getElementById('pictorial'));\n    const categoryPieChart = echarts.init(document.getElementById('categoryPie'));\n    const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'));\n\n    // Âõæ1ÔºöÈîÄÂîÆÈ¢ùË∂ãÂäø\n    const lineOption = {\n      title: {\n        text: 'ËøëÂÖ´Êó•ÈîÄÂîÆÈ¢ù & ËÆ¢ÂçïÊï∞Ë∂ãÂäø',\n        subtext: 'ÂèåÊäòÁ∫øÂØπÊØîÂõæ',\n        left: 'center',\n        top: 10\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        data: ['ÈîÄÂîÆÈ¢ù', 'ËÆ¢ÂçïÊï∞'],\n        top: 50 // ‚úÖ ÂæÄ‰∏ãÁßª‰∏ÄÁÇπÔºåÈÅøÂÖçÂéã‰ΩèÊ†áÈ¢ò\n      },\n\n      grid: {\n        top: 90,\n        // ‚úÖ ÁªôÂõæË°®Âå∫ÂüüÈ¢ÑÁïôÊõ¥Â§öÈ°∂ÈÉ®Á©∫Èó¥\n        left: 60,\n        right: 60,\n        bottom: 60\n      },\n      xAxis: {\n        type: 'category',\n        data: data.map(v => v.name),\n        axisLabel: {\n          rotate: 30\n        }\n      },\n      yAxis: [{\n        type: 'value',\n        name: 'ÈîÄÂîÆÈ¢ùÔºàÂÖÉÔºâ'\n      }, {\n        type: 'value',\n        name: 'ËÆ¢ÂçïÊï∞ÔºàÂçïÔºâ',\n        minInterval: 1\n      }],\n      series: [{\n        name: 'ÈîÄÂîÆÈ¢ù',\n        type: 'line',\n        smooth: true,\n        yAxisIndex: 0,\n        data: data.map(v => v.sales),\n        itemStyle: {\n          color: '#5470c6'\n        }\n      }, {\n        name: 'ËÆ¢ÂçïÊï∞',\n        type: 'line',\n        smooth: true,\n        yAxisIndex: 1,\n        data: data.map(v => v.count),\n        itemStyle: {\n          color: '#91cc75'\n        }\n      }]\n    };\n\n    // Âõæ2ÔºöÂïÜÂÆ∂ÈîÄÂîÆÈ¢ùÊéíË°åÊ¶ú\n    this.$request.get('/orders/selectBar').then(res => {\n      const data = (res.data || []).sort((a, b) => b.value - a.value);\n      const horizontalBarOption = {\n        title: {\n          text: 'ÂïÜÂÆ∂ÈîÄÂîÆÈ¢ùÊéíË°åÊ¶ú',\n          subtext: 'Ê®™ÂêëÊù°ÂΩ¢ÂõæÔºàÈôçÂ∫èÔºâ',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '120px',\n          right: '40px',\n          bottom: '50px',\n          top: '80px'\n        },\n        xAxis: {\n          type: 'value',\n          name: 'ÈîÄÂîÆÈ¢ùÔºàÂÖÉÔºâ'\n        },\n        yAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          inverse: true,\n          axisLabel: {\n            fontSize: 12\n          }\n        },\n        series: [{\n          name: 'ÈîÄÂîÆÈ¢ù',\n          type: 'bar',\n          barWidth: '50%',\n          data: data.map(v => v.value),\n          itemStyle: {\n            color: '#91cc75'\n          },\n          label: {\n            show: true,\n            position: 'right'\n          }\n        }]\n      };\n      pictorialChart.setOption(horizontalBarOption);\n    });\n\n    // Âõæ3ÔºöÂïÜÂìÅÁßçÁ±ªÈîÄÈáèÂç†ÊØî\n    this.$request.get('/orders/selectCategorySalesCount').then(res => {\n      const data = res.data || [];\n      const categoryOption = {\n        title: {\n          text: 'ÂïÜÂìÅÁßçÁ±ªÈîÄÈáèÂç†ÊØî',\n          subtext: 'È•ºÂõæ',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: 'ÈîÄÈáè',\n          type: 'pie',\n          radius: '60%',\n          center: ['50%', '55%'],\n          data: data.map(item => ({\n            value: item.value,\n            name: item.name\n          })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      categoryPieChart.setOption(categoryOption);\n    });\n\n    // Âõæ4ÔºöÁî®Êà∑Âú®Á∫øË∂ãÂäøÂõæ\n    this.$request.get('/user/selectOnlineTrend').then(res => {\n      const data = res.data || [];\n      const onlineOption = {\n        title: {\n          text: 'ËøëÂÖ´Êó•Áî®Êà∑Âú®Á∫øË∂ãÂäø',\n          subtext: 'ÊäòÁ∫øÂõæ',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: {\n            rotate: 30,\n            interval: 0\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: 'Âú®Á∫øÁî®Êà∑Êï∞',\n          minInterval: 1\n        },\n        series: [{\n          name: 'Âú®Á∫ø‰∫∫Êï∞',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: {\n            color: '#73c0de'\n          }\n        }]\n      };\n      onlineTrendChart.setOption(onlineOption);\n    });\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","JSON","parse","localStorage","getItem","todayTotal","todayCount","mounted","$request","get","then","res","pieChart","init","document","getElementById","pictorialChart","categoryPieChart","onlineTrendChart","lineOption","title","text","subtext","left","top","tooltip","trigger","legend","grid","right","bottom","xAxis","type","map","v","axisLabel","rotate","yAxis","minInterval","series","smooth","yAxisIndex","sales","itemStyle","color","count","sort","a","b","value","horizontalBarOption","axisPointer","inverse","fontSize","barWidth","label","show","position","setOption","categoryOption","orient","radius","center","item","emphasis","shadowBlur","shadowOffsetX","shadowColor","onlineOption","interval"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      ÊÇ®Â•ΩÔºå{{ user?.name }}ÔºÅÊ¨¢Ëøé‰ΩøÁî®Êú¨Á≥ªÁªü\n    </div>\n\n    <!-- üìä ‰ªäÊó•ÈîÄÂîÆÁªüËÆ°Âç°ÁâáÔºöÈîÄÂîÆÈ¢ù + ËÆ¢ÂçïÊï∞ -->\n    <div class=\"card\" style=\"margin: 10px 0; display: flex; align-items: center; gap: 30px; font-size: 18px\">\n      <!-- ÈîÄÂîÆÈ¢ù -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-data\" style=\"font-size: 22px; color: #409EFF\"></i>\n        <span>‰ªäÊó•ÈîÄÂîÆÈ¢ùÔºö</span>\n        <span style=\"font-weight: bold; color: red\">Ôø•{{ todayTotal }}</span>\n      </div>\n      <!-- ËÆ¢ÂçïÊï∞ -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-order\" style=\"font-size: 22px; color: #67C23A\"></i>\n        <span>‰ªäÊó•ËÆ¢ÂçïÊï∞Ôºö</span>\n        <span style=\"font-weight: bold; color: #333\">{{ todayCount }}</span>\n      </div>\n    </div>\n\n    <!-- Á¨¨‰∏ÄË°åÔºöÂõæ1„ÄÅÂõæ2 -->\n    <div style=\"display: flex; grid-gap: 10px; margin: 10px 0\">\n      <div style=\"flex: 1; height: 500px\" id=\"pie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"pictorial\" class=\"card\"></div>\n    </div>\n\n    <!-- Á¨¨‰∫åË°åÔºöÂõæ3„ÄÅÂõæ4 -->\n    <div style=\"display: flex; grid-gap: 10px; margin-top: 20px\">\n      <div style=\"flex: 1; height: 500px\" id=\"categoryPie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"onlineTrendChart\" class=\"card\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0, // ‰ªäÊó•ÈîÄÂîÆÈ¢ù\n      todayCount: 0  // ‰ªäÊó•ËÆ¢ÂçïÊï∞\n    }\n  },\n  mounted() {\n    // ËØ∑Ê±Ç‰ªäÊó•ÈîÄÂîÆÈ¢ù\n    this.$request.get('/orders/todayTotal').then(res => {\n      this.todayTotal = res.data || 0\n    })\n    // ËØ∑Ê±Ç‰ªäÊó•ËÆ¢ÂçïÊï∞\n    this.$request.get('/orders/todayCount').then(res => {\n      this.todayCount = res.data || 0\n    })\n\n    const pieChart = echarts.init(document.getElementById('pie'))\n    const pictorialChart = echarts.init(document.getElementById('pictorial'))\n    const categoryPieChart = echarts.init(document.getElementById('categoryPie'))\n    const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'))\n\n    // Âõæ1ÔºöÈîÄÂîÆÈ¢ùË∂ãÂäø\n    const lineOption = {\n  title: {\n    text: 'ËøëÂÖ´Êó•ÈîÄÂîÆÈ¢ù & ËÆ¢ÂçïÊï∞Ë∂ãÂäø',\n    subtext: 'ÂèåÊäòÁ∫øÂØπÊØîÂõæ',\n    left: 'center',\n    top: 10\n  },\n  tooltip: { trigger: 'axis' },\n  legend: {\n    data: ['ÈîÄÂîÆÈ¢ù', 'ËÆ¢ÂçïÊï∞'],\n    top: 50  // ‚úÖ ÂæÄ‰∏ãÁßª‰∏ÄÁÇπÔºåÈÅøÂÖçÂéã‰ΩèÊ†áÈ¢ò\n  },\n  grid: {\n    top: 90,     // ‚úÖ ÁªôÂõæË°®Âå∫ÂüüÈ¢ÑÁïôÊõ¥Â§öÈ°∂ÈÉ®Á©∫Èó¥\n    left: 60,\n    right: 60,\n    bottom: 60\n  },\n  xAxis: {\n    type: 'category',\n    data: data.map(v => v.name),\n    axisLabel: { rotate: 30 }\n  },\n  yAxis: [\n    {\n      type: 'value',\n      name: 'ÈîÄÂîÆÈ¢ùÔºàÂÖÉÔºâ',\n    },\n    {\n      type: 'value',\n      name: 'ËÆ¢ÂçïÊï∞ÔºàÂçïÔºâ',\n      minInterval: 1\n    }\n  ],\n  series: [\n    {\n      name: 'ÈîÄÂîÆÈ¢ù',\n      type: 'line',\n      smooth: true,\n      yAxisIndex: 0,\n      data: data.map(v => v.sales),\n      itemStyle: { color: '#5470c6' }\n    },\n    {\n      name: 'ËÆ¢ÂçïÊï∞',\n      type: 'line',\n      smooth: true,\n      yAxisIndex: 1,\n      data: data.map(v => v.count),\n      itemStyle: { color: '#91cc75' }\n    }\n  ]\n}\n\n\n    // Âõæ2ÔºöÂïÜÂÆ∂ÈîÄÂîÆÈ¢ùÊéíË°åÊ¶ú\n    this.$request.get('/orders/selectBar').then(res => {\n      const data = (res.data || []).sort((a, b) => b.value - a.value)\n      const horizontalBarOption = {\n        title: {\n          text: 'ÂïÜÂÆ∂ÈîÄÂîÆÈ¢ùÊéíË°åÊ¶ú',\n          subtext: 'Ê®™ÂêëÊù°ÂΩ¢ÂõæÔºàÈôçÂ∫èÔºâ',\n          left: 'center'\n        },\n        tooltip: { trigger: 'axis', axisPointer: { type: 'shadow' } },\n        grid: { left: '120px', right: '40px', bottom: '50px', top: '80px' },\n        xAxis: { type: 'value', name: 'ÈîÄÂîÆÈ¢ùÔºàÂÖÉÔºâ' },\n        yAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          inverse: true,\n          axisLabel: { fontSize: 12 }\n        },\n        series: [{\n          name: 'ÈîÄÂîÆÈ¢ù',\n          type: 'bar',\n          barWidth: '50%',\n          data: data.map(v => v.value),\n          itemStyle: { color: '#91cc75' },\n          label: { show: true, position: 'right' }\n        }]\n      }\n      pictorialChart.setOption(horizontalBarOption)\n    })\n\n    // Âõæ3ÔºöÂïÜÂìÅÁßçÁ±ªÈîÄÈáèÂç†ÊØî\n    this.$request.get('/orders/selectCategorySalesCount').then(res => {\n      const data = res.data || []\n      const categoryOption = {\n        title: {\n          text: 'ÂïÜÂìÅÁßçÁ±ªÈîÄÈáèÂç†ÊØî',\n          subtext: 'È•ºÂõæ',\n          left: 'center'\n        },\n        tooltip: { trigger: 'item' },\n        legend: { orient: 'vertical', left: 'left' },\n        series: [{\n          name: 'ÈîÄÈáè',\n          type: 'pie',\n          radius: '60%',\n          center: ['50%', '55%'],\n          data: data.map(item => ({ value: item.value, name: item.name })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      }\n      categoryPieChart.setOption(categoryOption)\n    })\n\n    // Âõæ4ÔºöÁî®Êà∑Âú®Á∫øË∂ãÂäøÂõæ\n    this.$request.get('/user/selectOnlineTrend').then(res => {\n      const data = res.data || []\n      const onlineOption = {\n        title: {\n          text: 'ËøëÂÖ´Êó•Áî®Êà∑Âú®Á∫øË∂ãÂäø',\n          subtext: 'ÊäòÁ∫øÂõæ',\n          left: 'center'\n        },\n        tooltip: { trigger: 'axis' },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: { rotate: 30, interval: 0 }\n        },\n        yAxis: {\n          type: 'value',\n          name: 'Âú®Á∫øÁî®Êà∑Êï∞',\n          minInterval: 1\n        },\n        series: [{\n          name: 'Âú®Á∫ø‰∫∫Êï∞',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: { color: '#73c0de' }\n        }]\n      }\n      onlineTrendChart.setOption(onlineOption)\n    })\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}