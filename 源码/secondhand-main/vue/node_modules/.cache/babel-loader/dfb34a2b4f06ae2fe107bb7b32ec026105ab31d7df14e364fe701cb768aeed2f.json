{"ast":null,"code":"export default {\n  title: \"Posts\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      title: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      content: '',\n      fromVisible1: false\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    changeStatus(row, status) {\n      this.$confirm('您确定' + status + '吗？', '确认操作', {\n        type: \"warning\"\n      }).then(response => {\n        this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n        this.form.status = status;\n        this.$request.put('/posts/update', this.form).then(res => {\n          if (res.code === '200') {\n            // 表示成功保存\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(err => {});\n    },\n    preview(content) {\n      this.content = content;\n      this.fromVisible1 = true;\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/posts/update' : '/posts/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/posts/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/posts/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/posts/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.title = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["title","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","content","fromVisible1","created","load","methods","changeStatus","row","status","$confirm","type","then","response","stringify","$request","put","res","code","$message","success","error","msg","catch","err","preview","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","id","method","del","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Posts.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入标题关键字查询\" style=\"width: 200px\" v-model=\"title\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\n        <el-table-column label=\"查看内容\">\n          <template v-slot=\"scope\">\n            <el-button @click=\"preview(scope.row.content)\">查看内容</el-button>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"img\" label=\"图片\">\n          <template v-slot=\"scope\">\n            <el-image v-if=\"scope.row.img\" style=\"width: 50px\" :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"userId\" label=\"用户ID\"></el-table-column>\n        <el-table-column prop=\"userName\" label=\"用户名称\"></el-table-column>\n        <el-table-column prop=\"time\" label=\"发布时间\"></el-table-column>\n        <el-table-column prop=\"circle\" label=\"圈子\"></el-table-column>\n        <el-table-column prop=\"descr\" label=\"简介\"></el-table-column>\n        <el-table-column prop=\"readCount\" label=\"浏览量\"></el-table-column>\n        <el-table-column prop=\"status\" label=\"审核状态\">\n          <template v-slot=\"scope\">\n            <el-tag type=\"info\" v-if=\"scope.row.status === '待审核'\">待审核</el-tag>\n            <el-tag type=\"success\" v-if=\"scope.row.status === '通过'\">通过</el-tag>\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '拒绝'\">拒绝</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"220\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"success\" plain @click=\"changeStatus(scope.row, '通过')\">通过</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"changeStatus(scope.row, '拒绝')\">拒绝</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"帖子\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"内容\" prop=\"content\">\n          <el-input v-model=\"form.content\" placeholder=\"内容\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"图片\" prop=\"img\">\n          <el-input v-model=\"form.img\" placeholder=\"图片\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户ID\" prop=\"userId\">\n          <el-input v-model=\"form.userId\" placeholder=\"用户ID\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"发布时间\" prop=\"time\">\n          <el-input v-model=\"form.time\" placeholder=\"发布时间\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"圈子\" prop=\"circle\">\n          <el-input v-model=\"form.circle\" placeholder=\"圈子\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"简介\" prop=\"descr\">\n          <el-input v-model=\"form.descr\" placeholder=\"简介\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"浏览量\" prop=\"readCount\">\n          <el-input v-model=\"form.readCount\" placeholder=\"浏览量\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"文章内容\" :visible.sync=\"fromVisible1\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <div class=\"w-e-text\">\n        <div v-html=\"content\"></div>\n      </div>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible1 = false\">关 闭</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n<script>\nexport default {\n  title: \"Posts\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      title: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n      },\n      ids: [],\n      content: '',\n      fromVisible1: false\n    }\n  },\n  created() {\n    this.load(1)\n  },\n  methods: {\n    changeStatus(row, status) {\n      this.$confirm('您确定'+status+'吗？', '确认操作', {type: \"warning\"}).then(response => {\n        this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n        this.form.status = status\n        this.$request.put('/posts/update', this.form).then(res => {\n          if (res.code === '200') {  // 表示成功保存\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(err => {})\n    },\n    preview(content) {\n      this.content = content\n      this.fromVisible1 = true\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/posts/update' : '/posts/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/posts/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/posts/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/posts/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list\n          this.total = res.data?.total\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    reset() {\n      this.title = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}