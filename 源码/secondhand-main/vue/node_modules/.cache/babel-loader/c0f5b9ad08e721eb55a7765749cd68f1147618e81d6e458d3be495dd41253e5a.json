{"ast":null,"code":"import E from \"wangeditor\";\nexport default {\n  name: \"AddGoods\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: {\n        saleStatus: '下架',\n        stock: 1 // ✅ 默认库存为1\n      },\n\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入商品名称',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: '请输入商品价格',\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请选择商品分类',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入发货地址',\n          trigger: 'blur'\n        }],\n        stock: [{\n          required: true,\n          message: '请输入库存数量',\n          trigger: 'blur'\n        }] // ✅ 校验规则\n      },\n\n      editor: null\n    };\n  },\n  mounted() {\n    this.loadCategory();\n    this.loadGoods();\n  },\n  methods: {\n    loadGoods() {\n      if (this.id) {\n        this.$request.get('/goods/selectById/' + this.id).then(res => {\n          this.form = res.data || {};\n          this.setRichText(this.form.content);\n        });\n      } else {\n        this.setRichText('');\n      }\n    },\n    loadCategory() {\n      this.$request.get('/category/selectAll').then(res => {\n        this.categoryList = res.data || [];\n      });\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('发布成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handleImgSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    setRichText(html) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.create();\n        this.editor.txt.html(html);\n      });\n    }\n  }\n};","map":{"version":3,"names":["E","name","data","id","$route","query","user","JSON","parse","localStorage","getItem","categoryList","form","saleStatus","stock","rules","required","message","trigger","price","category","address","editor","mounted","loadCategory","loadGoods","methods","$request","get","then","res","setRichText","content","save","$refs","formRef","validate","valid","txt","html","url","method","code","$message","success","error","msg","handleImgSuccess","response","file","fileList","img","$nextTick","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","type","create"],"sources":["src/views/front/AddGoods.vue"],"sourcesContent":["<template>\n  <div style=\"width: 50%; margin: 10px auto\">\n    <div style=\"margin-bottom: 10px\">\n      <el-button @click=\"$router.back()\"><< 返回</el-button>\n    </div>\n\n    <div class=\"card\">\n      <el-form :model=\"form\" label-width=\"120px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <div style=\"text-align: center; font-size: 24px; margin: 30px 0\">发布商品</div>\n\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"名称\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"价格\" prop=\"price\">\n          <el-input v-model=\"form.price\" placeholder=\"价格\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"分类\" prop=\"category\">\n          <el-select v-model=\"form.category\" style=\"width: 100%\">\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"库存\" prop=\"stock\">\n          <el-input-number v-model=\"form.stock\" :min=\"1\" :max=\"9999\" controls-position=\"right\" />\n        </el-form-item>\n\n        <el-form-item label=\"图片\" prop=\"img\">\n          <el-upload\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleImgSuccess\"\n          >\n            <el-button type=\"primary\">上传图片</el-button>\n          </el-upload>\n        </el-form-item>\n\n        <el-form-item label=\"发货地址\" prop=\"address\">\n          <el-input v-model=\"form.address\" placeholder=\"发货地址\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"上架状态\" prop=\"saleStatus\">\n          <el-radio-group v-model=\"form.saleStatus\">\n            <el-radio label=\"上架\"></el-radio>\n            <el-radio label=\"下架\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"详情\" prop=\"content\">\n          <div id=\"editor\"></div>\n        </el-form-item>\n\n        <div style=\"text-align: center; margin-bottom: 20px\">\n          <el-button size=\"medium\" type=\"primary\" @click=\"save\">确认发布</el-button>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport E from \"wangeditor\";\nexport default {\n  name: \"AddGoods\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: {\n        saleStatus: '下架',\n        stock: 1  // ✅ 默认库存为1\n      },\n      rules: {\n        name: [{ required: true, message: '请输入商品名称', trigger: 'blur' }],\n        price: [{ required: true, message: '请输入商品价格', trigger: 'blur' }],\n        category: [{ required: true, message: '请选择商品分类', trigger: 'blur' }],\n        address: [{ required: true, message: '请输入发货地址', trigger: 'blur' }],\n        stock: [{ required: true, message: '请输入库存数量', trigger: 'blur' }]  // ✅ 校验规则\n      },\n      editor: null,\n    };\n  },\n  mounted() {\n    this.loadCategory();\n    this.loadGoods();\n  },\n  methods: {\n    loadGoods() {\n      if (this.id) {\n        this.$request.get('/goods/selectById/' + this.id).then(res => {\n          this.form = res.data || {};\n          this.setRichText(this.form.content);\n        });\n      } else {\n        this.setRichText('');\n      }\n    },\n    loadCategory() {\n      this.$request.get('/category/selectAll').then(res => {\n        this.categoryList = res.data || [];\n      });\n    },\n    save() {\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/goods/update' : '/goods/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('发布成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handleImgSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    },\n    setRichText(html) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img',\n        };\n        this.editor.create();\n        this.editor.txt.html(html);\n      });\n    },\n  }\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"AA+DA,OAAAA,CAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,EAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;MACAG,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MACAC,IAAA;QACAC,UAAA;QACAC,KAAA;MACA;;MACAC,KAAA;QACAd,IAAA;UAAAe,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,KAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAE,QAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAG,OAAA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAJ,KAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;;MACAI,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,SAAAtB,EAAA;QACA,KAAAwB,QAAA,CAAAC,GAAA,6BAAAzB,EAAA,EAAA0B,IAAA,CAAAC,GAAA;UACA,KAAAlB,IAAA,GAAAkB,GAAA,CAAA5B,IAAA;UACA,KAAA6B,WAAA,MAAAnB,IAAA,CAAAoB,OAAA;QACA;MACA;QACA,KAAAD,WAAA;MACA;IACA;IACAP,aAAA;MACA,KAAAG,QAAA,CAAAC,GAAA,wBAAAC,IAAA,CAAAC,GAAA;QACA,KAAAnB,YAAA,GAAAmB,GAAA,CAAA5B,IAAA;MACA;IACA;IACA+B,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAzB,IAAA,CAAAoB,OAAA,QAAAV,MAAA,CAAAgB,GAAA,CAAAC,IAAA;UACA,KAAAZ,QAAA;YACAa,GAAA,OAAA5B,IAAA,CAAAT,EAAA;YACAsC,MAAA,OAAA7B,IAAA,CAAAT,EAAA;YACAD,IAAA,OAAAU;UACA,GAAAiB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAY,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAf,GAAA,CAAAgB,GAAA;YACA;UACA;QACA;MACA;IACA;IACAC,iBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA,KAAAtC,IAAA,CAAAuC,GAAA,GAAAH,QAAA,CAAA9C,IAAA;IACA;IACA6B,YAAAQ,IAAA;MACA,KAAAa,SAAA;QACA,KAAA9B,MAAA,OAAAtB,CAAA;QACA,KAAAsB,MAAA,CAAA+B,MAAA,CAAAC,eAAA,QAAAC,QAAA;QACA,KAAAjC,MAAA,CAAA+B,MAAA,CAAAG,cAAA;QACA,KAAAlC,MAAA,CAAA+B,MAAA,CAAAI,gBAAA;UACAC,KAAA,OAAApD,IAAA,CAAAoD;QACA;QACA,KAAApC,MAAA,CAAA+B,MAAA,CAAAM,eAAA;UACAC,IAAA;QACA;QACA,KAAAtC,MAAA,CAAAuC,MAAA;QACA,KAAAvC,MAAA,CAAAgB,GAAA,CAAAC,IAAA,CAAAA,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}