{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"FrontGoods\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      stockDialogVisible: false,\n      currentRow: null,\n      editedStock: 0\n    };\n  },\n  created() {\n    this.fetchGoodsList();\n  },\n  methods: {\n    // 获取商品分页数据\n    fetchGoodsList() {\n      this.$request.get(\"/goods/selectPage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        if (res.code === \"200\") {\n          this.tableData = res.data?.list || [];\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    // 编辑商品\n    handleEdit(row) {\n      this.$router.push(\"/front/addGoods?id=\" + row.id);\n    },\n    // 删除商品\n    handleDelete(id) {\n      this.$confirm(\"您确定删除该商品吗？\", \"确认操作\", {\n        type: \"warning\"\n      }).then(() => {\n        return this.$request.delete(`/goods/delete/${id}`);\n      }).then(res => {\n        if (res.code === \"200\") {\n          this.$message.success(\"删除成功\");\n          this.fetchGoodsList();\n        } else {\n          this.$message.error(res.msg);\n        }\n      }).catch(() => {});\n    },\n    // 上/下架切换\n    toggleSaleStatus(row) {\n      const newStatus = row.saleStatus === \"上架\" ? \"下架\" : \"上架\";\n      this.$request.post(\"/goods/updateStockAndSaleStatus\", {\n        id: row.id,\n        stock: row.stock,\n        saleStatus: newStatus\n      }).then(res => {\n        if (res.code === \"200\") {\n          row.saleStatus = newStatus;\n          this.$message.success(`已${newStatus}`);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    // 打开库存弹窗\n    openStockDialog(row) {\n      this.currentRow = row;\n      this.editedStock = row.stock;\n      this.stockDialogVisible = true;\n    },\n    // 确认库存修改\n    confirmStockUpdate() {\n      this.$request.post(\"/goods/updateStockAndSaleStatus\", {\n        id: this.currentRow.id,\n        stock: this.editedStock,\n        saleStatus: this.currentRow.saleStatus\n      }).then(res => {\n        if (res.code === \"200\") {\n          this.currentRow.stock = this.editedStock;\n          this.$message.success(\"库存已更新\");\n          this.stockDialogVisible = false;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    // 分页切换\n    handlePageChange(page) {\n      this.pageNum = page;\n      this.fetchGoodsList();\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","stockDialogVisible","currentRow","editedStock","created","fetchGoodsList","methods","$request","get","params","then","res","code","list","$message","error","msg","handleEdit","row","$router","push","id","handleDelete","$confirm","type","delete","success","catch","toggleSaleStatus","newStatus","saleStatus","post","stock","openStockDialog","confirmStockUpdate","handlePageChange","page"],"sources":["src/views/front/Goods.vue"],"sourcesContent":["<template>\n  <div class=\"goods-container\">\n    <el-card class=\"card-box\">\n      <el-table\n        :data=\"tableData\"\n        stripe\n        border\n        empty-text=\"暂无商品数据\"\n        highlight-current-row\n        style=\"width: 100%; table-layout: fixed\"\n      >\n        <!-- 商品名称 -->\n        <el-table-column prop=\"name\" label=\"名称\" align=\"center\" show-overflow-tooltip />\n\n        <!-- 商品价格 -->\n        <el-table-column label=\"价格\" width=\"100\" align=\"center\">\n          <template v-slot=\"scope\">\n            <span class=\"price\">￥{{ scope.row.price }}</span>\n          </template>\n        </el-table-column>\n\n        <!-- 商品库存 -->\n        <el-table-column label=\"库存\" width=\"100\" align=\"center\">\n          <template v-slot=\"scope\">\n            <span>{{ scope.row.stock }} 件</span>\n          </template>\n        </el-table-column>\n\n        <!-- 上架状态 -->\n        <el-table-column label=\"上架状态\" width=\"100\" align=\"center\">\n          <template v-slot=\"scope\">\n            <el-tag :type=\"scope.row.saleStatus === '上架' ? 'success' : 'info'\">\n              {{ scope.row.saleStatus }}\n            </el-tag>\n          </template>\n        </el-table-column>\n\n        <!-- 浏览量 -->\n        <el-table-column prop=\"readCount\" label=\"浏览量\" width=\"100\" align=\"center\" />\n\n        <!-- 操作 -->\n        <el-table-column label=\"操作\" align=\"center\">\n          <template v-slot=\"scope\">\n            <div class=\"btn-group\">\n              <el-tooltip content=\"编辑商品\" placement=\"top\">\n                <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleEdit(scope.row)\" />\n              </el-tooltip>\n              <el-tooltip content=\"删除商品\" placement=\"top\">\n                <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row.id)\" />\n              </el-tooltip>\n              <el-tooltip content=\"修改库存\" placement=\"top\">\n                <el-button size=\"mini\" icon=\"el-icon-s-tools\" @click=\"openStockDialog(scope.row)\" />\n              </el-tooltip>\n              <el-tooltip :content=\"scope.row.saleStatus === '上架' ? '点击下架' : '点击上架'\" placement=\"top\">\n                <el-button\n                  size=\"mini\"\n                  :type=\"scope.row.saleStatus === '上架' ? 'warning' : 'success'\"\n                  @click=\"toggleSaleStatus(scope.row)\"\n                >\n                  {{ scope.row.saleStatus === '上架' ? '下架' : '上架' }}\n                </el-button>\n              </el-tooltip>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination-bar\">\n        <el-pagination\n          background\n          @current-change=\"handlePageChange\"\n          :current-page=\"pageNum\"\n          :page-size=\"pageSize\"\n          layout=\"total, prev, pager, next\"\n          :total=\"total\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 修改库存弹窗 -->\n    <el-dialog\n      title=\"修改库存\"\n      :visible.sync=\"stockDialogVisible\"\n      width=\"400px\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-input-number v-model=\"editedStock\" :min=\"0\" controls-position=\"right\" style=\"width: 100%; margin-bottom: 20px\" />\n      <div style=\"text-align: right\">\n        <el-button @click=\"stockDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmStockUpdate\">确认修改</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"FrontGoods\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      stockDialogVisible: false,\n      currentRow: null,\n      editedStock: 0,\n    };\n  },\n  created() {\n    this.fetchGoodsList();\n  },\n  methods: {\n    // 获取商品分页数据\n    fetchGoodsList() {\n      this.$request\n        .get(\"/goods/selectPage\", {\n          params: { pageNum: this.pageNum, pageSize: this.pageSize },\n        })\n        .then((res) => {\n          if (res.code === \"200\") {\n            this.tableData = res.data?.list || [];\n            this.total = res.data?.total;\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n    },\n\n    // 编辑商品\n    handleEdit(row) {\n      this.$router.push(\"/front/addGoods?id=\" + row.id);\n    },\n\n    // 删除商品\n    handleDelete(id) {\n      this.$confirm(\"您确定删除该商品吗？\", \"确认操作\", { type: \"warning\" })\n        .then(() => {\n          return this.$request.delete(`/goods/delete/${id}`);\n        })\n        .then((res) => {\n          if (res.code === \"200\") {\n            this.$message.success(\"删除成功\");\n            this.fetchGoodsList();\n          } else {\n            this.$message.error(res.msg);\n          }\n        })\n        .catch(() => {});\n    },\n\n    // 上/下架切换\n    toggleSaleStatus(row) {\n      const newStatus = row.saleStatus === \"上架\" ? \"下架\" : \"上架\";\n      this.$request\n        .post(\"/goods/updateStockAndSaleStatus\", {\n          id: row.id,\n          stock: row.stock,\n          saleStatus: newStatus,\n        })\n        .then((res) => {\n          if (res.code === \"200\") {\n            row.saleStatus = newStatus;\n            this.$message.success(`已${newStatus}`);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n    },\n\n    // 打开库存弹窗\n    openStockDialog(row) {\n      this.currentRow = row;\n      this.editedStock = row.stock;\n      this.stockDialogVisible = true;\n    },\n\n    // 确认库存修改\n    confirmStockUpdate() {\n      this.$request\n        .post(\"/goods/updateStockAndSaleStatus\", {\n          id: this.currentRow.id,\n          stock: this.editedStock,\n          saleStatus: this.currentRow.saleStatus,\n        })\n        .then((res) => {\n          if (res.code === \"200\") {\n            this.currentRow.stock = this.editedStock;\n            this.$message.success(\"库存已更新\");\n            this.stockDialogVisible = false;\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n    },\n\n    // 分页切换\n    handlePageChange(page) {\n      this.pageNum = page;\n      this.fetchGoodsList();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.goods-container {\n  width: 90%;\n  margin: 30px auto;\n}\n\n.card-box {\n  padding: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n  border-radius: 12px;\n}\n\n.pagination-bar {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.btn-group {\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.price {\n  color: red;\n  font-weight: bold;\n}\n</style>\n"],"mappings":";AAiGA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,kBAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACA;IACAD,eAAA;MACA,KAAAE,QAAA,CACAC,GAAA;QACAC,MAAA;UAAAX,OAAA,OAAAA,OAAA;UAAAC,QAAA,OAAAA;QAAA;MACA,GACAW,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAf,SAAA,GAAAc,GAAA,CAAAf,IAAA,EAAAiB,IAAA;UACA,KAAAb,KAAA,GAAAW,GAAA,CAAAf,IAAA,EAAAI,KAAA;QACA;UACA,KAAAc,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IAEA;IACAC,WAAAC,GAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,yBAAAF,GAAA,CAAAG,EAAA;IACA;IAEA;IACAC,aAAAD,EAAA;MACA,KAAAE,QAAA;QAAAC,IAAA;MAAA,GACAd,IAAA;QACA,YAAAH,QAAA,CAAAkB,MAAA,kBAAAJ,EAAA;MACA,GACAX,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAE,QAAA,CAAAY,OAAA;UACA,KAAArB,cAAA;QACA;UACA,KAAAS,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA,GACAW,KAAA;IACA;IAEA;IACAC,iBAAAV,GAAA;MACA,MAAAW,SAAA,GAAAX,GAAA,CAAAY,UAAA;MACA,KAAAvB,QAAA,CACAwB,IAAA;QACAV,EAAA,EAAAH,GAAA,CAAAG,EAAA;QACAW,KAAA,EAAAd,GAAA,CAAAc,KAAA;QACAF,UAAA,EAAAD;MACA,GACAnB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACAM,GAAA,CAAAY,UAAA,GAAAD,SAAA;UACA,KAAAf,QAAA,CAAAY,OAAA,KAAAG,SAAA;QACA;UACA,KAAAf,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IAEA;IACAiB,gBAAAf,GAAA;MACA,KAAAhB,UAAA,GAAAgB,GAAA;MACA,KAAAf,WAAA,GAAAe,GAAA,CAAAc,KAAA;MACA,KAAA/B,kBAAA;IACA;IAEA;IACAiC,mBAAA;MACA,KAAA3B,QAAA,CACAwB,IAAA;QACAV,EAAA,OAAAnB,UAAA,CAAAmB,EAAA;QACAW,KAAA,OAAA7B,WAAA;QACA2B,UAAA,OAAA5B,UAAA,CAAA4B;MACA,GACApB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAV,UAAA,CAAA8B,KAAA,QAAA7B,WAAA;UACA,KAAAW,QAAA,CAAAY,OAAA;UACA,KAAAzB,kBAAA;QACA;UACA,KAAAa,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IAEA;IACAmB,iBAAAC,IAAA;MACA,KAAAtC,OAAA,GAAAsC,IAAA;MACA,KAAA/B,cAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}