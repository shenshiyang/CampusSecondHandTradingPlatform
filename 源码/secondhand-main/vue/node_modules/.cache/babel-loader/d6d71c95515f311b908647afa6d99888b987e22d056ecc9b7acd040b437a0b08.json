{"ast":null,"code":"export default {\n  name: 'Posts',\n  data() {\n    return {\n      circles: [],\n      circle: '全部',\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 4,\n      loading: false\n    };\n  },\n  created() {\n    this.fetchCircles();\n    this.load();\n  },\n  methods: {\n    /* 读取圈子 */\n    async fetchCircles() {\n      const {\n        data\n      } = await this.$request.get('/circles/selectAll');\n      this.circles = data || [];\n    },\n    /* 点击圈子 */\n    loadCircle(name) {\n      if (this.circle === name) return; // 避免重复请求\n      this.circle = name;\n      this.load(1);\n    },\n    /* 读取帖子 */\n    async load(page = this.pageNum) {\n      this.pageNum = page;\n      this.loading = true;\n      const {\n        code,\n        data,\n        msg\n      } = await this.$request.get('/posts/selectFrontPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          circle: this.circle === '全部' ? null : this.circle\n        }\n      });\n      this.loading = false;\n      if (code === '200') {\n        this.tableData = data.list;\n        this.total = data.total;\n      } else {\n        this.$message.error(msg);\n      }\n    },\n    /* 分页切换 */\n    handleCurrentChange(page) {\n      this.load(page);\n    }\n  }\n};","map":{"version":3,"names":["name","data","circles","circle","tableData","total","pageNum","pageSize","loading","created","fetchCircles","load","methods","$request","get","loadCircle","page","code","msg","params","list","$message","error","handleCurrentChange"],"sources":["src/views/front/Posts.vue"],"sourcesContent":["<template>\n  <div class=\"posts-page\">\n    <!-- 圈子筛选区 -->\n    <section class=\"circle-section\">\n      <h2 class=\"section-title\">\n        <i class=\"el-icon-collection-tag\"></i>\n        圈子分类\n      </h2>\n      <div class=\"circle-wrap\">\n        <!-- 「全部」选项 -->\n        <div\n          class=\"circle-card\"\n          :class=\"{ active: circle === '全部' }\"\n          @click=\"loadCircle('全部')\"\n        >\n          <div class=\"circle-icon\">\n            <img src=\"@/assets/imgs/全部.png\" alt=\"全部\" />\n          </div>\n          <span>全部</span>\n        </div>\n\n        <!-- 其余圈子 -->\n        <div\n          v-for=\"c in circles\"\n          :key=\"c.id\"\n          class=\"circle-card\"\n          :class=\"{ active: circle === c.name }\"\n          @click=\"loadCircle(c.name)\"\n        >\n          <div class=\"circle-icon\">\n            <img :src=\"c.img\" :alt=\"c.name\" />\n          </div>\n          <span>{{ c.name }}</span>\n        </div>\n      </div>\n    </section>\n\n    <!-- 帖子列表区 -->\n    <section class=\"posts-section\">\n      <h2 class=\"section-title\">\n        <i class=\"el-icon-document\"></i>\n        {{ circle === '全部' ? '全部帖子' : circle + '圈子' }}\n      </h2>\n\n      <!-- 骨架屏 -->\n      <template v-if=\"loading\">\n        <el-skeleton :rows=\"5\" animated class=\"post-skeleton\" />\n      </template>\n\n      <!-- 帖子列表 -->\n      <template v-else>\n        <transition-group name=\"post-list\">\n          <el-card\n            v-for=\"p in tableData\"\n            :key=\"p.id\"\n            class=\"post-card\"\n            shadow=\"hover\"\n            @click.native=\"$router.push(`/front/postsDetail?id=${p.id}`)\"\n          >\n            <div class=\"post-main\">\n              <!-- 文字区 -->\n              <div class=\"post-body\">\n                <h3 class=\"post-title\">{{ p.title }}</h3>\n                <p class=\"post-descr\">{{ p.descr }}</p>\n                <div class=\"post-meta\">\n                  <span class=\"meta-item\">\n                    <i class=\"el-icon-user\" />\n                    <span class=\"meta-text\">{{ p.userName }}</span>\n                  </span>\n                  <span class=\"meta-item\">\n                    <i class=\"el-icon-time\" />\n                    <span class=\"meta-text\">{{ p.time }}</span>\n                  </span>\n                  <span class=\"meta-item\">\n                    <i class=\"el-icon-reading\" />\n                    <span class=\"meta-text\">{{ p.readCount }}次阅读</span>\n                  </span>\n                </div>\n              </div>\n\n              <!-- 缩略图 -->\n              <el-image\n                v-if=\"p.img\"\n                :src=\"p.img\"\n                :preview-src-list=\"[p.img]\"\n                class=\"post-img\"\n                fit=\"cover\"\n              >\n                <div slot=\"error\" class=\"image-error\">\n                  <i class=\"el-icon-picture-outline\"></i>\n                </div>\n              </el-image>\n            </div>\n          </el-card>\n        </transition-group>\n\n        <!-- 分页器 -->\n        <el-pagination\n          v-if=\"total\"\n          class=\"pager\"\n          background\n          layout=\"total, prev, pager, next\"\n          :current-page=\"pageNum\"\n          :page-size=\"pageSize\"\n          :total=\"total\"\n          :page-sizes=\"[4, 8, 12]\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </template>\n    </section>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Posts',\n  data() {\n    return {\n      circles: [],\n      circle: '全部',\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 4,\n      loading: false\n    }\n  },\n  created() {\n    this.fetchCircles()\n    this.load()\n  },\n  methods: {\n    /* 读取圈子 */\n    async fetchCircles() {\n      const { data } = await this.$request.get('/circles/selectAll')\n      this.circles = data || []\n    },\n\n    /* 点击圈子 */\n    loadCircle(name) {\n      if (this.circle === name) return // 避免重复请求\n      this.circle = name\n      this.load(1)\n    },\n\n    /* 读取帖子 */\n    async load(page = this.pageNum) {\n      this.pageNum = page\n      this.loading = true\n      const { code, data, msg } = await this.$request.get('/posts/selectFrontPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          circle: this.circle === '全部' ? null : this.circle\n        }\n      })\n      this.loading = false\n      if (code === '200') {\n        this.tableData = data.list\n        this.total = data.total\n      } else {\n        this.$message.error(msg)\n      }\n    },\n\n    /* 分页切换 */\n    handleCurrentChange(page) {\n      this.load(page)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.posts-page {\n  width: 80%;\n  max-width: 1200px;\n  margin: 30px auto;\n  padding: 0 20px;\n}\n\n/* 区块标题 */\n.section-title {\n  font-size: 20px;\n  font-weight: 500;\n  color: #303133;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.section-title i {\n  color: #409EFF;\n  font-size: 24px;\n}\n\n/* 圈子区域 */\n.circle-section {\n  background: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  margin-bottom: 30px;\n}\n\n.circle-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n}\n\n.circle-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: #f5f7fa;\n  min-width: 100px;\n}\n\n.circle-icon {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-bottom: 8px;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.circle-icon img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.circle-card span {\n  font-size: 14px;\n  color: #606266;\n}\n\n.circle-card:hover {\n  transform: translateY(-2px);\n  background: #ecf5ff;\n}\n\n.circle-card.active {\n  background: #409EFF;\n  color: #fff;\n}\n\n.circle-card.active span {\n  color: #fff;\n}\n\n/* 帖子区域 */\n.posts-section {\n  background: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.post-skeleton {\n  padding: 20px;\n}\n\n/* 帖子卡片 */\n.post-card {\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.post-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.post-main {\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n}\n\n.post-body {\n  flex: 1;\n  overflow: hidden;\n}\n\n.post-title {\n  font-size: 18px;\n  font-weight: 500;\n  color: #303133;\n  margin-bottom: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.post-descr {\n  color: #606266;\n  margin-bottom: 16px;\n  line-height: 1.6;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  line-clamp: 2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.post-meta {\n  display: flex;\n  gap: 24px;\n  color: #909399;\n  font-size: 13px;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.meta-item i {\n  font-size: 16px;\n}\n\n.post-img {\n  width: 120px;\n  height: 120px;\n  border-radius: 8px;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.image-error {\n  width: 100%;\n  height: 100%;\n  background: #f5f7fa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n  font-size: 24px;\n}\n\n/* 分页器 */\n.pager {\n  margin-top: 30px;\n  text-align: center;\n  padding-bottom: 20px;\n}\n\n/* 列表动画 */\n.post-list-enter-active, .post-list-leave-active {\n  transition: all 0.5s ease;\n}\n\n.post-list-enter, .post-list-leave-to {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n.post-list-move {\n  transition: transform 0.5s ease;\n}\n\n/* 响应式调整 */\n@media screen and (max-width: 768px) {\n  .posts-page {\n    width: 95%;\n    padding: 0 10px;\n  }\n\n  .post-main {\n    flex-direction: column;\n  }\n\n  .post-img {\n    width: 100%;\n    height: 200px;\n  }\n\n  .circle-card {\n    min-width: 80px;\n    padding: 12px;\n  }\n}\n</style>\n"],"mappings":"AAkHA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;MACAC,SAAA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAF,aAAA;MACA;QAAAT;MAAA,eAAAY,QAAA,CAAAC,GAAA;MACA,KAAAZ,OAAA,GAAAD,IAAA;IACA;IAEA;IACAc,WAAAf,IAAA;MACA,SAAAG,MAAA,KAAAH,IAAA;MACA,KAAAG,MAAA,GAAAH,IAAA;MACA,KAAAW,IAAA;IACA;IAEA;IACA,MAAAA,KAAAK,IAAA,QAAAV,OAAA;MACA,KAAAA,OAAA,GAAAU,IAAA;MACA,KAAAR,OAAA;MACA;QAAAS,IAAA;QAAAhB,IAAA;QAAAiB;MAAA,eAAAL,QAAA,CAAAC,GAAA;QACAK,MAAA;UACAb,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,MAAA,OAAAA,MAAA,wBAAAA;QACA;MACA;MACA,KAAAK,OAAA;MACA,IAAAS,IAAA;QACA,KAAAb,SAAA,GAAAH,IAAA,CAAAmB,IAAA;QACA,KAAAf,KAAA,GAAAJ,IAAA,CAAAI,KAAA;MACA;QACA,KAAAgB,QAAA,CAAAC,KAAA,CAAAJ,GAAA;MACA;IACA;IAEA;IACAK,oBAAAP,IAAA;MACA,KAAAL,IAAA,CAAAK,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}