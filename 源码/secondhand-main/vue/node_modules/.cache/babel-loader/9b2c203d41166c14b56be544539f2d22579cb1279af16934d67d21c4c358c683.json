{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0,\n      // 今日销售额\n      todayCount: 0 // 今日订单数\n    };\n  },\n\n  mounted() {\n    // 请求今日销售额\n    this.$request.get('/orders/todayTotal').then(res => {\n      this.todayTotal = res.data || 0;\n    });\n    // 请求今日订单数\n    this.$request.get('/orders/todayCount').then(res => {\n      this.todayCount = res.data || 0;\n    });\n    const pieChart = echarts.init(document.getElementById('pie'));\n    const pictorialChart = echarts.init(document.getElementById('pictorial'));\n    const categoryPieChart = echarts.init(document.getElementById('categoryPie'));\n    const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'));\n\n    // 图1：销售额趋势\n    this.$request.get('/orders/lineWithCount').then(res => {\n      const data = res.data || [];\n      const lineOption = {\n        title: {\n          text: '近八日销售额 & 订单数趋势',\n          subtext: '双折线对比图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['销售额', '订单数'],\n          top: '10'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: {\n            rotate: 30\n          }\n        },\n        yAxis: [{\n          type: 'value',\n          name: '销售额（元）'\n        }, {\n          type: 'value',\n          name: '订单数（单）',\n          minInterval: 1\n        }],\n        series: [{\n          name: '销售额',\n          type: 'line',\n          smooth: true,\n          yAxisIndex: 0,\n          data: data.map(v => v.sales),\n          itemStyle: {\n            color: '#5470c6'\n          }\n        }, {\n          name: '订单数',\n          type: 'line',\n          smooth: true,\n          yAxisIndex: 1,\n          data: data.map(v => v.count),\n          itemStyle: {\n            color: '#91cc75'\n          }\n        }]\n      };\n      pieChart.setOption(lineOption);\n    });\n\n    // 图2：商家销售额排行榜\n    this.$request.get('/orders/selectBar').then(res => {\n      const data = (res.data || []).sort((a, b) => b.value - a.value);\n      const horizontalBarOption = {\n        title: {\n          text: '商家销售额排行榜',\n          subtext: '横向条形图（降序）',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '120px',\n          right: '40px',\n          bottom: '50px',\n          top: '80px'\n        },\n        xAxis: {\n          type: 'value',\n          name: '销售额（元）'\n        },\n        yAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          inverse: true,\n          axisLabel: {\n            fontSize: 12\n          }\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          barWidth: '50%',\n          data: data.map(v => v.value),\n          itemStyle: {\n            color: '#91cc75'\n          },\n          label: {\n            show: true,\n            position: 'right'\n          }\n        }]\n      };\n      pictorialChart.setOption(horizontalBarOption);\n    });\n\n    // 图3：商品种类销量占比\n    this.$request.get('/orders/selectCategorySalesCount').then(res => {\n      const data = res.data || [];\n      const categoryOption = {\n        title: {\n          text: '商品种类销量占比',\n          subtext: '饼图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: '销量',\n          type: 'pie',\n          radius: '60%',\n          center: ['50%', '55%'],\n          data: data.map(item => ({\n            value: item.value,\n            name: item.name\n          })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      categoryPieChart.setOption(categoryOption);\n    });\n\n    // 图4：用户在线趋势图\n    this.$request.get('/user/selectOnlineTrend').then(res => {\n      const data = res.data || [];\n      const onlineOption = {\n        title: {\n          text: '近八日用户在线趋势',\n          subtext: '折线图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: {\n            rotate: 30,\n            interval: 0\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '在线用户数',\n          minInterval: 1\n        },\n        series: [{\n          name: '在线人数',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: {\n            color: '#73c0de'\n          }\n        }]\n      };\n      onlineTrendChart.setOption(onlineOption);\n    });\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","JSON","parse","localStorage","getItem","todayTotal","todayCount","mounted","$request","get","then","res","pieChart","init","document","getElementById","pictorialChart","categoryPieChart","onlineTrendChart","lineOption","title","text","subtext","left","tooltip","trigger","legend","top","xAxis","type","map","v","axisLabel","rotate","yAxis","minInterval","series","smooth","yAxisIndex","sales","itemStyle","color","count","setOption","sort","a","b","value","horizontalBarOption","axisPointer","grid","right","bottom","inverse","fontSize","barWidth","label","show","position","categoryOption","orient","radius","center","item","emphasis","shadowBlur","shadowOffsetX","shadowColor","onlineOption","interval"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n\n    <!-- 📊 今日销售统计卡片：销售额 + 订单数 -->\n    <div class=\"card\" style=\"margin: 10px 0; display: flex; align-items: center; gap: 30px; font-size: 18px\">\n      <!-- 销售额 -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-data\" style=\"font-size: 22px; color: #409EFF\"></i>\n        <span>今日销售额：</span>\n        <span style=\"font-weight: bold; color: red\">￥{{ todayTotal }}</span>\n      </div>\n      <!-- 订单数 -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-order\" style=\"font-size: 22px; color: #67C23A\"></i>\n        <span>今日订单数：</span>\n        <span style=\"font-weight: bold; color: #333\">{{ todayCount }}</span>\n      </div>\n    </div>\n\n    <!-- 第一行：图1、图2 -->\n    <div style=\"display: flex; grid-gap: 10px; margin: 10px 0\">\n      <div style=\"flex: 1; height: 500px\" id=\"pie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"pictorial\" class=\"card\"></div>\n    </div>\n\n    <!-- 第二行：图3、图4 -->\n    <div style=\"display: flex; grid-gap: 10px; margin-top: 20px\">\n      <div style=\"flex: 1; height: 500px\" id=\"categoryPie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"onlineTrendChart\" class=\"card\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0, // 今日销售额\n      todayCount: 0  // 今日订单数\n    }\n  },\n  mounted() {\n    // 请求今日销售额\n    this.$request.get('/orders/todayTotal').then(res => {\n      this.todayTotal = res.data || 0\n    })\n    // 请求今日订单数\n    this.$request.get('/orders/todayCount').then(res => {\n      this.todayCount = res.data || 0\n    })\n\n    const pieChart = echarts.init(document.getElementById('pie'))\n    const pictorialChart = echarts.init(document.getElementById('pictorial'))\n    const categoryPieChart = echarts.init(document.getElementById('categoryPie'))\n    const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'))\n\n    // 图1：销售额趋势\n    this.$request.get('/orders/lineWithCount').then(res => {\n  const data = res.data || []\n  const lineOption = {\n    title: {\n      text: '近八日销售额 & 订单数趋势',\n      subtext: '双折线对比图',\n      left: 'center'\n    },\n    tooltip: { trigger: 'axis' },\n    legend: { data: ['销售额', '订单数'], top: '10' },\n    xAxis: {\n      type: 'category',\n      data: data.map(v => v.name),\n      axisLabel: { rotate: 30 }\n    },\n    yAxis: [\n      {\n        type: 'value',\n        name: '销售额（元）'\n      },\n      {\n        type: 'value',\n        name: '订单数（单）',\n        minInterval: 1\n      }\n    ],\n    series: [\n      {\n        name: '销售额',\n        type: 'line',\n        smooth: true,\n        yAxisIndex: 0,\n        data: data.map(v => v.sales),\n        itemStyle: { color: '#5470c6' }\n      },\n      {\n        name: '订单数',\n        type: 'line',\n        smooth: true,\n        yAxisIndex: 1,\n        data: data.map(v => v.count),\n        itemStyle: { color: '#91cc75' }\n      }\n    ]\n  }\n  pieChart.setOption(lineOption)\n})\n\n\n    // 图2：商家销售额排行榜\n    this.$request.get('/orders/selectBar').then(res => {\n      const data = (res.data || []).sort((a, b) => b.value - a.value)\n      const horizontalBarOption = {\n        title: {\n          text: '商家销售额排行榜',\n          subtext: '横向条形图（降序）',\n          left: 'center'\n        },\n        tooltip: { trigger: 'axis', axisPointer: { type: 'shadow' } },\n        grid: { left: '120px', right: '40px', bottom: '50px', top: '80px' },\n        xAxis: { type: 'value', name: '销售额（元）' },\n        yAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          inverse: true,\n          axisLabel: { fontSize: 12 }\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          barWidth: '50%',\n          data: data.map(v => v.value),\n          itemStyle: { color: '#91cc75' },\n          label: { show: true, position: 'right' }\n        }]\n      }\n      pictorialChart.setOption(horizontalBarOption)\n    })\n\n    // 图3：商品种类销量占比\n    this.$request.get('/orders/selectCategorySalesCount').then(res => {\n      const data = res.data || []\n      const categoryOption = {\n        title: {\n          text: '商品种类销量占比',\n          subtext: '饼图',\n          left: 'center'\n        },\n        tooltip: { trigger: 'item' },\n        legend: { orient: 'vertical', left: 'left' },\n        series: [{\n          name: '销量',\n          type: 'pie',\n          radius: '60%',\n          center: ['50%', '55%'],\n          data: data.map(item => ({ value: item.value, name: item.name })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      }\n      categoryPieChart.setOption(categoryOption)\n    })\n\n    // 图4：用户在线趋势图\n    this.$request.get('/user/selectOnlineTrend').then(res => {\n      const data = res.data || []\n      const onlineOption = {\n        title: {\n          text: '近八日用户在线趋势',\n          subtext: '折线图',\n          left: 'center'\n        },\n        tooltip: { trigger: 'axis' },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: { rotate: 30, interval: 0 }\n        },\n        yAxis: {\n          type: 'value',\n          name: '在线用户数',\n          minInterval: 1\n        },\n        series: [{\n          name: '在线人数',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: { color: '#73c0de' }\n        }]\n      }\n      onlineTrendChart.setOption(onlineOption)\n    })\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}