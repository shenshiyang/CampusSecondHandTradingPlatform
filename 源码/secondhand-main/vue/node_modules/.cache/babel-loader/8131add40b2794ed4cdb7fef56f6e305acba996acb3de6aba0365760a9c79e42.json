{"ast":null,"code":"export default {\n  name: \"Orders\",\n  data() {\n    return {\n      url: 'selectPage',\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      goodsName: null,\n      orderNo: null,\n      status: null,\n      // 发货相关\n      sendDialogVisible: false,\n      sendForm: {},\n      sendRules: {\n        logisticsCompany: [{\n          required: true,\n          message: '请选择物流公司',\n          trigger: 'change'\n        }],\n        logisticsNo: [{\n          required: true,\n          message: '请输入物流单号',\n          trigger: 'blur'\n        }]\n      },\n      logisticsDialogVisible: false,\n      logisticsInfo: null\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    getStatusType(status) {\n      const statusMap = {\n        '已取消': 'danger',\n        '待支付': 'warning',\n        '待发货': 'primary',\n        '待收货': 'info',\n        '已完成': 'success'\n      };\n      return statusMap[status] || 'info';\n    },\n    pay(orderNo) {\n      window.open('http://localhost:9090/alipay/pay?orderNo=' + orderNo);\n    },\n    changeStatus(row, status) {\n      if (status === '待收货') {\n        // 显示发货弹窗\n        this.sendForm = JSON.parse(JSON.stringify(row));\n        this.sendDialogVisible = true;\n        return;\n      }\n      this.$confirm('您确认操作吗？', '确认操作', {\n        type: \"warning\"\n      }).then(response => {\n        this.form = JSON.parse(JSON.stringify(row));\n        this.form.status = status;\n        this.$request.put('/orders/update', this.form).then(res => {\n          if (res.code === '200') {\n            // 表示成功保存\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(e => {});\n    },\n    confirmSend() {\n      this.$refs.sendFormRef.validate(valid => {\n        if (valid) {\n          this.sendForm.status = '待收货';\n          this.sendForm.sendTime = new Date().toLocaleString();\n          this.sendForm.logisticsStatus = '运输中';\n          this.$request.put('/orders/update', this.sendForm).then(res => {\n            if (res.code === '200') {\n              this.$message.success('发货成功');\n              this.sendDialogVisible = false;\n              this.load(1);\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/orders/update' : '/orders/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/orders/' + this.url, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          goodsName: this.goodsName,\n          status: this.status,\n          orderNo: this.orderNo\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list;\n          this.total = res.data?.total;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    reset() {\n      this.goodsName = null;\n      this.orderNo = null;\n      this.status = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    queryLogistics(row) {\n      // TODO: 调用物流查询接口\n      this.$message.info('物流查询功能开发中...');\n    }\n  }\n};","map":{"version":3,"names":["name","data","url","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","goodsName","orderNo","status","sendDialogVisible","sendForm","sendRules","logisticsCompany","required","message","trigger","logisticsNo","logisticsDialogVisible","logisticsInfo","created","load","methods","getStatusType","statusMap","pay","window","open","changeStatus","row","stringify","$confirm","type","then","response","$request","put","res","code","$message","success","error","msg","catch","e","confirmSend","$refs","sendFormRef","validate","valid","sendTime","Date","toLocaleString","logisticsStatus","handleAdd","handleEdit","save","formRef","id","method","del","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","queryLogistics","info"],"sources":["src/views/front/Orders.vue"],"sourcesContent":["<template>\n  <div class=\"orders-container\">\n    <!-- 顶部操作区 -->\n    <div class=\"header-section\">\n      <div class=\"tab-group\">\n        <el-radio-group v-model=\"url\" @change=\"load(1)\" size=\"medium\">\n          <el-radio-button label=\"selectPage\">\n            <i class=\"el-icon-shopping-cart-2\"></i> 我购买的订单\n          </el-radio-button>\n          <el-radio-button label=\"selectSalePage\">\n            <i class=\"el-icon-sold-out\"></i> 我出售的订单\n          </el-radio-button>\n        </el-radio-group>\n      </div>\n      <div class=\"search-section\">\n        <el-input\n          v-model=\"goodsName\"\n          placeholder=\"商品名称\"\n          prefix-icon=\"el-icon-goods\"\n          clearable\n          class=\"search-input\"\n        />\n        <el-input\n          v-model=\"orderNo\"\n          placeholder=\"订单编号\"\n          prefix-icon=\"el-icon-document\"\n          clearable\n          class=\"search-input\"\n        />\n        <el-select\n          v-model=\"status\"\n          placeholder=\"订单状态\"\n          clearable\n          class=\"status-select\"\n        >\n          <el-option value=\"已取消\">\n            <i class=\"el-icon-circle-close\"></i> 已取消\n          </el-option>\n          <el-option value=\"待支付\">\n            <i class=\"el-icon-wallet\"></i> 待支付\n          </el-option>\n          <el-option value=\"待发货\">\n            <i class=\"el-icon-box\"></i> 待发货\n          </el-option>\n          <el-option value=\"待收货\">\n            <i class=\"el-icon-truck\"></i> 待收货\n          </el-option>\n          <el-option value=\"已完成\">\n            <i class=\"el-icon-circle-check\"></i> 已完成\n          </el-option>\n        </el-select>\n        <div class=\"button-group\">\n          <el-button type=\"primary\" @click=\"load(1)\" icon=\"el-icon-search\">搜索</el-button>\n          <el-button type=\"warning\" @click=\"reset\" icon=\"el-icon-refresh-right\">重置</el-button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 订单列表 -->\n    <el-card shadow=\"hover\" class=\"order-card\">\n      <el-table \n        :data=\"tableData\" \n        stripe \n        style=\"width: 100%\"\n        :header-cell-style=\"{background:'#f5f7fa', color: '#606266'}\"\n      >\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable />\n        <el-table-column label=\"商品信息\" min-width=\"300\">\n          <template #default=\"scope\">\n            <div class=\"goods-info\">\n              <el-image \n                v-if=\"scope.row.goodsImg\" \n                :src=\"scope.row.goodsImg\" \n                :preview-src-list=\"[scope.row.goodsImg]\"\n                fit=\"cover\"\n                class=\"goods-image\"\n              />\n              <div class=\"goods-detail\">\n                <div class=\"goods-name\">{{ scope.row.goodsName }}</div>\n                <div class=\"goods-price\">￥{{ scope.row.total }}</div>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"订单信息\" min-width=\"200\">\n          <template #default=\"scope\">\n            <div class=\"order-info\">\n              <div class=\"order-no\">订单号：{{ scope.row.orderNo }}</div>\n              <div class=\"order-time\">下单时间：{{ scope.row.time }}</div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"收货信息\" min-width=\"200\">\n          <template #default=\"scope\">\n            <div class=\"delivery-info\">\n              <div>收货人：{{ scope.row.userName }}</div>\n              <div>电话：{{ scope.row.phone }}</div>\n              <div class=\"address\">地址：{{ scope.row.address }}</div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"saleName\" label=\"卖家\" width=\"120\" align=\"center\" />\n        <el-table-column label=\"订单状态\" width=\"100\" align=\"center\">\n          <template #default=\"scope\">\n            <el-tag\n              :type=\"getStatusType(scope.row.status)\"\n              effect=\"dark\"\n              size=\"medium\"\n            >{{ scope.row.status }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"物流信息\" min-width=\"200\" v-if=\"url === 'selectPage'\">\n          <template #default=\"scope\">\n            <div v-if=\"scope.row.logisticsCompany && scope.row.logisticsNo\" class=\"logistics-info\">\n              <div>物流公司：{{ scope.row.logisticsCompany }}</div>\n              <div>物流单号：{{ scope.row.logisticsNo }}</div>\n              <div v-if=\"scope.row.logisticsStatus\">物流状态：{{ scope.row.logisticsStatus }}</div>\n              <div v-if=\"scope.row.sendTime\">发货时间：{{ scope.row.sendTime }}</div>\n              <el-button \n                v-if=\"scope.row.logisticsNo\" \n                type=\"text\" \n                size=\"mini\"\n                @click=\"queryLogistics(scope.row)\"\n              >查看物流</el-button>\n            </div>\n            <div v-else-if=\"scope.row.status === '待发货'\">等待卖家发货</div>\n            <div v-else>-</div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n          <template #default=\"scope\">\n            <div class=\"action-buttons\">\n              <div v-if=\"url === 'selectPage' && scope.row.status === '待支付'\" class=\"button-group\">\n                <el-button \n                  size=\"mini\" \n                  type=\"primary\" \n                  icon=\"el-icon-wallet\"\n                  @click=\"pay(scope.row.orderNo)\"\n                >支付</el-button>\n                <el-button \n                  size=\"mini\" \n                  type=\"danger\" \n                  icon=\"el-icon-close\"\n                  @click=\"changeStatus(scope.row, '已取消')\"\n                >取消</el-button>\n              </div>\n              <el-button \n                v-if=\"scope.row.status === '待发货' && scope.row.saleId === user.id\" \n                size=\"mini\" \n                type=\"success\" \n                icon=\"el-icon-truck\"\n                @click=\"changeStatus(scope.row, '待收货')\"\n              >发货</el-button>\n              <el-button \n                v-if=\"scope.row.status === '待收货' && scope.row.userId === user.id\" \n                size=\"mini\" \n                type=\"info\" \n                icon=\"el-icon-box\"\n                @click=\"changeStatus(scope.row, '已完成')\"\n              >收货</el-button>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页器 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          background\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pageNum\"\n          :page-size=\"pageSize\"\n          layout=\"total, prev, pager, next\"\n          :total=\"total\"\n        />\n      </div>\n    </el-card>\n\n    <el-dialog title=\"订单信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"商品名称\" prop=\"goodsName\">\n          <el-input v-model=\"form.goodsName\" placeholder=\"商品名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"商品图片\" prop=\"goodsImg\">\n          <el-input v-model=\"form.goodsImg\" placeholder=\"商品图片\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单编号\" prop=\"orderNo\">\n          <el-input v-model=\"form.orderNo\" placeholder=\"订单编号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"总价\" prop=\"total\">\n          <el-input v-model=\"form.total\" placeholder=\"总价\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"下单时间\" prop=\"time\">\n          <el-input v-model=\"form.time\" placeholder=\"下单时间\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"支付单号\" prop=\"payNo\">\n          <el-input v-model=\"form.payNo\" placeholder=\"支付单号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"支付时间\" prop=\"payTime\">\n          <el-input v-model=\"form.payTime\" placeholder=\"支付时间\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"下单人ID\" prop=\"userId\">\n          <el-input v-model=\"form.userId\" placeholder=\"下单人ID\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"收货地址\" prop=\"address\">\n          <el-input v-model=\"form.address\" placeholder=\"收货地址\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"联系方式\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" placeholder=\"联系方式\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"收货人名称\" prop=\"userName\">\n          <el-input v-model=\"form.userName\" placeholder=\"收货人名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"订单状态\" prop=\"status\">\n          <el-input v-model=\"form.status\" placeholder=\"订单状态\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"卖家ID\" prop=\"saleId\">\n          <el-input v-model=\"form.saleId\" placeholder=\"卖家ID\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 发货弹窗 -->\n    <el-dialog title=\"发货信息\" :visible.sync=\"sendDialogVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"sendForm\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"sendRules\" ref=\"sendFormRef\">\n        <el-form-item label=\"订单信息\">\n          <div class=\"order-info\">\n            <div>订单号：{{ sendForm.orderNo }}</div>\n            <div>商品：{{ sendForm.goodsName }}</div>\n            <div>收货人：{{ sendForm.userName }}</div>\n            <div>收货地址：{{ sendForm.address }}</div>\n            <div>联系电话：{{ sendForm.phone }}</div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"物流公司\" prop=\"logisticsCompany\">\n          <el-select v-model=\"sendForm.logisticsCompany\" placeholder=\"请选择物流公司\" style=\"width: 100%\">\n            <el-option label=\"顺丰速运\" value=\"顺丰速运\"></el-option>\n            <el-option label=\"中通快递\" value=\"中通快递\"></el-option>\n            <el-option label=\"圆通速递\" value=\"圆通速递\"></el-option>\n            <el-option label=\"韵达快递\" value=\"韵达快递\"></el-option>\n            <el-option label=\"申通快递\" value=\"申通快递\"></el-option>\n            <el-option label=\"其他\" value=\"其他\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"物流单号\" prop=\"logisticsNo\">\n          <el-input v-model=\"sendForm.logisticsNo\" placeholder=\"请输入物流单号\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"sendDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"confirmSend\">确认发货</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Orders\",\n  data() {\n    return {\n      url: 'selectPage',\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n      },\n      ids: [],\n      goodsName: null,\n      orderNo: null,\n      status: null,\n      // 发货相关\n      sendDialogVisible: false,\n      sendForm: {},\n      sendRules: {\n        logisticsCompany: [{ required: true, message: '请选择物流公司', trigger: 'change' }],\n        logisticsNo: [{ required: true, message: '请输入物流单号', trigger: 'blur' }]\n      },\n      logisticsDialogVisible: false,\n      logisticsInfo: null\n    }\n  },\n  created() {\n    this.load(1)\n  },\n  methods: {\n    getStatusType(status) {\n      const statusMap = {\n        '已取消': 'danger',\n        '待支付': 'warning',\n        '待发货': 'primary',\n        '待收货': 'info',\n        '已完成': 'success'\n      }\n      return statusMap[status] || 'info'\n    },\n    pay(orderNo) {\n      window.open('http://localhost:9090/alipay/pay?orderNo=' + orderNo)\n    },\n    changeStatus(row, status) {\n      if (status === '待收货') {\n        // 显示发货弹窗\n        this.sendForm = JSON.parse(JSON.stringify(row))\n        this.sendDialogVisible = true\n        return\n      }\n      \n      this.$confirm('您确认操作吗？', '确认操作', {type: \"warning\"}).then(response => {\n        this.form = JSON.parse(JSON.stringify(row))\n        this.form.status = status\n        this.$request.put('/orders/update', this.form).then(res => {\n          if (res.code === '200') {  // 表示成功保存\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(e => {})\n    },\n    confirmSend() {\n      this.$refs.sendFormRef.validate((valid) => {\n        if (valid) {\n          this.sendForm.status = '待收货'\n          this.sendForm.sendTime = new Date().toLocaleString()\n          this.sendForm.logisticsStatus = '运输中'\n          \n          this.$request.put('/orders/update', this.sendForm).then(res => {\n            if (res.code === '200') {\n              this.$message.success('发货成功')\n              this.sendDialogVisible = false\n              this.load(1)\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/orders/update' : '/orders/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/orders/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/orders/' + this.url, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          goodsName: this.goodsName,\n          status: this.status,\n          orderNo: this.orderNo,\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data?.list\n          this.total = res.data?.total\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    reset() {\n      this.goodsName = null\n      this.orderNo = null\n      this.status = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    queryLogistics(row) {\n      // TODO: 调用物流查询接口\n      this.$message.info('物流查询功能开发中...')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.orders-container {\n  width: 95%;\n  max-width: 1400px;\n  margin: 20px auto;\n  padding: 0 20px;\n}\n\n.header-section {\n  margin-bottom: 20px;\n}\n\n.tab-group {\n  margin-bottom: 20px;\n}\n\n.search-section {\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n  align-items: center;\n  background: #fff;\n  padding: 16px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.search-input {\n  width: 200px;\n}\n\n.status-select {\n  width: 200px;\n}\n\n.button-group {\n  display: flex;\n  gap: 8px;\n}\n\n.order-card {\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.goods-info {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.goods-image {\n  width: 60px;\n  height: 60px;\n  border-radius: 4px;\n  object-fit: cover;\n}\n\n.goods-detail {\n  flex: 1;\n}\n\n.goods-name {\n  font-size: 14px;\n  color: #303133;\n  margin-bottom: 4px;\n}\n\n.goods-price {\n  color: #f56c6c;\n  font-weight: 500;\n  font-size: 15px;\n}\n\n.order-info, .delivery-info {\n  font-size: 13px;\n  color: #606266;\n  line-height: 1.6;\n}\n\n.order-no {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n.address {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n}\n\n.action-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.button-group {\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  padding: 16px 0;\n}\n\n:deep(.el-table) {\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n:deep(.el-table th) {\n  font-weight: 500;\n}\n\n:deep(.el-radio-button__inner) {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n:deep(.el-select-dropdown__item) {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n:deep(.el-button [class*=\"el-icon-\"] + span) {\n  margin-left: 4px;\n}\n\n:deep(.el-tag) {\n  font-weight: 500;\n}\n\n:deep(.el-table__row) {\n  transition: all 0.3s;\n}\n\n:deep(.el-table__row:hover) {\n  background-color: #f5f7fa !important;\n}\n\n:deep(.el-button--mini) {\n  padding: 6px 12px;\n  font-size: 12px;\n  border-radius: 4px;\n}\n\n:deep(.el-button--mini [class*=\"el-icon-\"]) {\n  margin-right: 4px;\n  font-size: 14px;\n}\n\n:deep(.el-button--primary) {\n  background-color: #409EFF;\n  border-color: #409EFF;\n}\n\n:deep(.el-button--primary:hover) {\n  background-color: #66b1ff;\n  border-color: #66b1ff;\n}\n\n:deep(.el-button--danger) {\n  background-color: #F56C6C;\n  border-color: #F56C6C;\n}\n\n:deep(.el-button--danger:hover) {\n  background-color: #f78989;\n  border-color: #f78989;\n}\n\n.logistics-info {\n  font-size: 13px;\n  color: #606266;\n  line-height: 1.6;\n}\n\n.logistics-info div {\n  margin-bottom: 4px;\n}\n\n.logistics-info .el-button {\n  margin-top: 4px;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}