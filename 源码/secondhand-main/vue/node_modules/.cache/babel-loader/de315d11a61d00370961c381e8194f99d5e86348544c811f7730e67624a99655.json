{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      periodTotal: 0,\n      // 周期销售额\n      periodCount: 0,\n      // 周期订单数\n      dateType: 'week',\n      // 默认本周\n      periodLabel: '本周'\n    };\n  },\n  methods: {\n    changeType(type) {\n      this.dateType = type;\n      this.periodLabel = type === 'week' ? '本周' : type === 'month' ? '本月' : '本年';\n      this.loadAllCharts();\n    },\n    loadAllCharts() {\n      // 周期销售额/订单数\n      this.$request.get('/orders/todayTotal', {\n        params: {\n          dateType: this.dateType\n        }\n      }).then(res => {\n        this.periodTotal = res.data || 0;\n      });\n      this.$request.get('/orders/todayCount', {\n        params: {\n          dateType: this.dateType\n        }\n      }).then(res => {\n        this.periodCount = res.data || 0;\n      });\n      // 图表\n      this.$request.get('/orders/lineWithCount', {\n        params: {\n          dateType: this.dateType\n        }\n      }).then(res => {\n        const data = res.data || [];\n        const lineOption = {\n          title: {\n            text: '近七日销售额 & 订单数趋势',\n            left: 'center',\n            top: 10\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['销售额', '订单数'],\n            top: 50\n          },\n          grid: {\n            top: 90,\n            left: 60,\n            right: 60,\n            bottom: 60\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: {\n              rotate: 30\n            }\n          },\n          yAxis: [{\n            type: 'value',\n            name: '销售额（元）',\n            axisLine: {\n              lineStyle: {\n                color: '#5470c6'\n              }\n            }\n          }, {\n            type: 'value',\n            name: '订单数（单）',\n            minInterval: 1,\n            axisLine: {\n              lineStyle: {\n                color: '#91cc75'\n              }\n            }\n          }],\n          series: [{\n            name: '销售额',\n            type: 'line',\n            smooth: true,\n            yAxisIndex: 0,\n            data: data.map(v => v.sales),\n            itemStyle: {\n              color: '#5470c6'\n            }\n          }, {\n            name: '订单数',\n            type: 'line',\n            smooth: true,\n            yAxisIndex: 1,\n            data: data.map(v => v.count),\n            itemStyle: {\n              color: '#91cc75'\n            }\n          }]\n        };\n        const pieChart = echarts.init(document.getElementById('pie'));\n        pieChart.setOption(lineOption);\n      });\n      this.$request.get('/orders/selectBar', {\n        params: {\n          dateType: this.dateType\n        }\n      }).then(res => {\n        const data = (res.data || []).sort((a, b) => b.value - a.value);\n        const horizontalBarOption = {\n          title: {\n            text: '商家销售额排行榜',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          grid: {\n            left: '120px',\n            right: '40px',\n            bottom: '50px',\n            top: '80px'\n          },\n          xAxis: {\n            type: 'value',\n            name: '销售额（元）'\n          },\n          yAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            inverse: true,\n            axisLabel: {\n              fontSize: 12\n            }\n          },\n          series: [{\n            name: '销售额',\n            type: 'bar',\n            barWidth: '50%',\n            data: data.map(v => v.value),\n            itemStyle: {\n              color: '#91cc75'\n            },\n            label: {\n              show: true,\n              position: 'right'\n            }\n          }]\n        };\n        const pictorialChart = echarts.init(document.getElementById('pictorial'));\n        pictorialChart.setOption(horizontalBarOption);\n      });\n      this.$request.get('/orders/selectCategorySalesCount', {\n        params: {\n          dateType: this.dateType\n        }\n      }).then(res => {\n        const data = res.data || [];\n        const categoryOption = {\n          title: {\n            text: '商品种类销量占比',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [{\n            name: '销量',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '55%'],\n            data: data.map(item => ({\n              value: item.value,\n              name: item.name\n            })),\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        };\n        const categoryPieChart = echarts.init(document.getElementById('categoryPie'));\n        categoryPieChart.setOption(categoryOption);\n      });\n      this.$request.get('/user/selectOnlineTrend', {\n        params: {\n          dateType: this.dateType\n        }\n      }).then(res => {\n        const data = res.data || [];\n        const onlineOption = {\n          title: {\n            text: '近七日用户在线趋势',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: {\n              rotate: 30,\n              interval: 0\n            }\n          },\n          yAxis: {\n            type: 'value',\n            name: '在线用户数',\n            minInterval: 1\n          },\n          series: [{\n            name: '在线人数',\n            type: 'line',\n            smooth: true,\n            data: data.map(v => v.value),\n            itemStyle: {\n              color: '#73c0de'\n            }\n          }]\n        };\n        const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'));\n        onlineTrendChart.setOption(onlineOption);\n      });\n    }\n  },\n  mounted() {\n    this.changeType('week');\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","JSON","parse","localStorage","getItem","periodTotal","periodCount","dateType","periodLabel","methods","changeType","type","loadAllCharts","$request","get","params","then","res","lineOption","title","text","left","top","tooltip","trigger","legend","grid","right","bottom","xAxis","map","v","axisLabel","rotate","yAxis","axisLine","lineStyle","color","minInterval","series","smooth","yAxisIndex","sales","itemStyle","count","pieChart","init","document","getElementById","setOption","sort","a","b","value","horizontalBarOption","axisPointer","inverse","fontSize","barWidth","label","show","position","pictorialChart","categoryOption","orient","radius","center","item","emphasis","shadowBlur","shadowOffsetX","shadowColor","categoryPieChart","onlineOption","interval","onlineTrendChart","mounted"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n\n    <!-- 📊 今日销售统计卡片：销售额 + 订单数 -->\n    <div class=\"card\" style=\"margin: 10px 0; display: flex; align-items: center; gap: 30px; font-size: 18px\">\n      <!-- 销售额 -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-data\" style=\"font-size: 22px; color: #409EFF\"></i>\n        <span>{{ periodLabel }}销售额：</span>\n        <span style=\"font-weight: bold; color: red\">￥{{ periodTotal }}</span>\n      </div>\n      <!-- 订单数 -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-order\" style=\"font-size: 22px; color: #67C23A\"></i>\n        <span>{{ periodLabel }}订单数：</span>\n        <span style=\"font-weight: bold; color: #333\">{{ periodCount }}</span>\n      </div>\n      <!-- 周期切换按钮 -->\n      <div style=\"margin-left: auto;\">\n        <el-button-group>\n          <el-button :type=\"dateType==='week'?'primary':'default'\" @click=\"changeType('week')\">本周</el-button>\n          <el-button :type=\"dateType==='month'?'primary':'default'\" @click=\"changeType('month')\">本月</el-button>\n          <el-button :type=\"dateType==='year'?'primary':'default'\" @click=\"changeType('year')\">本年</el-button>\n        </el-button-group>\n      </div>\n    </div>\n\n    <!-- 第一行：图1、图2 -->\n    <div style=\"display: flex; grid-gap: 10px; margin: 10px 0\">\n      <div style=\"flex: 1; height: 500px\" id=\"pie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"pictorial\" class=\"card\"></div>\n    </div>\n\n    <!-- 第二行：图3、图4 -->\n    <div style=\"display: flex; grid-gap: 10px; margin-top: 20px\">\n      <div style=\"flex: 1; height: 500px\" id=\"categoryPie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"onlineTrendChart\" class=\"card\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      periodTotal: 0, // 周期销售额\n      periodCount: 0, // 周期订单数\n      dateType: 'week', // 默认本周\n      periodLabel: '本周',\n    }\n  },\n  methods: {\n    changeType(type) {\n      this.dateType = type;\n      this.periodLabel = type === 'week' ? '本周' : (type === 'month' ? '本月' : '本年');\n      this.loadAllCharts();\n    },\n    loadAllCharts() {\n      // 周期销售额/订单数\n      this.$request.get('/orders/todayTotal', { params: { dateType: this.dateType } }).then(res => {\n        this.periodTotal = res.data || 0;\n      });\n      this.$request.get('/orders/todayCount', { params: { dateType: this.dateType } }).then(res => {\n        this.periodCount = res.data || 0;\n      });\n      // 图表\n      this.$request.get('/orders/lineWithCount', { params: { dateType: this.dateType } }).then(res => {\n        const data = res.data || [];\n        const lineOption = {\n          title: { text: '近七日销售额 & 订单数趋势', left: 'center', top: 10 },\n          tooltip: { trigger: 'axis' },\n          legend: { data: ['销售额', '订单数'], top: 50 },\n          grid: { top: 90, left: 60, right: 60, bottom: 60 },\n          xAxis: { type: 'category', data: data.map(v => v.name), axisLabel: { rotate: 30 } },\n          yAxis: [\n            { type: 'value', name: '销售额（元）', axisLine: { lineStyle: { color: '#5470c6' } } },\n            { type: 'value', name: '订单数（单）', minInterval: 1, axisLine: { lineStyle: { color: '#91cc75' } } }\n          ],\n          series: [\n            { name: '销售额', type: 'line', smooth: true, yAxisIndex: 0, data: data.map(v => v.sales), itemStyle: { color: '#5470c6' } },\n            { name: '订单数', type: 'line', smooth: true, yAxisIndex: 1, data: data.map(v => v.count), itemStyle: { color: '#91cc75' } }\n          ]\n        };\n        const pieChart = echarts.init(document.getElementById('pie'));\n        pieChart.setOption(lineOption);\n      });\n      this.$request.get('/orders/selectBar', { params: { dateType: this.dateType } }).then(res => {\n        const data = (res.data || []).sort((a, b) => b.value - a.value);\n        const horizontalBarOption = {\n          title: { text: '商家销售额排行榜', left: 'center' },\n          tooltip: { trigger: 'axis', axisPointer: { type: 'shadow' } },\n          grid: { left: '120px', right: '40px', bottom: '50px', top: '80px' },\n          xAxis: { type: 'value', name: '销售额（元）' },\n          yAxis: { type: 'category', data: data.map(v => v.name), inverse: true, axisLabel: { fontSize: 12 } },\n          series: [{ name: '销售额', type: 'bar', barWidth: '50%', data: data.map(v => v.value), itemStyle: { color: '#91cc75' }, label: { show: true, position: 'right' } }]\n        };\n        const pictorialChart = echarts.init(document.getElementById('pictorial'));\n        pictorialChart.setOption(horizontalBarOption);\n      });\n      this.$request.get('/orders/selectCategorySalesCount', { params: { dateType: this.dateType } }).then(res => {\n        const data = res.data || [];\n        const categoryOption = {\n          title: { text: '商品种类销量占比', left: 'center' },\n          tooltip: { trigger: 'item' },\n          legend: { orient: 'vertical', left: 'left' },\n          series: [{ name: '销量', type: 'pie', radius: '60%', center: ['50%', '55%'], data: data.map(item => ({ value: item.value, name: item.name })), emphasis: { itemStyle: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' } } }]\n        };\n        const categoryPieChart = echarts.init(document.getElementById('categoryPie'));\n        categoryPieChart.setOption(categoryOption);\n      });\n      this.$request.get('/user/selectOnlineTrend', { params: { dateType: this.dateType } }).then(res => {\n        const data = res.data || [];\n        const onlineOption = {\n          title: { text: '近七日用户在线趋势', left: 'center' },\n          tooltip: { trigger: 'axis' },\n          xAxis: { type: 'category', data: data.map(v => v.name), axisLabel: { rotate: 30, interval: 0 } },\n          yAxis: { type: 'value', name: '在线用户数', minInterval: 1 },\n          series: [{ name: '在线人数', type: 'line', smooth: true, data: data.map(v => v.value), itemStyle: { color: '#73c0de' } }]\n        };\n        const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'));\n        onlineTrendChart.setOption(onlineOption);\n      });\n    }\n  },\n  mounted() {\n    this.changeType('week');\n  }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}