{"ast":null,"code":"import * as echarts from 'echarts';\nimport { formatDate } from '@/utils/date';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0,\n      todayCount: 0,\n      dateRange: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      charts: {\n        pie: null,\n        pictorial: null,\n        categoryPie: null,\n        onlineTrend: null\n      }\n    };\n  },\n  created() {\n    // 设置默认时间范围为最近7天\n    const end = new Date();\n    const start = new Date();\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n    this.dateRange = [start, end];\n  },\n  mounted() {\n    this.initCharts();\n    this.loadData();\n  },\n  methods: {\n    initCharts() {\n      this.charts.pie = echarts.init(document.getElementById('pie'));\n      this.charts.pictorial = echarts.init(document.getElementById('pictorial'));\n      this.charts.categoryPie = echarts.init(document.getElementById('categoryPie'));\n      this.charts.onlineTrend = echarts.init(document.getElementById('onlineTrendChart'));\n    },\n    loadData() {\n      // 请求今日销售额\n      this.$request.get('/orders/todayTotal').then(res => {\n        this.todayTotal = res.data || 0;\n      });\n      // 请求今日订单数\n      this.$request.get('/orders/todayCount').then(res => {\n        this.todayCount = res.data || 0;\n      });\n\n      // 加载图表数据\n      this.loadChartData();\n    },\n    loadChartData() {\n      const [startDate, endDate] = this.dateRange;\n      const start = formatDate(startDate, 'yyyy-MM-dd');\n      const end = formatDate(endDate, 'yyyy-MM-dd');\n\n      // 加载销售额趋势图\n      this.$request.get('/orders/lineWithCount', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = res.data || [];\n        const lineOption = {\n          title: {\n            text: `${start} 至 ${end} 销售额 & 订单数趋势`,\n            left: 'center',\n            top: 10\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['销售额', '订单数'],\n            top: 50\n          },\n          grid: {\n            top: 90,\n            left: 60,\n            right: 60,\n            bottom: 60\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: {\n              rotate: 30\n            }\n          },\n          yAxis: [{\n            type: 'value',\n            name: '销售额（元）',\n            axisLine: {\n              lineStyle: {\n                color: '#5470c6'\n              }\n            }\n          }, {\n            type: 'value',\n            name: '订单数（单）',\n            minInterval: 1,\n            axisLine: {\n              lineStyle: {\n                color: '#91cc75'\n              }\n            }\n          }],\n          series: [{\n            name: '销售额',\n            type: 'line',\n            smooth: true,\n            yAxisIndex: 0,\n            data: data.map(v => v.sales),\n            itemStyle: {\n              color: '#5470c6'\n            }\n          }, {\n            name: '订单数',\n            type: 'line',\n            smooth: true,\n            yAxisIndex: 1,\n            data: data.map(v => v.count),\n            itemStyle: {\n              color: '#91cc75'\n            }\n          }]\n        };\n        this.charts.pie.setOption(lineOption);\n      });\n\n      // 加载商家销售额排行榜\n      this.$request.get('/orders/selectBar', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = (res.data || []).sort((a, b) => b.value - a.value);\n        const horizontalBarOption = {\n          title: {\n            text: `${start} 至 ${end} 商家销售额排行榜`,\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          grid: {\n            left: '120px',\n            right: '40px',\n            bottom: '50px',\n            top: '80px'\n          },\n          xAxis: {\n            type: 'value',\n            name: '销售额（元）'\n          },\n          yAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            inverse: true,\n            axisLabel: {\n              fontSize: 12\n            }\n          },\n          series: [{\n            name: '销售额',\n            type: 'bar',\n            barWidth: '50%',\n            data: data.map(v => v.value),\n            itemStyle: {\n              color: '#91cc75'\n            },\n            label: {\n              show: true,\n              position: 'right'\n            }\n          }]\n        };\n        this.charts.pictorial.setOption(horizontalBarOption);\n      });\n\n      // 加载商品种类销量占比\n      this.$request.get('/orders/selectCategorySalesCount', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = res.data || [];\n        const categoryOption = {\n          title: {\n            text: `${start} 至 ${end} 商品种类销量占比`,\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [{\n            name: '销量',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '55%'],\n            data: data.map(item => ({\n              value: item.value,\n              name: item.name\n            })),\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        };\n        this.charts.categoryPie.setOption(categoryOption);\n      });\n\n      // 加载用户在线趋势图\n      this.$request.get('/user/selectOnlineTrend', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = res.data || [];\n        const onlineOption = {\n          title: {\n            text: `${start} 至 ${end} 用户在线趋势`,\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: {\n              rotate: 30,\n              interval: 0\n            }\n          },\n          yAxis: {\n            type: 'value',\n            name: '在线用户数',\n            minInterval: 1\n          },\n          series: [{\n            name: '在线人数',\n            type: 'line',\n            smooth: true,\n            data: data.map(v => v.value),\n            itemStyle: {\n              color: '#73c0de'\n            }\n          }]\n        };\n        this.charts.onlineTrend.setOption(onlineOption);\n      });\n    },\n    handleDateChange() {\n      this.refreshData();\n    },\n    refreshData() {\n      this.loadChartData();\n    }\n  }\n};","map":{"version":3,"names":["echarts","formatDate","name","data","user","JSON","parse","localStorage","getItem","todayTotal","todayCount","dateRange","pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","charts","pie","pictorial","categoryPie","onlineTrend","created","mounted","initCharts","loadData","methods","init","document","getElementById","$request","get","then","res","loadChartData","startDate","endDate","params","lineOption","title","left","top","tooltip","trigger","legend","grid","right","bottom","xAxis","type","map","v","axisLabel","rotate","yAxis","axisLine","lineStyle","color","minInterval","series","smooth","yAxisIndex","sales","itemStyle","count","setOption","sort","a","b","value","horizontalBarOption","axisPointer","inverse","fontSize","barWidth","label","show","position","categoryOption","orient","radius","center","item","emphasis","shadowBlur","shadowOffsetX","shadowColor","onlineOption","interval","handleDateChange","refreshData"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n\n    <!-- 时间范围选择 -->\n    <div class=\"card\" style=\"margin: 10px 0; padding: 15px\">\n      <el-form :inline=\"true\" :model=\"dateRange\" class=\"date-form\">\n        <el-form-item label=\"时间范围\">\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            value-format=\"yyyy-MM-dd\"\n            :picker-options=\"pickerOptions\"\n            @change=\"handleDateChange\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"refreshData\">查询</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 📊 今日销售统计卡片：销售额 + 订单数 -->\n    <div class=\"card\" style=\"margin: 10px 0; display: flex; align-items: center; gap: 30px; font-size: 18px\">\n      <!-- 销售额 -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-data\" style=\"font-size: 22px; color: #409EFF\"></i>\n        <span>今日销售额：</span>\n        <span style=\"font-weight: bold; color: red\">￥{{ todayTotal }}</span>\n      </div>\n      <!-- 订单数 -->\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-order\" style=\"font-size: 22px; color: #67C23A\"></i>\n        <span>今日订单数：</span>\n        <span style=\"font-weight: bold; color: #333\">{{ todayCount }}</span>\n      </div>\n    </div>\n\n    <!-- 第一行：图1、图2 -->\n    <div style=\"display: flex; grid-gap: 10px; margin: 10px 0\">\n      <div style=\"flex: 1; height: 500px\" id=\"pie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"pictorial\" class=\"card\"></div>\n    </div>\n\n    <!-- 第二行：图3、图4 -->\n    <div style=\"display: flex; grid-gap: 10px; margin-top: 20px\">\n      <div style=\"flex: 1; height: 500px\" id=\"categoryPie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"onlineTrendChart\" class=\"card\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport { formatDate } from '@/utils/date'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0,\n      todayCount: 0,\n      dateRange: [],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      charts: {\n        pie: null,\n        pictorial: null,\n        categoryPie: null,\n        onlineTrend: null\n      }\n    }\n  },\n  created() {\n    // 设置默认时间范围为最近7天\n    const end = new Date()\n    const start = new Date()\n    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n    this.dateRange = [start, end]\n  },\n  mounted() {\n    this.initCharts()\n    this.loadData()\n  },\n  methods: {\n    initCharts() {\n      this.charts.pie = echarts.init(document.getElementById('pie'))\n      this.charts.pictorial = echarts.init(document.getElementById('pictorial'))\n      this.charts.categoryPie = echarts.init(document.getElementById('categoryPie'))\n      this.charts.onlineTrend = echarts.init(document.getElementById('onlineTrendChart'))\n    },\n    loadData() {\n      // 请求今日销售额\n      this.$request.get('/orders/todayTotal').then(res => {\n        this.todayTotal = res.data || 0\n      })\n      // 请求今日订单数\n      this.$request.get('/orders/todayCount').then(res => {\n        this.todayCount = res.data || 0\n      })\n\n      // 加载图表数据\n      this.loadChartData()\n    },\n    loadChartData() {\n      const [startDate, endDate] = this.dateRange\n      const start = formatDate(startDate, 'yyyy-MM-dd')\n      const end = formatDate(endDate, 'yyyy-MM-dd')\n\n      // 加载销售额趋势图\n      this.$request.get('/orders/lineWithCount', {\n        params: { startDate: start, endDate: end }\n      }).then(res => {\n        const data = res.data || []\n        const lineOption = {\n          title: {\n            text: `${start} 至 ${end} 销售额 & 订单数趋势`,\n            left: 'center',\n            top: 10\n          },\n          tooltip: { trigger: 'axis' },\n          legend: {\n            data: ['销售额', '订单数'],\n            top: 50\n          },\n          grid: {\n            top: 90,\n            left: 60,\n            right: 60,\n            bottom: 60\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: { rotate: 30 }\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '销售额（元）',\n              axisLine: { lineStyle: { color: '#5470c6' } }\n            },\n            {\n              type: 'value',\n              name: '订单数（单）',\n              minInterval: 1,\n              axisLine: { lineStyle: { color: '#91cc75' } }\n            }\n          ],\n          series: [\n            {\n              name: '销售额',\n              type: 'line',\n              smooth: true,\n              yAxisIndex: 0,\n              data: data.map(v => v.sales),\n              itemStyle: { color: '#5470c6' }\n            },\n            {\n              name: '订单数',\n              type: 'line',\n              smooth: true,\n              yAxisIndex: 1,\n              data: data.map(v => v.count),\n              itemStyle: { color: '#91cc75' }\n            }\n          ]\n        }\n        this.charts.pie.setOption(lineOption)\n      })\n\n      // 加载商家销售额排行榜\n      this.$request.get('/orders/selectBar', {\n        params: { startDate: start, endDate: end }\n      }).then(res => {\n        const data = (res.data || []).sort((a, b) => b.value - a.value)\n        const horizontalBarOption = {\n          title: {\n            text: `${start} 至 ${end} 商家销售额排行榜`,\n            left: 'center'\n          },\n          tooltip: { trigger: 'axis', axisPointer: { type: 'shadow' } },\n          grid: { left: '120px', right: '40px', bottom: '50px', top: '80px' },\n          xAxis: { type: 'value', name: '销售额（元）' },\n          yAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            inverse: true,\n            axisLabel: { fontSize: 12 }\n          },\n          series: [{\n            name: '销售额',\n            type: 'bar',\n            barWidth: '50%',\n            data: data.map(v => v.value),\n            itemStyle: { color: '#91cc75' },\n            label: { show: true, position: 'right' }\n          }]\n        }\n        this.charts.pictorial.setOption(horizontalBarOption)\n      })\n\n      // 加载商品种类销量占比\n      this.$request.get('/orders/selectCategorySalesCount', {\n        params: { startDate: start, endDate: end }\n      }).then(res => {\n        const data = res.data || []\n        const categoryOption = {\n          title: {\n            text: `${start} 至 ${end} 商品种类销量占比`,\n            left: 'center'\n          },\n          tooltip: { trigger: 'item' },\n          legend: { orient: 'vertical', left: 'left' },\n          series: [{\n            name: '销量',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '55%'],\n            data: data.map(item => ({ value: item.value, name: item.name })),\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        }\n        this.charts.categoryPie.setOption(categoryOption)\n      })\n\n      // 加载用户在线趋势图\n      this.$request.get('/user/selectOnlineTrend', {\n        params: { startDate: start, endDate: end }\n      }).then(res => {\n        const data = res.data || []\n        const onlineOption = {\n          title: {\n            text: `${start} 至 ${end} 用户在线趋势`,\n            left: 'center'\n          },\n          tooltip: { trigger: 'axis' },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: { rotate: 30, interval: 0 }\n          },\n          yAxis: {\n            type: 'value',\n            name: '在线用户数',\n            minInterval: 1\n          },\n          series: [{\n            name: '在线人数',\n            type: 'line',\n            smooth: true,\n            data: data.map(v => v.value),\n            itemStyle: { color: '#73c0de' }\n          }]\n        }\n        this.charts.onlineTrend.setOption(onlineOption)\n      })\n    },\n    handleDateChange() {\n      this.refreshData()\n    },\n    refreshData() {\n      this.loadChartData()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.date-form {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 0;\n}\n\n.date-form .el-form-item {\n  margin-bottom: 0;\n}\n</style>"],"mappings":"AA0DA,YAAAA,OAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,UAAA;MACAC,UAAA;MACAC,SAAA;MACAC,aAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;UACAH,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAC,GAAA,OAAAC,IAAA;YACA,MAAAC,KAAA,OAAAD,IAAA;YACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;YACAL,MAAA,CAAAM,KAAA,UAAAH,KAAA,EAAAF,GAAA;UACA;QACA;MACA;MACAM,MAAA;QACAC,GAAA;QACAC,SAAA;QACAC,WAAA;QACAC,WAAA;MACA;IACA;EACA;EACAC,QAAA;IACA;IACA,MAAAX,GAAA,OAAAC,IAAA;IACA,MAAAC,KAAA,OAAAD,IAAA;IACAC,KAAA,CAAAC,OAAA,CAAAD,KAAA,CAAAE,OAAA;IACA,KAAAV,SAAA,IAAAQ,KAAA,EAAAF,GAAA;EACA;EACAY,QAAA;IACA,KAAAC,UAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACAF,WAAA;MACA,KAAAP,MAAA,CAAAC,GAAA,GAAAxB,OAAA,CAAAiC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,KAAAZ,MAAA,CAAAE,SAAA,GAAAzB,OAAA,CAAAiC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,KAAAZ,MAAA,CAAAG,WAAA,GAAA1B,OAAA,CAAAiC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,KAAAZ,MAAA,CAAAI,WAAA,GAAA3B,OAAA,CAAAiC,IAAA,CAAAC,QAAA,CAAAC,cAAA;IACA;IACAJ,SAAA;MACA;MACA,KAAAK,QAAA,CAAAC,GAAA,uBAAAC,IAAA,CAAAC,GAAA;QACA,KAAA9B,UAAA,GAAA8B,GAAA,CAAApC,IAAA;MACA;MACA;MACA,KAAAiC,QAAA,CAAAC,GAAA,uBAAAC,IAAA,CAAAC,GAAA;QACA,KAAA7B,UAAA,GAAA6B,GAAA,CAAApC,IAAA;MACA;;MAEA;MACA,KAAAqC,aAAA;IACA;IACAA,cAAA;MACA,OAAAC,SAAA,EAAAC,OAAA,SAAA/B,SAAA;MACA,MAAAQ,KAAA,GAAAlB,UAAA,CAAAwC,SAAA;MACA,MAAAxB,GAAA,GAAAhB,UAAA,CAAAyC,OAAA;;MAEA;MACA,KAAAN,QAAA,CAAAC,GAAA;QACAM,MAAA;UAAAF,SAAA,EAAAtB,KAAA;UAAAuB,OAAA,EAAAzB;QAAA;MACA,GAAAqB,IAAA,CAAAC,GAAA;QACA,MAAApC,IAAA,GAAAoC,GAAA,CAAApC,IAAA;QACA,MAAAyC,UAAA;UACAC,KAAA;YACA/B,IAAA,KAAAK,KAAA,MAAAF,GAAA;YACA6B,IAAA;YACAC,GAAA;UACA;UACAC,OAAA;YAAAC,OAAA;UAAA;UACAC,MAAA;YACA/C,IAAA;YACA4C,GAAA;UACA;UACAI,IAAA;YACAJ,GAAA;YACAD,IAAA;YACAM,KAAA;YACAC,MAAA;UACA;UACAC,KAAA;YACAC,IAAA;YACApD,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAvD,IAAA;YACAwD,SAAA;cAAAC,MAAA;YAAA;UACA;UACAC,KAAA,GACA;YACAL,IAAA;YACArD,IAAA;YACA2D,QAAA;cAAAC,SAAA;gBAAAC,KAAA;cAAA;YAAA;UACA,GACA;YACAR,IAAA;YACArD,IAAA;YACA8D,WAAA;YACAH,QAAA;cAAAC,SAAA;gBAAAC,KAAA;cAAA;YAAA;UACA,EACA;UACAE,MAAA,GACA;YACA/D,IAAA;YACAqD,IAAA;YACAW,MAAA;YACAC,UAAA;YACAhE,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAW,KAAA;YACAC,SAAA;cAAAN,KAAA;YAAA;UACA,GACA;YACA7D,IAAA;YACAqD,IAAA;YACAW,MAAA;YACAC,UAAA;YACAhE,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAa,KAAA;YACAD,SAAA;cAAAN,KAAA;YAAA;UACA;QAEA;QACA,KAAAxC,MAAA,CAAAC,GAAA,CAAA+C,SAAA,CAAA3B,UAAA;MACA;;MAEA;MACA,KAAAR,QAAA,CAAAC,GAAA;QACAM,MAAA;UAAAF,SAAA,EAAAtB,KAAA;UAAAuB,OAAA,EAAAzB;QAAA;MACA,GAAAqB,IAAA,CAAAC,GAAA;QACA,MAAApC,IAAA,IAAAoC,GAAA,CAAApC,IAAA,QAAAqE,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAC,KAAA,GAAAF,CAAA,CAAAE,KAAA;QACA,MAAAC,mBAAA;UACA/B,KAAA;YACA/B,IAAA,KAAAK,KAAA,MAAAF,GAAA;YACA6B,IAAA;UACA;UACAE,OAAA;YAAAC,OAAA;YAAA4B,WAAA;cAAAtB,IAAA;YAAA;UAAA;UACAJ,IAAA;YAAAL,IAAA;YAAAM,KAAA;YAAAC,MAAA;YAAAN,GAAA;UAAA;UACAO,KAAA;YAAAC,IAAA;YAAArD,IAAA;UAAA;UACA0D,KAAA;YACAL,IAAA;YACApD,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAvD,IAAA;YACA4E,OAAA;YACApB,SAAA;cAAAqB,QAAA;YAAA;UACA;UACAd,MAAA;YACA/D,IAAA;YACAqD,IAAA;YACAyB,QAAA;YACA7E,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAkB,KAAA;YACAN,SAAA;cAAAN,KAAA;YAAA;YACAkB,KAAA;cAAAC,IAAA;cAAAC,QAAA;YAAA;UACA;QACA;QACA,KAAA5D,MAAA,CAAAE,SAAA,CAAA8C,SAAA,CAAAK,mBAAA;MACA;;MAEA;MACA,KAAAxC,QAAA,CAAAC,GAAA;QACAM,MAAA;UAAAF,SAAA,EAAAtB,KAAA;UAAAuB,OAAA,EAAAzB;QAAA;MACA,GAAAqB,IAAA,CAAAC,GAAA;QACA,MAAApC,IAAA,GAAAoC,GAAA,CAAApC,IAAA;QACA,MAAAiF,cAAA;UACAvC,KAAA;YACA/B,IAAA,KAAAK,KAAA,MAAAF,GAAA;YACA6B,IAAA;UACA;UACAE,OAAA;YAAAC,OAAA;UAAA;UACAC,MAAA;YAAAmC,MAAA;YAAAvC,IAAA;UAAA;UACAmB,MAAA;YACA/D,IAAA;YACAqD,IAAA;YACA+B,MAAA;YACAC,MAAA;YACApF,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAgC,IAAA;cAAAb,KAAA,EAAAa,IAAA,CAAAb,KAAA;cAAAzE,IAAA,EAAAsF,IAAA,CAAAtF;YAAA;YACAuF,QAAA;cACApB,SAAA;gBACAqB,UAAA;gBACAC,aAAA;gBACAC,WAAA;cACA;YACA;UACA;QACA;QACA,KAAArE,MAAA,CAAAG,WAAA,CAAA6C,SAAA,CAAAa,cAAA;MACA;;MAEA;MACA,KAAAhD,QAAA,CAAAC,GAAA;QACAM,MAAA;UAAAF,SAAA,EAAAtB,KAAA;UAAAuB,OAAA,EAAAzB;QAAA;MACA,GAAAqB,IAAA,CAAAC,GAAA;QACA,MAAApC,IAAA,GAAAoC,GAAA,CAAApC,IAAA;QACA,MAAA0F,YAAA;UACAhD,KAAA;YACA/B,IAAA,KAAAK,KAAA,MAAAF,GAAA;YACA6B,IAAA;UACA;UACAE,OAAA;YAAAC,OAAA;UAAA;UACAK,KAAA;YACAC,IAAA;YACApD,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAvD,IAAA;YACAwD,SAAA;cAAAC,MAAA;cAAAmC,QAAA;YAAA;UACA;UACAlC,KAAA;YACAL,IAAA;YACArD,IAAA;YACA8D,WAAA;UACA;UACAC,MAAA;YACA/D,IAAA;YACAqD,IAAA;YACAW,MAAA;YACA/D,IAAA,EAAAA,IAAA,CAAAqD,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAkB,KAAA;YACAN,SAAA;cAAAN,KAAA;YAAA;UACA;QACA;QACA,KAAAxC,MAAA,CAAAI,WAAA,CAAA4C,SAAA,CAAAsB,YAAA;MACA;IACA;IACAE,iBAAA;MACA,KAAAC,WAAA;IACA;IACAA,YAAA;MACA,KAAAxD,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}