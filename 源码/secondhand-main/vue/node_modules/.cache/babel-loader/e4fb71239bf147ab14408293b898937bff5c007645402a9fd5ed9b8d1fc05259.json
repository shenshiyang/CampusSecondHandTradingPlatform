{"ast":null,"code":"import E from 'wangeditor';\nconst validatePrice = (rule, value, cb) => value > 0 ? cb() : cb(new Error('价格必须大于 0'));\nexport default {\n  name: 'AddGoods',\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: {\n        saleStatus: '下架',\n        stock: 1\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入商品名称',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          validator: validatePrice,\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请选择分类',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: '请输入发货地址',\n          trigger: 'blur'\n        }],\n        stock: [{\n          required: true,\n          type: 'number',\n          message: '请输入库存',\n          trigger: 'blur'\n        }]\n      },\n      editor: null,\n      btnLoading: false\n    };\n  },\n  async mounted() {\n    await Promise.all([this.loadCategory(), this.loadGoods()]);\n    this.initEditor(this.form.content || '');\n  },\n  beforeDestroy() {\n    this.editor && this.editor.destroy();\n  },\n  methods: {\n    /* 获取分类 */\n    async loadCategory() {\n      const {\n        data\n      } = await this.$request.get('/category/selectAll');\n      this.categoryList = data || [];\n    },\n    /* 编辑回显 */\n    async loadGoods() {\n      if (!this.id) return;\n      const {\n        data\n      } = await this.$request.get('/goods/selectById/' + this.id);\n      if (data) Object.assign(this.form, data);\n    },\n    /* 富文本初始化 */\n    initEditor(html) {\n      this.editor = new E('#editor');\n      this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n      this.editor.config.uploadFileName = 'file';\n      this.editor.config.uploadImgHeaders = {\n        token: this.user.token\n      };\n      this.editor.config.uploadImgParams = {\n        type: 'img'\n      };\n      this.editor.create();\n      this.editor.txt.html(html);\n    },\n    /* 图片上传成功 */\n    handleImgSuccess(resp) {\n      this.form.img = resp.data;\n      this.$message.success('上传成功');\n    },\n    /* 表单提交 */\n    save() {\n      this.$refs.formRef.validate(async valid => {\n        if (!valid) return;\n        this.btnLoading = true;\n        this.form.content = this.editor.txt.html();\n        const isUpdate = !!this.form.id;\n        const res = await this.$request({\n          url: isUpdate ? '/goods/update' : '/goods/add',\n          method: isUpdate ? 'PUT' : 'POST',\n          data: this.form\n        });\n        this.btnLoading = false;\n        if (res.code === '200') {\n          this.$message.success(isUpdate ? '修改成功' : '发布成功');\n          this.$router.back();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["E","validatePrice","rule","value","cb","Error","name","data","id","$route","query","user","JSON","parse","localStorage","getItem","categoryList","form","saleStatus","stock","rules","required","message","trigger","price","validator","category","address","type","editor","btnLoading","mounted","Promise","all","loadCategory","loadGoods","initEditor","content","beforeDestroy","destroy","methods","$request","get","Object","assign","html","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","create","txt","handleImgSuccess","resp","img","$message","success","save","$refs","formRef","validate","valid","isUpdate","res","url","method","code","$router","back","error","msg"],"sources":["src/views/front/AddGoods.vue"],"sourcesContent":["<template>\n  <div class=\"add-goods\">\n    <el-card shadow=\"never\">\n      <div class=\"toolbar\">\n        <el-button size=\"mini\" @click=\"$router.back()\">← 返回</el-button>\n      </div>\n\n      <el-form\n        ref=\"formRef\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n        class=\"goods-form\"\n      >\n        <h2 class=\"form-title\">{{ form.id ? '编辑商品' : '发布商品' }}</h2>\n\n        <el-row :gutter=\"24\">\n          <!-- 名称 -->\n          <el-col :span=\"12\">\n            <el-form-item label=\"名称\" prop=\"name\">\n              <el-input v-model.trim=\"form.name\" placeholder=\"商品名称\" clearable />\n            </el-form-item>\n          </el-col>\n\n          <!-- 价格 -->\n          <el-col :span=\"12\">\n            <el-form-item label=\"价格\" prop=\"price\">\n              <el-input v-model.number=\"form.price\" placeholder=\"价格 (元)\">\n                <template #prefix>￥</template>\n              </el-input>\n            </el-form-item>\n          </el-col>\n\n          <!-- 分类 -->\n          <el-col :span=\"12\">\n            <el-form-item label=\"分类\" prop=\"category\">\n              <el-select v-model=\"form.category\" placeholder=\"请选择\" style=\"width:100%\">\n                <el-option\n                  v-for=\"c in categoryList\"\n                  :key=\"c.id\"\n                  :label=\"c.name\"\n                  :value=\"c.name\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <!-- 库存 -->\n          <el-col :span=\"12\">\n            <el-form-item label=\"库存\" prop=\"stock\">\n              <el-input-number\n                v-model.number=\"form.stock\"\n                :min=\"1\"\n                :max=\"9999\"\n                controls-position=\"right\"\n                style=\"width:100%\"\n              />\n            </el-form-item>\n          </el-col>\n\n          <!-- 发货地址 -->\n          <el-col :span=\"24\">\n            <el-form-item label=\"发货地\" prop=\"address\">\n              <el-input v-model.trim=\"form.address\" placeholder=\"发货地址\" />\n            </el-form-item>\n          </el-col>\n\n          <!-- 上架状态 -->\n          <el-col :span=\"24\">\n            <el-form-item label=\"上架状态\" prop=\"saleStatus\">\n              <el-radio-group v-model=\"form.saleStatus\">\n                <el-radio label=\"上架\" />\n                <el-radio label=\"下架\" />\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n\n          <!-- 图片 -->\n          <el-col :span=\"24\">\n            <el-form-item label=\"图片\" prop=\"img\">\n              <el-upload\n                :action=\"$baseUrl + '/files/upload'\"\n                :headers=\"{ token: user.token }\"\n                list-type=\"picture-card\"\n                :on-success=\"handleImgSuccess\"\n              >\n                <i class=\"el-icon-plus\" /> 上传\n              </el-upload>\n            </el-form-item>\n          </el-col>\n\n          <!-- 详情 -->\n          <el-col :span=\"24\">\n            <el-form-item label=\"详情\" prop=\"content\">\n              <div id=\"editor\" class=\"rich-editor\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <div class=\"actions\">\n          <el-button\n            type=\"primary\"\n            :loading=\"btnLoading\"\n            @click=\"save\"\n          >确 认</el-button>\n        </div>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor'\nconst validatePrice = (rule, value, cb) =>\n  value > 0 ? cb() : cb(new Error('价格必须大于 0'))\n\nexport default {\n  name: 'AddGoods',\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: { saleStatus: '下架', stock: 1 },\n      rules: {\n        name: [{ required: true, message: '请输入商品名称', trigger: 'blur' }],\n        price: [{ required: true, validator: validatePrice, trigger: 'blur' }],\n        category: [{ required: true, message: '请选择分类', trigger: 'change' }],\n        address: [{ required: true, message: '请输入发货地址', trigger: 'blur' }],\n        stock: [{ required: true, type: 'number', message: '请输入库存', trigger: 'blur' }]\n      },\n      editor: null,\n      btnLoading: false\n    }\n  },\n  async mounted() {\n    await Promise.all([this.loadCategory(), this.loadGoods()])\n    this.initEditor(this.form.content || '')\n  },\n  beforeDestroy() {\n    this.editor && this.editor.destroy()\n  },\n  methods: {\n    /* 获取分类 */\n    async loadCategory() {\n      const { data } = await this.$request.get('/category/selectAll')\n      this.categoryList = data || []\n    },\n    /* 编辑回显 */\n    async loadGoods() {\n      if (!this.id) return\n      const { data } = await this.$request.get('/goods/selectById/' + this.id)\n      if (data) Object.assign(this.form, data)\n    },\n    /* 富文本初始化 */\n    initEditor(html) {\n      this.editor = new E('#editor')\n      this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\n      this.editor.config.uploadFileName = 'file'\n      this.editor.config.uploadImgHeaders = { token: this.user.token }\n      this.editor.config.uploadImgParams = { type: 'img' }\n      this.editor.create()\n      this.editor.txt.html(html)\n    },\n    /* 图片上传成功 */\n    handleImgSuccess(resp) {\n      this.form.img = resp.data\n      this.$message.success('上传成功')\n    },\n    /* 表单提交 */\n    save() {\n      this.$refs.formRef.validate(async valid => {\n        if (!valid) return\n        this.btnLoading = true\n        this.form.content = this.editor.txt.html()\n        const isUpdate = !!this.form.id\n        const res = await this.$request({\n          url: isUpdate ? '/goods/update' : '/goods/add',\n          method: isUpdate ? 'PUT' : 'POST',\n          data: this.form\n        })\n        this.btnLoading = false\n        if (res.code === '200') {\n          this.$message.success(isUpdate ? '修改成功' : '发布成功')\n          this.$router.back()\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.add-goods {\n  width: 60%;\n  margin: 20px auto;\n}\n.toolbar {\n  margin-bottom: 10px;\n}\n.form-title {\n  text-align: center;\n  margin: 20px 0 30px;\n}\n.goods-form >>> .el-form-item__label {\n  font-weight: 500;\n}\n.rich-editor {\n  border: 1px solid #e5e5e5;\n  min-height: 300px;\n}\n.actions {\n  text-align: center;\n  margin-top: 30px;\n}\n</style>\n"],"mappings":"AAgHA,OAAAA,CAAA;AACA,MAAAC,aAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,EAAA,KACAD,KAAA,OAAAC,EAAA,KAAAA,EAAA,KAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,EAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;MACAG,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MACAC,IAAA;QAAAC,UAAA;QAAAC,KAAA;MAAA;MACAC,KAAA;QACAd,IAAA;UAAAe,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,KAAA;UAAAH,QAAA;UAAAI,SAAA,EAAAxB,aAAA;UAAAsB,OAAA;QAAA;QACAG,QAAA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAI,OAAA;UAAAN,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAJ,KAAA;UAAAE,QAAA;UAAAO,IAAA;UAAAN,OAAA;UAAAC,OAAA;QAAA;MACA;MACAM,MAAA;MACAC,UAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,MAAAC,OAAA,CAAAC,GAAA,OAAAC,YAAA,SAAAC,SAAA;IACA,KAAAC,UAAA,MAAAnB,IAAA,CAAAoB,OAAA;EACA;EACAC,cAAA;IACA,KAAAT,MAAA,SAAAA,MAAA,CAAAU,OAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAN,aAAA;MACA;QAAA3B;MAAA,eAAAkC,QAAA,CAAAC,GAAA;MACA,KAAA1B,YAAA,GAAAT,IAAA;IACA;IACA;IACA,MAAA4B,UAAA;MACA,UAAA3B,EAAA;MACA;QAAAD;MAAA,eAAAkC,QAAA,CAAAC,GAAA,6BAAAlC,EAAA;MACA,IAAAD,IAAA,EAAAoC,MAAA,CAAAC,MAAA,MAAA3B,IAAA,EAAAV,IAAA;IACA;IACA;IACA6B,WAAAS,IAAA;MACA,KAAAhB,MAAA,OAAA7B,CAAA;MACA,KAAA6B,MAAA,CAAAiB,MAAA,CAAAC,eAAA,QAAAC,QAAA;MACA,KAAAnB,MAAA,CAAAiB,MAAA,CAAAG,cAAA;MACA,KAAApB,MAAA,CAAAiB,MAAA,CAAAI,gBAAA;QAAAC,KAAA,OAAAxC,IAAA,CAAAwC;MAAA;MACA,KAAAtB,MAAA,CAAAiB,MAAA,CAAAM,eAAA;QAAAxB,IAAA;MAAA;MACA,KAAAC,MAAA,CAAAwB,MAAA;MACA,KAAAxB,MAAA,CAAAyB,GAAA,CAAAT,IAAA,CAAAA,IAAA;IACA;IACA;IACAU,iBAAAC,IAAA;MACA,KAAAvC,IAAA,CAAAwC,GAAA,GAAAD,IAAA,CAAAjD,IAAA;MACA,KAAAmD,QAAA,CAAAC,OAAA;IACA;IACA;IACAC,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;QACA,KAAAlC,UAAA;QACA,KAAAb,IAAA,CAAAoB,OAAA,QAAAR,MAAA,CAAAyB,GAAA,CAAAT,IAAA;QACA,MAAAoB,QAAA,UAAAhD,IAAA,CAAAT,EAAA;QACA,MAAA0D,GAAA,cAAAzB,QAAA;UACA0B,GAAA,EAAAF,QAAA;UACAG,MAAA,EAAAH,QAAA;UACA1D,IAAA,OAAAU;QACA;QACA,KAAAa,UAAA;QACA,IAAAoC,GAAA,CAAAG,IAAA;UACA,KAAAX,QAAA,CAAAC,OAAA,CAAAM,QAAA;UACA,KAAAK,OAAA,CAAAC,IAAA;QACA;UACA,KAAAb,QAAA,CAAAc,KAAA,CAAAN,GAAA,CAAAO,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}