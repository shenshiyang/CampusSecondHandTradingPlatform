{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0,\n      todayCount: 0,\n      dateRange: [] // 日期区间\n    };\n  },\n\n  mounted() {\n    // 今日概况\n    this.$request.get('/orders/todayTotal').then(res => {\n      this.todayTotal = res.data || 0;\n    });\n    this.$request.get('/orders/todayCount').then(res => {\n      this.todayCount = res.data || 0;\n    });\n\n    // 初始化加载图表\n    this.loadCharts();\n  },\n  methods: {\n    loadCharts() {\n      const [startDate, endDate] = this.dateRange || [];\n      const pieChart = echarts.init(document.getElementById('pie'));\n      const pictorialChart = echarts.init(document.getElementById('pictorial'));\n      const categoryPieChart = echarts.init(document.getElementById('categoryPie'));\n      const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'));\n\n      // 图1：销售额&订单数趋势\n      this.$request.get('/orders/lineWithCount', {\n        params: {\n          startDate,\n          endDate\n        }\n      }).then(res => {\n        const data = res.data || [];\n        const option = {\n          title: {\n            text: '近八日销售额 & 订单数趋势',\n            left: 'center',\n            top: 10\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['销售额', '订单数'],\n            top: 50\n          },\n          grid: {\n            top: 90,\n            left: 60,\n            right: 60,\n            bottom: 60\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: {\n              rotate: 30\n            }\n          },\n          yAxis: [{\n            type: 'value',\n            name: '销售额（元）',\n            axisLine: {\n              lineStyle: {\n                color: '#5470c6'\n              }\n            }\n          }, {\n            type: 'value',\n            name: '订单数（单）',\n            minInterval: 1,\n            axisLine: {\n              lineStyle: {\n                color: '#91cc75'\n              }\n            }\n          }],\n          series: [{\n            name: '销售额',\n            type: 'line',\n            smooth: true,\n            yAxisIndex: 0,\n            data: data.map(v => v.sales),\n            itemStyle: {\n              color: '#5470c6'\n            }\n          }, {\n            name: '订单数',\n            type: 'line',\n            smooth: true,\n            yAxisIndex: 1,\n            data: data.map(v => v.count),\n            itemStyle: {\n              color: '#91cc75'\n            }\n          }]\n        };\n        pieChart.setOption(option);\n      });\n\n      // 图2：商家销售额排行\n      this.$request.get('/orders/selectBar', {\n        params: {\n          startDate,\n          endDate\n        }\n      }).then(res => {\n        const data = (res.data || []).sort((a, b) => b.value - a.value);\n        pictorialChart.setOption({\n          title: {\n            text: '商家销售额排行榜',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          grid: {\n            left: '120px',\n            right: '40px',\n            bottom: '50px',\n            top: '80px'\n          },\n          xAxis: {\n            type: 'value',\n            name: '销售额（元）'\n          },\n          yAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            inverse: true,\n            axisLabel: {\n              fontSize: 12\n            }\n          },\n          series: [{\n            name: '销售额',\n            type: 'bar',\n            barWidth: '50%',\n            data: data.map(v => v.value),\n            itemStyle: {\n              color: '#91cc75'\n            },\n            label: {\n              show: true,\n              position: 'right'\n            }\n          }]\n        });\n      });\n\n      // 图3：商品种类销量占比\n      this.$request.get('/orders/selectCategorySalesCount', {\n        params: {\n          startDate,\n          endDate\n        }\n      }).then(res => {\n        const data = res.data || [];\n        categoryPieChart.setOption({\n          title: {\n            text: '商品种类销量占比',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left'\n          },\n          series: [{\n            name: '销量',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '55%'],\n            data: data.map(item => ({\n              value: item.value,\n              name: item.name\n            })),\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        });\n      });\n\n      // 图4：用户在线趋势图\n      this.$request.get('/user/selectOnlineTrend', {\n        params: {\n          startDate,\n          endDate\n        }\n      }).then(res => {\n        const data = res.data || [];\n        onlineTrendChart.setOption({\n          title: {\n            text: '用户在线趋势',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: {\n              rotate: 30,\n              interval: 0\n            }\n          },\n          yAxis: {\n            type: 'value',\n            name: '在线用户数',\n            minInterval: 1\n          },\n          series: [{\n            name: '在线人数',\n            type: 'line',\n            smooth: true,\n            data: data.map(v => v.value),\n            itemStyle: {\n              color: '#73c0de'\n            }\n          }]\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","JSON","parse","localStorage","getItem","todayTotal","todayCount","dateRange","mounted","$request","get","then","res","loadCharts","methods","startDate","endDate","pieChart","init","document","getElementById","pictorialChart","categoryPieChart","onlineTrendChart","params","option","title","text","left","top","tooltip","trigger","legend","grid","right","bottom","xAxis","type","map","v","axisLabel","rotate","yAxis","axisLine","lineStyle","color","minInterval","series","smooth","yAxisIndex","sales","itemStyle","count","setOption","sort","a","b","value","axisPointer","inverse","fontSize","barWidth","label","show","position","orient","radius","center","item","emphasis","shadowBlur","shadowOffsetX","shadowColor","interval"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n\n    <!-- 📅 日期筛选器 -->\n    <el-card style=\"margin: 10px 0\">\n      <div style=\"display: flex; align-items: center; gap: 10px\">\n        <el-date-picker\n          v-model=\"dateRange\"\n          type=\"daterange\"\n          range-separator=\"至\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n          format=\"yyyy-MM-dd\"\n          value-format=\"yyyy-MM-dd\"\n        />\n        <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"loadCharts\">查询</el-button>\n      </div>\n    </el-card>\n\n    <!-- 📊 今日统计卡片 -->\n    <div class=\"card\" style=\"margin: 10px 0; display: flex; align-items: center; gap: 30px; font-size: 18px\">\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-data\" style=\"font-size: 22px; color: #409EFF\"></i>\n        <span>今日销售额：</span>\n        <span style=\"font-weight: bold; color: red\">￥{{ todayTotal }}</span>\n      </div>\n      <div style=\"display: flex; align-items: center; gap: 8px\">\n        <i class=\"el-icon-s-order\" style=\"font-size: 22px; color: #67C23A\"></i>\n        <span>今日订单数：</span>\n        <span style=\"font-weight: bold; color: #333\">{{ todayCount }}</span>\n      </div>\n    </div>\n\n    <!-- 第一行图表 -->\n    <div style=\"display: flex; gap: 10px; margin: 10px 0\">\n      <div style=\"flex: 1; height: 500px\" id=\"pie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"pictorial\" class=\"card\"></div>\n    </div>\n\n    <!-- 第二行图表 -->\n    <div style=\"display: flex; gap: 10px; margin-top: 20px\">\n      <div style=\"flex: 1; height: 500px\" id=\"categoryPie\" class=\"card\"></div>\n      <div style=\"flex: 1; height: 500px\" id=\"onlineTrendChart\" class=\"card\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      todayTotal: 0,\n      todayCount: 0,\n      dateRange: [], // 日期区间\n    }\n  },\n  mounted() {\n    // 今日概况\n    this.$request.get('/orders/todayTotal').then(res => {\n      this.todayTotal = res.data || 0\n    })\n    this.$request.get('/orders/todayCount').then(res => {\n      this.todayCount = res.data || 0\n    })\n\n    // 初始化加载图表\n    this.loadCharts()\n  },\n  methods: {\n    loadCharts() {\n      const [startDate, endDate] = this.dateRange || []\n\n      const pieChart = echarts.init(document.getElementById('pie'))\n      const pictorialChart = echarts.init(document.getElementById('pictorial'))\n      const categoryPieChart = echarts.init(document.getElementById('categoryPie'))\n      const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart'))\n\n      // 图1：销售额&订单数趋势\n      this.$request.get('/orders/lineWithCount', { params: { startDate, endDate } }).then(res => {\n        const data = res.data || []\n        const option = {\n          title: {\n            text: '近八日销售额 & 订单数趋势',\n            left: 'center',\n            top: 10\n          },\n          tooltip: { trigger: 'axis' },\n          legend: {\n            data: ['销售额', '订单数'],\n            top: 50\n          },\n          grid: {\n            top: 90,\n            left: 60,\n            right: 60,\n            bottom: 60\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: { rotate: 30 }\n          },\n          yAxis: [\n            {\n              type: 'value',\n              name: '销售额（元）',\n              axisLine: { lineStyle: { color: '#5470c6' } }\n            },\n            {\n              type: 'value',\n              name: '订单数（单）',\n              minInterval: 1,\n              axisLine: { lineStyle: { color: '#91cc75' } }\n            }\n          ],\n          series: [\n            {\n              name: '销售额',\n              type: 'line',\n              smooth: true,\n              yAxisIndex: 0,\n              data: data.map(v => v.sales),\n              itemStyle: { color: '#5470c6' }\n            },\n            {\n              name: '订单数',\n              type: 'line',\n              smooth: true,\n              yAxisIndex: 1,\n              data: data.map(v => v.count),\n              itemStyle: { color: '#91cc75' }\n            }\n          ]\n        }\n        pieChart.setOption(option)\n      })\n\n      // 图2：商家销售额排行\n      this.$request.get('/orders/selectBar', { params: { startDate, endDate } }).then(res => {\n        const data = (res.data || []).sort((a, b) => b.value - a.value)\n        pictorialChart.setOption({\n          title: {\n            text: '商家销售额排行榜',\n            left: 'center'\n          },\n          tooltip: { trigger: 'axis', axisPointer: { type: 'shadow' } },\n          grid: { left: '120px', right: '40px', bottom: '50px', top: '80px' },\n          xAxis: { type: 'value', name: '销售额（元）' },\n          yAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            inverse: true,\n            axisLabel: { fontSize: 12 }\n          },\n          series: [{\n            name: '销售额',\n            type: 'bar',\n            barWidth: '50%',\n            data: data.map(v => v.value),\n            itemStyle: { color: '#91cc75' },\n            label: { show: true, position: 'right' }\n          }]\n        })\n      })\n\n      // 图3：商品种类销量占比\n      this.$request.get('/orders/selectCategorySalesCount', { params: { startDate, endDate } }).then(res => {\n        const data = res.data || []\n        categoryPieChart.setOption({\n          title: {\n            text: '商品种类销量占比',\n            left: 'center'\n          },\n          tooltip: { trigger: 'item' },\n          legend: { orient: 'vertical', left: 'left' },\n          series: [{\n            name: '销量',\n            type: 'pie',\n            radius: '60%',\n            center: ['50%', '55%'],\n            data: data.map(item => ({ value: item.value, name: item.name })),\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        })\n      })\n\n      // 图4：用户在线趋势图\n      this.$request.get('/user/selectOnlineTrend', { params: { startDate, endDate } }).then(res => {\n        const data = res.data || []\n        onlineTrendChart.setOption({\n          title: {\n            text: '用户在线趋势',\n            left: 'center'\n          },\n          tooltip: { trigger: 'axis' },\n          xAxis: {\n            type: 'category',\n            data: data.map(v => v.name),\n            axisLabel: { rotate: 30, interval: 0 }\n          },\n          yAxis: {\n            type: 'value',\n            name: '在线用户数',\n            minInterval: 1\n          },\n          series: [{\n            name: '在线人数',\n            type: 'line',\n            smooth: true,\n            data: data.map(v => v.value),\n            itemStyle: { color: '#73c0de' }\n          }]\n        })\n      })\n    }\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}