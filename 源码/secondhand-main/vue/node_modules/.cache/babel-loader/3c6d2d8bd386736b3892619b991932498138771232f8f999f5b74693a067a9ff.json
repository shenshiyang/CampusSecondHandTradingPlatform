{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      userList: [],\n      chatList: [],\n      content: '',\n      active: null,\n      activeUser: null\n    };\n  },\n  mounted() {\n    this.initChat();\n  },\n  methods: {\n    async initChat() {\n      await this.loadUserList();\n      const toUserId = this.$route.query.toUserId;\n      if (toUserId) {\n        const exists = this.userList.find(u => u.chatUserId == toUserId);\n        if (exists) {\n          this.changeChatUser(exists);\n        } else {\n          // 不在聊天分组，先添加\n          await this.$request.post('/chatGroup/add', {\n            userId: this.user.id,\n            chatUserId: toUserId\n          });\n          await this.loadUserList();\n          const newUser = this.userList.find(u => u.chatUserId == toUserId);\n          if (newUser) this.changeChatUser(newUser);\n        }\n      }\n    },\n    loadUserList() {\n      return this.$request.get('/chatGroup/selectUserGroup').then(res => {\n        if (res.code === '200') {\n          this.userList = res.data;\n        }\n      });\n    },\n    changeChatUser(item) {\n      this.active = item.chatUserId;\n      this.activeUser = item;\n      this.loadChatRecord();\n    },\n    loadChatRecord() {\n      this.$request.get(`/chatInfo/selectUserChat/${this.active}`).then(res => {\n        if (res.code === '200') {\n          this.chatList = res.data;\n          this.$nextTick(() => {\n            const box = this.$refs.chatBox;\n            if (box) box.scrollTop = box.scrollHeight;\n          });\n        }\n      });\n    },\n    sendMsg() {\n      if (!this.content.trim()) return;\n      const msg = {\n        fromId: this.user.id,\n        toId: this.active,\n        content: this.content.trim(),\n        createTime: new Date()\n      };\n      this.$request.post('/chatInfo/add', msg).then(res => {\n        if (res.code === '200') {\n          this.chatList.push(msg);\n          this.content = '';\n          this.$nextTick(() => {\n            const box = this.$refs.chatBox;\n            if (box) box.scrollTop = box.scrollHeight;\n          });\n        } else {\n          this.$message.error(res.msg || '发送失败');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","userList","chatList","content","active","activeUser","mounted","initChat","methods","loadUserList","toUserId","$route","query","exists","find","u","chatUserId","changeChatUser","$request","post","userId","id","newUser","get","then","res","code","item","loadChatRecord","$nextTick","box","$refs","chatBox","scrollTop","scrollHeight","sendMsg","trim","msg","fromId","toId","createTime","Date","push","$message","error"],"sources":["src/views/front/Chat.vue"],"sourcesContent":["<template>\n  <div class=\"chat-page\">\n    <!-- 左侧用户列表 -->\n    <div class=\"chat-user-list\">\n      <div v-for=\"item in userList\" :key=\"item.chatUserId\"\n           :class=\"['chat-user', item.chatUserId === active ? 'active' : '']\"\n           @click=\"changeChatUser(item)\">\n        <img :src=\"item.avatar\" alt=\"\">\n        <span>{{ item.name }}</span>\n      </div>\n    </div>\n\n    <!-- 聊天主面板 -->\n    <div class=\"chat-main\" v-if=\"activeUser\">\n      <div class=\"chat-title\">{{ activeUser.name }}</div>\n\n      <div class=\"chat-box\" ref=\"chatBox\">\n        <div v-for=\"(msg, index) in chatList\" :key=\"index\" :class=\"['msg', msg.fromId === user.id ? 'right' : 'left']\">\n          <span>{{ msg.content }}</span>\n        </div>\n      </div>\n\n      <div class=\"chat-input\">\n        <el-input v-model=\"content\" placeholder=\"请输入聊天内容\" @keyup.enter.native=\"sendMsg\" />\n        <el-button type=\"primary\" @click=\"sendMsg\">发送</el-button>\n      </div>\n    </div>\n\n    <div v-else class=\"chat-empty\">请选择一个联系人开始聊天</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      userList: [],\n      chatList: [],\n      content: '',\n      active: null,\n      activeUser: null\n    }\n  },\n  mounted() {\n    this.initChat();\n  },\n  methods: {\n    async initChat() {\n      await this.loadUserList();\n\n      const toUserId = this.$route.query.toUserId;\n      if (toUserId) {\n        const exists = this.userList.find(u => u.chatUserId == toUserId);\n        if (exists) {\n          this.changeChatUser(exists);\n        } else {\n          // 不在聊天分组，先添加\n          await this.$request.post('/chatGroup/add', {\n            userId: this.user.id,\n            chatUserId: toUserId\n          });\n          await this.loadUserList();\n          const newUser = this.userList.find(u => u.chatUserId == toUserId);\n          if (newUser) this.changeChatUser(newUser);\n        }\n      }\n    },\n    loadUserList() {\n      return this.$request.get('/chatGroup/selectUserGroup').then(res => {\n        if (res.code === '200') {\n          this.userList = res.data;\n        }\n      });\n    },\n    changeChatUser(item) {\n      this.active = item.chatUserId;\n      this.activeUser = item;\n      this.loadChatRecord();\n    },\n    loadChatRecord() {\n      this.$request.get(`/chatInfo/selectUserChat/${this.active}`).then(res => {\n        if (res.code === '200') {\n          this.chatList = res.data;\n          this.$nextTick(() => {\n            const box = this.$refs.chatBox;\n            if (box) box.scrollTop = box.scrollHeight;\n          });\n        }\n      });\n    },\n    sendMsg() {\n      if (!this.content.trim()) return;\n\n      const msg = {\n        fromId: this.user.id,\n        toId: this.active,\n        content: this.content.trim(),\n        createTime: new Date()\n      };\n\n      this.$request.post('/chatInfo/add', msg).then(res => {\n        if (res.code === '200') {\n          this.chatList.push(msg);\n          this.content = '';\n          this.$nextTick(() => {\n            const box = this.$refs.chatBox;\n            if (box) box.scrollTop = box.scrollHeight;\n          });\n        } else {\n          this.$message.error(res.msg || '发送失败');\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-page {\n  display: flex;\n  height: 85vh;\n  background: #fff;\n  box-shadow: 0 0 6px #ddd;\n  margin: 20px;\n  border-radius: 8px;\n  overflow: hidden;\n}\n.chat-user-list {\n  width: 220px;\n  border-right: 1px solid #eee;\n  overflow-y: auto;\n  background-color: #f9f9f9;\n}\n.chat-user {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n.chat-user:hover,\n.chat-user.active {\n  background-color: #e6f7ff;\n}\n.chat-user img {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin-right: 8px;\n}\n.chat-main {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n.chat-title {\n  height: 50px;\n  line-height: 50px;\n  padding-left: 20px;\n  border-bottom: 1px solid #eee;\n  font-weight: bold;\n}\n.chat-box {\n  flex: 1;\n  padding: 15px;\n  overflow-y: auto;\n}\n.chat-input {\n  display: flex;\n  padding: 10px;\n  border-top: 1px solid #eee;\n}\n.chat-input .el-input {\n  flex: 1;\n  margin-right: 10px;\n}\n.msg {\n  margin-bottom: 10px;\n  display: flex;\n}\n.msg.left {\n  justify-content: flex-start;\n}\n.msg.right {\n  justify-content: flex-end;\n}\n.msg span {\n  max-width: 60%;\n  background: #e1f3ff;\n  padding: 8px 12px;\n  border-radius: 4px;\n}\n.chat-empty {\n  flex: 1;\n  text-align: center;\n  color: #999;\n  padding-top: 100px;\n}\n</style>\n"],"mappings":";AAiCA;EACAA,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,QAAA;MACAC,QAAA;MACAC,OAAA;MACAC,MAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACA,MAAAD,SAAA;MACA,WAAAE,YAAA;MAEA,MAAAC,QAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;MACA,IAAAA,QAAA;QACA,MAAAG,MAAA,QAAAZ,QAAA,CAAAa,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,UAAA,IAAAN,QAAA;QACA,IAAAG,MAAA;UACA,KAAAI,cAAA,CAAAJ,MAAA;QACA;UACA;UACA,WAAAK,QAAA,CAAAC,IAAA;YACAC,MAAA,OAAAxB,IAAA,CAAAyB,EAAA;YACAL,UAAA,EAAAN;UACA;UACA,WAAAD,YAAA;UACA,MAAAa,OAAA,QAAArB,QAAA,CAAAa,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,UAAA,IAAAN,QAAA;UACA,IAAAY,OAAA,OAAAL,cAAA,CAAAK,OAAA;QACA;MACA;IACA;IACAb,aAAA;MACA,YAAAS,QAAA,CAAAK,GAAA,+BAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAzB,QAAA,GAAAwB,GAAA,CAAA9B,IAAA;QACA;MACA;IACA;IACAsB,eAAAU,IAAA;MACA,KAAAvB,MAAA,GAAAuB,IAAA,CAAAX,UAAA;MACA,KAAAX,UAAA,GAAAsB,IAAA;MACA,KAAAC,cAAA;IACA;IACAA,eAAA;MACA,KAAAV,QAAA,CAAAK,GAAA,kCAAAnB,MAAA,IAAAoB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAxB,QAAA,GAAAuB,GAAA,CAAA9B,IAAA;UACA,KAAAkC,SAAA;YACA,MAAAC,GAAA,QAAAC,KAAA,CAAAC,OAAA;YACA,IAAAF,GAAA,EAAAA,GAAA,CAAAG,SAAA,GAAAH,GAAA,CAAAI,YAAA;UACA;QACA;MACA;IACA;IACAC,QAAA;MACA,UAAAhC,OAAA,CAAAiC,IAAA;MAEA,MAAAC,GAAA;QACAC,MAAA,OAAA1C,IAAA,CAAAyB,EAAA;QACAkB,IAAA,OAAAnC,MAAA;QACAD,OAAA,OAAAA,OAAA,CAAAiC,IAAA;QACAI,UAAA,MAAAC,IAAA;MACA;MAEA,KAAAvB,QAAA,CAAAC,IAAA,kBAAAkB,GAAA,EAAAb,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAxB,QAAA,CAAAwC,IAAA,CAAAL,GAAA;UACA,KAAAlC,OAAA;UACA,KAAA0B,SAAA;YACA,MAAAC,GAAA,QAAAC,KAAA,CAAAC,OAAA;YACA,IAAAF,GAAA,EAAAA,GAAA,CAAAG,SAAA,GAAAH,GAAA,CAAAI,YAAA;UACA;QACA;UACA,KAAAS,QAAA,CAAAC,KAAA,CAAAnB,GAAA,CAAAY,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}