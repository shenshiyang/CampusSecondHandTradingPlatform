{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Profile',\n  data() {\n    const validateConfirm = (rule, value, cb) => value !== this.user.newPassword ? cb(new Error('两次输入不一致')) : cb();\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      dialogVisible: false,\n      btnLoading: false,\n      pwdLoading: false,\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入原始密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          validator: validateConfirm,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    /* 头像上传成功 */\n    handleAvatarSuccess({\n      data\n    }) {\n      this.user.avatar = data;\n      this.$message.success('上传成功');\n    },\n    /* 保存资料 */\n    async update() {\n      this.btnLoading = true;\n      const {\n        code,\n        msg\n      } = await this.$request.put('/user/update', this.user);\n      this.btnLoading = false;\n      if (code === '200') {\n        this.$message.success('保存成功');\n        localStorage.setItem('xm-user', JSON.stringify(this.user));\n        this.$emit('update:user');\n      } else {\n        this.$message.error(msg);\n      }\n    },\n    /* 保存密码 */\n    savePwd() {\n      this.$refs.formRef.validate(async valid => {\n        if (!valid) return;\n        this.pwdLoading = true;\n        const {\n          code,\n          msg\n        } = await this.$request.put('/updatePassword', this.user);\n        this.pwdLoading = false;\n        if (code === '200') {\n          this.$message.success('修改密码成功，请重新登录');\n          this.$router.push('/login');\n        } else {\n          this.$message.error(msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validateConfirm","rule","value","cb","user","newPassword","Error","JSON","parse","localStorage","getItem","dialogVisible","btnLoading","pwdLoading","rules","password","required","message","trigger","confirmPassword","validator","methods","handleAvatarSuccess","avatar","$message","success","update","code","msg","$request","put","setItem","stringify","$emit","error","savePwd","$refs","formRef","validate","valid","$router","push"],"sources":["src/views/front/Person.vue"],"sourcesContent":["<template>\n  <div class=\"profile-page\">\n    <el-card shadow=\"never\" class=\"profile-card\">\n      <!-- ▍修改资料 -->\n      <el-form\n        :model=\"user\"\n        label-width=\"80px\"\n        class=\"profile-form\"\n      >\n        <!-- 头像上传 -->\n        <div class=\"avatar-wrap\">\n          <el-upload\n            class=\"avatar-uploader\"\n            :action=\"$baseUrl + '/files/upload'\"\n            :show-file-list=\"false\"\n            :on-success=\"handleAvatarSuccess\"\n          >\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\" />\n            <i v-else class=\"el-icon-plus avatar-placeholder\" />\n          </el-upload>\n        </div>\n\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"user.username\" disabled />\n        </el-form-item>\n\n        <el-form-item label=\"姓名\">\n          <el-input v-model.trim=\"user.name\" placeholder=\"姓名\" />\n        </el-form-item>\n\n        <el-form-item label=\"电话\">\n          <el-input v-model.trim=\"user.phone\" placeholder=\"电话\" maxlength=\"11\" />\n        </el-form-item>\n\n        <el-form-item label=\"邮箱\">\n          <el-input v-model.trim=\"user.email\" placeholder=\"邮箱\" />\n        </el-form-item>\n\n        <div class=\"actions\">\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            :loading=\"btnLoading\"\n            @click=\"update\"\n          >保存</el-button>\n          <el-button\n            size=\"mini\"\n            @click=\"dialogVisible = true\"\n          >修改密码</el-button>\n        </div>\n      </el-form>\n    </el-card>\n\n    <!-- ▍修改密码弹窗 -->\n    <el-dialog\n      title=\"修改密码\"\n      :visible.sync=\"dialogVisible\"\n      width=\"380px\"\n      :close-on-click-modal=\"false\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"formRef\"\n        :model=\"user\"\n        :rules=\"rules\"\n        label-width=\"90px\"\n      >\n        <el-form-item label=\"原始密码\" prop=\"password\">\n          <el-input show-password v-model.trim=\"user.password\" />\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input show-password v-model.trim=\"user.newPassword\" />\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input show-password v-model.trim=\"user.confirmPassword\" />\n        </el-form-item>\n      </el-form>\n\n      <template #footer>\n        <el-button size=\"mini\" @click=\"dialogVisible = false\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          :loading=\"pwdLoading\"\n          @click=\"savePwd\"\n        >确认</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Profile',\n  data() {\n    const validateConfirm = (rule, value, cb) =>\n      value !== this.user.newPassword\n        ? cb(new Error('两次输入不一致'))\n        : cb()\n\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      dialogVisible: false,\n      btnLoading: false,\n      pwdLoading: false,\n      rules: {\n        password: [{ required: true, message: '请输入原始密码', trigger: 'blur' }],\n        newPassword: [{ required: true, message: '请输入新密码', trigger: 'blur' }],\n        confirmPassword: [\n          { required: true, validator: validateConfirm, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    /* 头像上传成功 */\n    handleAvatarSuccess({ data }) {\n      this.user.avatar = data\n      this.$message.success('上传成功')\n    },\n\n    /* 保存资料 */\n    async update() {\n      this.btnLoading = true\n      const { code, msg } = await this.$request.put('/user/update', this.user)\n      this.btnLoading = false\n      if (code === '200') {\n        this.$message.success('保存成功')\n        localStorage.setItem('xm-user', JSON.stringify(this.user))\n        this.$emit('update:user')\n      } else {\n        this.$message.error(msg)\n      }\n    },\n\n    /* 保存密码 */\n    savePwd() {\n      this.$refs.formRef.validate(async (valid) => {\n        if (!valid) return\n        this.pwdLoading = true\n        const { code, msg } = await this.$request.put('/updatePassword', this.user)\n        this.pwdLoading = false\n        if (code === '200') {\n          this.$message.success('修改密码成功，请重新登录')\n          this.$router.push('/login')\n        } else {\n          this.$message.error(msg)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.profile-page {\n  width: 50%;\n  margin: 30px auto;\n}\n.profile-card {\n  padding: 30px 40px;\n}\n.profile-form >>> .el-form-item__label {\n  font-weight: 600;\n}\n.avatar-wrap {\n  text-align: center;\n  margin-bottom: 20px;\n}\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 50%;\n  cursor: pointer;\n}\n.avatar-uploader:hover .el-upload {\n  border-color: #409eff;\n}\n.avatar-placeholder {\n  font-size: 28px;\n  color: #8c939d;\n  width: 120px;\n  height: 120px;\n  line-height: 120px;\n  text-align: center;\n  border-radius: 50%;\n}\n.avatar {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  display: block;\n}\n.actions {\n  text-align: center;\n  margin-top: 18px;\n}\n</style>\n"],"mappings":";AA4FA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,eAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,EAAA,KACAD,KAAA,UAAAE,IAAA,CAAAC,WAAA,GACAF,EAAA,KAAAG,KAAA,eACAH,EAAA;IAEA;MACAC,IAAA,EAAAG,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,aAAA;MACAC,UAAA;MACAC,UAAA;MACAC,KAAA;QACAC,QAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAb,WAAA;UAAAW,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,eAAA,GACA;UAAAH,QAAA;UAAAI,SAAA,EAAApB,eAAA;UAAAkB,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACA;IACAC,oBAAA;MAAAvB;IAAA;MACA,KAAAK,IAAA,CAAAmB,MAAA,GAAAxB,IAAA;MACA,KAAAyB,QAAA,CAAAC,OAAA;IACA;IAEA;IACA,MAAAC,OAAA;MACA,KAAAd,UAAA;MACA;QAAAe,IAAA;QAAAC;MAAA,eAAAC,QAAA,CAAAC,GAAA,sBAAA1B,IAAA;MACA,KAAAQ,UAAA;MACA,IAAAe,IAAA;QACA,KAAAH,QAAA,CAAAC,OAAA;QACAhB,YAAA,CAAAsB,OAAA,YAAAxB,IAAA,CAAAyB,SAAA,MAAA5B,IAAA;QACA,KAAA6B,KAAA;MACA;QACA,KAAAT,QAAA,CAAAU,KAAA,CAAAN,GAAA;MACA;IACA;IAEA;IACAO,QAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;QACA,KAAA1B,UAAA;QACA;UAAAc,IAAA;UAAAC;QAAA,eAAAC,QAAA,CAAAC,GAAA,yBAAA1B,IAAA;QACA,KAAAS,UAAA;QACA,IAAAc,IAAA;UACA,KAAAH,QAAA,CAAAC,OAAA;UACA,KAAAe,OAAA,CAAAC,IAAA;QACA;UACA,KAAAjB,QAAA,CAAAU,KAAA,CAAAN,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}