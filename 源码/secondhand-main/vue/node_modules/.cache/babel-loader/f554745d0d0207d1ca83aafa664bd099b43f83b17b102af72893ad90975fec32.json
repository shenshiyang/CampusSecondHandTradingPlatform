{"ast":null,"code":"import E from 'wangeditor';\nexport default {\n  name: 'UserPosts',\n  data() {\n    return {\n      /* 列表 */\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      title: '',\n      /* 编辑弹窗 */\n      dialogVisible: false,\n      form: {},\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        descr: [{\n          required: true,\n          message: '请输入简介',\n          trigger: 'blur'\n        }],\n        circle: [{\n          required: true,\n          message: '请选择圈子',\n          trigger: 'blur'\n        }]\n      },\n      btnLoading: false,\n      editor: null,\n      fileList: [],\n      /* 预览弹窗 */\n      previewVisible: false,\n      previewContent: '',\n      circles: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {\n    this.load();\n    this.loadCircles();\n  },\n  methods: {\n    /* ---------- 圈子 ---------- */\n    async loadCircles() {\n      const {\n        code,\n        data\n      } = await this.$request.get('/circles/selectAll');\n      if (code === '200') this.circles = data || [];\n    },\n    /* ---------- 列表 ---------- */\n    async load(page = this.pageNum) {\n      this.pageNum = page;\n      const {\n        code,\n        data,\n        msg\n      } = await this.$request.get('/posts/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      });\n      if (code === '200') {\n        this.tableData = data.list;\n        this.total = data.total;\n      } else {\n        this.$message.error(msg);\n      }\n    },\n    handleCurrentChange(page) {\n      this.load(page);\n    },\n    reset() {\n      this.title = '';\n      this.load(1);\n    },\n    /* ---------- 弹窗 ---------- */\n    handleAdd() {\n      this.form = {};\n      this.fileList = [];\n      this.dialogVisible = true;\n      this.initEditor('');\n    },\n    handleEdit(row) {\n      this.form = {\n        ...row\n      };\n      this.fileList = row.img ? [{\n        url: row.img\n      }] : [];\n      this.dialogVisible = true;\n      this.initEditor(row.content);\n    },\n    initEditor(html) {\n      this.$nextTick(() => {\n        if (this.editor) this.editor.destroy();\n        this.editor = new E('#editor');\n        this.editor.config.uploadImgServer = `${this.$baseUrl}/files/editor/upload`;\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.create();\n        this.editor.txt.html(html);\n      });\n    },\n    handleImgSuccess({\n      data\n    }) {\n      this.form.img = data;\n    },\n    async save() {\n      const valid = await this.$refs.formRef.validate().catch(() => false);\n      if (!valid) return;\n      this.form.content = this.editor.txt.html();\n      const url = this.form.id ? '/posts/update' : '/posts/add';\n      const method = this.form.id ? 'PUT' : 'POST';\n      this.btnLoading = true;\n      const {\n        code,\n        msg\n      } = await this.$request({\n        url,\n        method,\n        data: this.form\n      });\n      this.btnLoading = false;\n      code === '200' ? (this.$message.success('保存成功'), this.dialogVisible = false, this.load(1)) : this.$message.error(msg);\n    },\n    /* ---------- 删除 ---------- */\n    del(id) {\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: 'warning'\n      }).then(() => this.$request.delete(`/posts/delete/${id}`)).then(({\n        code,\n        msg\n      }) => {\n        code === '200' ? (this.$message.success('操作成功'), this.load(1)) : this.$message.error(msg);\n      }).catch(() => {});\n    },\n    /* ---------- 预览 ---------- */\n    preview(content) {\n      this.previewContent = content;\n      this.previewVisible = true;\n    }\n  },\n  beforeDestroy() {\n    this.editor && this.editor.destroy();\n  }\n};","map":{"version":3,"names":["E","name","data","tableData","pageNum","pageSize","total","title","dialogVisible","form","rules","required","message","trigger","descr","circle","btnLoading","editor","fileList","previewVisible","previewContent","circles","user","JSON","parse","localStorage","getItem","created","load","loadCircles","methods","code","$request","get","page","msg","params","list","$message","error","handleCurrentChange","reset","handleAdd","initEditor","handleEdit","row","img","url","content","html","$nextTick","destroy","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","type","create","txt","handleImgSuccess","save","valid","$refs","formRef","validate","catch","id","method","success","del","$confirm","then","delete","preview","beforeDestroy"],"sources":["src/views/front/UserPosts.vue"],"sourcesContent":["<template>\n  <div class=\"user-posts card\">\n    <!-- ▍工具栏 -->\n    <div class=\"toolbar\">\n      <el-button type=\"primary\" size=\"mini\" @click=\"handleAdd\">发 帖</el-button>\n\n      <div class=\"toolbar-right\">\n        <el-input\n          v-model.trim=\"title\"\n          class=\"search-input\"\n          placeholder=\"请输入标题关键字\"\n          clearable\n          @keyup.enter.native=\"load(1)\"\n        />\n        <el-button type=\"info\" plain size=\"mini\" @click=\"load(1)\">查询</el-button>\n        <el-button type=\"warning\" plain size=\"mini\" @click=\"reset\">重置</el-button>\n      </div>\n    </div>\n\n    <!-- ▍表格 -->\n    <el-table\n      :data=\"tableData\"\n      stripe\n      border\n    >\n      <el-table-column label=\"图片\" width=\"70\">\n        <template #default=\"{ row }\">\n          <el-image\n            v-if=\"row.img\"\n            :src=\"row.img\"\n            :preview-src-list=\"[row.img]\"\n            style=\"width: 50px\"\n          />\n        </template>\n      </el-table-column>\n\n      <el-table-column prop=\"title\" label=\"标题\" show-overflow-tooltip />\n\n      <el-table-column label=\"查看内容\" width=\"100\">\n        <template #default=\"{ row }\">\n          <el-button type=\"text\" @click=\"preview(row.content)\">查看</el-button>\n        </template>\n      </el-table-column>\n\n      <el-table-column prop=\"time\" label=\"发布时间\" width=\"160\" />\n      <el-table-column prop=\"circle\" label=\"圈子\" width=\"90\" />\n      <el-table-column prop=\"descr\" label=\"简介\" />\n      <el-table-column prop=\"readCount\" label=\"浏览量\" width=\"80\" />\n\n      <el-table-column prop=\"status\" label=\"审核状态\" width=\"90\">\n        <template #default=\"{ row }\">\n          <el-tag v-if=\"row.status === '待审核'\" type=\"info\">待审核</el-tag>\n          <el-tag v-else-if=\"row.status === '通过'\" type=\"success\">通过</el-tag>\n          <el-tag v-else type=\"danger\">拒绝</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n        <template #default=\"{ row }\">\n          <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" plain @click=\"del(row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- ▍分页 -->\n    <el-pagination\n      v-if=\"total\"\n      class=\"pager\"\n      background\n      layout=\"total, prev, pager, next\"\n      :current-page=\"pageNum\"\n      :page-size=\"pageSize\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30]\"\n      @current-change=\"handleCurrentChange\"\n    />\n\n    <!-- ▍新增 / 编辑弹窗 -->\n    <el-dialog\n      title=\"帖子\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      :close-on-click-modal=\"false\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"formRef\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"90px\"\n      >\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model.trim=\"form.title\" />\n        </el-form-item>\n\n        <el-form-item label=\"简介\" prop=\"descr\">\n          <el-input\n            type=\"textarea\"\n            :autosize=\"{ minRows: 2 }\"\n            v-model.trim=\"form.descr\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"圈子\" prop=\"circle\">\n          <el-select v-model=\"form.circle\" placeholder=\"请选择\">\n            <el-option\n              v-for=\"c in circles\"\n              :key=\"c.id\"\n              :label=\"c.name\"\n              :value=\"c.name\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"图片\">\n          <el-upload\n            :action=\"$baseUrl + '/files/upload'\"\n            :headers=\"{ token: user.token }\"\n            list-type=\"picture-card\"\n            :limit=\"1\"\n            :on-success=\"handleImgSuccess\"\n            :file-list=\"fileList\"\n          >\n            <i class=\"el-icon-plus\" />\n          </el-upload>\n        </el-form-item>\n\n        <el-form-item label=\"内容\" prop=\"content\">\n          <div id=\"editor\" class=\"rich-editor\" />\n        </el-form-item>\n      </el-form>\n\n      <template #footer>\n        <el-button size=\"mini\" @click=\"dialogVisible = false\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          :loading=\"btnLoading\"\n          @click=\"save\"\n        >确定</el-button>\n      </template>\n    </el-dialog>\n\n    <!-- ▍内容预览 -->\n    <el-dialog\n      title=\"文章内容\"\n      :visible.sync=\"previewVisible\"\n      width=\"50%\"\n      :close-on-click-modal=\"false\"\n      destroy-on-close\n    >\n      <div class=\"w-e-text\" v-html=\"previewContent\" />\n\n      <template #footer>\n        <el-button size=\"mini\" @click=\"previewVisible = false\">关 闭</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor'\n\nexport default {\n  name: 'UserPosts',\n  data() {\n    return {\n      /* 列表 */\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      title: '',\n\n      /* 编辑弹窗 */\n      dialogVisible: false,\n      form: {},\n      rules: {\n        title: [{ required: true, message: '请输入标题', trigger: 'blur' }],\n        descr: [{ required: true, message: '请输入简介', trigger: 'blur' }],\n        circle: [{ required: true, message: '请选择圈子', trigger: 'blur' }]\n      },\n      btnLoading: false,\n      editor: null,\n      fileList: [],\n\n      /* 预览弹窗 */\n      previewVisible: false,\n      previewContent: '',\n\n      circles: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    }\n  },\n  created() {\n    this.load()\n    this.loadCircles()\n  },\n  methods: {\n    /* ---------- 圈子 ---------- */\n    async loadCircles() {\n      const { code, data } = await this.$request.get('/circles/selectAll')\n      if (code === '200') this.circles = data || []\n    },\n\n    /* ---------- 列表 ---------- */\n    async load(page = this.pageNum) {\n      this.pageNum = page\n      const { code, data, msg } = await this.$request.get('/posts/selectPage', {\n        params: { pageNum: this.pageNum, pageSize: this.pageSize, title: this.title }\n      })\n      if (code === '200') {\n        this.tableData = data.list\n        this.total = data.total\n      } else {\n        this.$message.error(msg)\n      }\n    },\n    handleCurrentChange(page) {\n      this.load(page)\n    },\n    reset() {\n      this.title = ''\n      this.load(1)\n    },\n\n    /* ---------- 弹窗 ---------- */\n    handleAdd() {\n      this.form = {}\n      this.fileList = []\n      this.dialogVisible = true\n      this.initEditor('')\n    },\n    handleEdit(row) {\n      this.form = { ...row }\n      this.fileList = row.img ? [{ url: row.img }] : []\n      this.dialogVisible = true\n      this.initEditor(row.content)\n    },\n    initEditor(html) {\n      this.$nextTick(() => {\n        if (this.editor) this.editor.destroy()\n\n        this.editor = new E('#editor')\n        this.editor.config.uploadImgServer = `${this.$baseUrl}/files/editor/upload`\n        this.editor.config.uploadFileName = 'file'\n        this.editor.config.uploadImgHeaders = { token: this.user.token }\n        this.editor.config.uploadImgParams = { type: 'img' }\n        this.editor.create()\n        this.editor.txt.html(html)\n      })\n    },\n    handleImgSuccess({ data }) {\n      this.form.img = data\n    },\n    async save() {\n      const valid = await this.$refs.formRef.validate().catch(() => false)\n      if (!valid) return\n\n      this.form.content = this.editor.txt.html()\n      const url = this.form.id ? '/posts/update' : '/posts/add'\n      const method = this.form.id ? 'PUT' : 'POST'\n\n      this.btnLoading = true\n      const { code, msg } = await this.$request({ url, method, data: this.form })\n      this.btnLoading = false\n\n      code === '200'\n        ? (this.$message.success('保存成功'), (this.dialogVisible = false), this.load(1))\n        : this.$message.error(msg)\n    },\n\n    /* ---------- 删除 ---------- */\n    del(id) {\n      this.$confirm('您确定删除吗？', '确认删除', { type: 'warning' })\n        .then(() => this.$request.delete(`/posts/delete/${id}`))\n        .then(({ code, msg }) => {\n          code === '200'\n            ? (this.$message.success('操作成功'), this.load(1))\n            : this.$message.error(msg)\n        })\n        .catch(() => {})\n    },\n\n    /* ---------- 预览 ---------- */\n    preview(content) {\n      this.previewContent = content\n      this.previewVisible = true\n    }\n  },\n  beforeDestroy() {\n    this.editor && this.editor.destroy()\n  }\n}\n</script>\n\n<style scoped>\n.user-posts {\n  width: 70%;\n  margin: 20px auto;\n}\n/* 工具栏 */\n.toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n}\n.toolbar-right {\n  display: flex;\n  align-items: center;\n}\n.search-input {\n  width: 260px;\n  margin-right: 10px;\n}\n\n/* 分页 */\n.pager {\n  margin-top: 16px;\n  text-align: center;\n}\n\n/* 富文本编辑器容器 */\n.rich-editor {\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}