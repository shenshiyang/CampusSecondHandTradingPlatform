{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport * as echarts from 'echarts';\nimport request from '@/utils/request'; // 你的封装好的 axios 工具\n\n// 统一定义默认时间：最近7天\n\nexport default {\n  __name: 'Home',\n  setup(__props) {\n    const today = new Date();\n    const sevenAgo = new Date(today.getTime() - 6 * 24 * 3600 * 1000);\n    const rangeLine = ref([sevenAgo, today]);\n    const rangeBar = ref([sevenAgo, today]);\n    const rangePie = ref([sevenAgo, today]);\n    const rangeOnline = ref([sevenAgo, today]);\n    let lineChart, barChart, pieChart, onlineChart;\n    onMounted(() => {\n      lineChart = echarts.init(document.getElementById('lineChart'));\n      barChart = echarts.init(document.getElementById('barChart'));\n      pieChart = echarts.init(document.getElementById('pieChart'));\n      onlineChart = echarts.init(document.getElementById('onlineChart'));\n      loadLine();\n      loadBar();\n      loadPie();\n      loadOnline();\n    });\n\n    // 加载第一张图（销售额 + 订单数折线）\n    function loadLine() {\n      const [start, end] = rangeLine.value.map(d => formatDate(d));\n      request.get('/orders/lineWithCount', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = res.data || [];\n        lineChart.setOption({\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['销售额', '订单数']\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(i => i.name)\n          },\n          yAxis: [{\n            type: 'value',\n            name: '销售额(元)'\n          }, {\n            type: 'value',\n            name: '订单数',\n            position: 'right'\n          }],\n          series: [{\n            name: '销售额',\n            type: 'line',\n            data: data.map(i => i.sales)\n          }, {\n            name: '订单数',\n            type: 'line',\n            yAxisIndex: 1,\n            data: data.map(i => i.count)\n          }]\n        });\n      });\n    }\n\n    // 加载第二张图（商家销售额排行柱状）\n    function loadBar() {\n      const [start, end] = rangeBar.value.map(d => formatDate(d));\n      request.get('/orders/selectBar', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = res.data || [];\n        barChart.setOption({\n          tooltip: {},\n          xAxis: {\n            type: 'value'\n          },\n          yAxis: {\n            type: 'category',\n            data: data.map(i => i.name)\n          },\n          series: [{\n            type: 'bar',\n            data: data.map(i => i.value)\n          }]\n        });\n      });\n    }\n\n    // 加载第三张图（商品分类销量占比饼图）\n    function loadPie() {\n      const [start, end] = rangePie.value.map(d => formatDate(d));\n      request.get('/orders/selectCategorySalesCount', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = res.data || [];\n        pieChart.setOption({\n          tooltip: {\n            trigger: 'item'\n          },\n          series: [{\n            type: 'pie',\n            radius: '60%',\n            data\n          }]\n        });\n      });\n    }\n\n    // 加载第四张图（用户在线趋势折线）\n    function loadOnline() {\n      const [start, end] = rangeOnline.value.map(d => formatDate(d));\n      request.get('/user/selectOnlineTrend', {\n        params: {\n          startDate: start,\n          endDate: end\n        }\n      }).then(res => {\n        const data = res.data || [];\n        onlineChart.setOption({\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis: {\n            type: 'category',\n            data: data.map(i => i.name)\n          },\n          yAxis: {\n            type: 'value',\n            name: '在线人数'\n          },\n          series: [{\n            type: 'line',\n            data: data.map(i => i.value)\n          }]\n        });\n      });\n    }\n\n    // 工具函数：把日期对象转成 yyyy-MM-dd\n    function formatDate(date) {\n      const d = new Date(date);\n      const year = d.getFullYear();\n      const month = String(d.getMonth() + 1).padStart(2, '0');\n      const day = String(d.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n    return {\n      __sfc: true,\n      today,\n      sevenAgo,\n      rangeLine,\n      rangeBar,\n      rangePie,\n      rangeOnline,\n      lineChart,\n      barChart,\n      pieChart,\n      onlineChart,\n      loadLine,\n      loadBar,\n      loadPie,\n      loadOnline,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","echarts","request","today","Date","sevenAgo","getTime","rangeLine","rangeBar","rangePie","rangeOnline","lineChart","barChart","pieChart","onlineChart","init","document","getElementById","loadLine","loadBar","loadPie","loadOnline","start","end","value","map","d","formatDate","get","params","startDate","endDate","then","res","data","setOption","tooltip","trigger","legend","xAxis","type","i","name","yAxis","position","series","sales","yAxisIndex","count","radius","date","year","getFullYear","month","String","getMonth","padStart","day","getDate"],"sources":["Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n\n    <!-- ① 销售额 + 订单数折线图 -->\n    <el-card>\n      <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n        <span style=\"font-size:16px;\">销售额与订单数趋势</span>\n        <el-date-picker\n          v-model=\"rangeLine\"\n          type=\"daterange\"\n          format=\"YYYY-MM-DD\"\n          value-format=\"YYYY-MM-DD\"\n          size=\"small\"\n          @change=\"loadLine\"\n        />\n      </div>\n      <div id=\"lineChart\" style=\"height:400px;\"></div>\n    </el-card>\n\n    <el-row :gutter=\"20\" style=\"margin-top:20px\">\n      <!-- ② 商家销售额排行柱状图 -->\n      <el-col :span=\"12\">\n        <el-card>\n          <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n            <span style=\"font-size:16px;\">商家销售额排行</span>\n            <el-date-picker\n              v-model=\"rangeBar\"\n              type=\"daterange\"\n              format=\"YYYY-MM-DD\"\n              value-format=\"YYYY-MM-DD\"\n              size=\"small\"\n              @change=\"loadBar\"\n            />\n          </div>\n          <div id=\"barChart\" style=\"height:400px;\"></div>\n        </el-card>\n      </el-col>\n\n      <!-- ③ 商品分类销量占比饼图 -->\n      <el-col :span=\"12\">\n        <el-card>\n          <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n            <span style=\"font-size:16px;\">商品分类销量占比</span>\n            <el-date-picker\n              v-model=\"rangePie\"\n              type=\"daterange\"\n              format=\"YYYY-MM-DD\"\n              value-format=\"YYYY-MM-DD\"\n              size=\"small\"\n              @change=\"loadPie\"\n            />\n          </div>\n          <div id=\"pieChart\" style=\"height:400px;\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- ④ 用户在线趋势折线图 -->\n    <el-card style=\"margin-top:20px\">\n      <div style=\"display:flex; justify-content:space-between; align-items:center;\">\n        <span style=\"font-size:16px;\">用户在线趋势</span>\n        <el-date-picker\n          v-model=\"rangeOnline\"\n          type=\"daterange\"\n          format=\"YYYY-MM-DD\"\n          value-format=\"YYYY-MM-DD\"\n          size=\"small\"\n          @change=\"loadOnline\"\n        />\n      </div>\n      <div id=\"onlineChart\" style=\"height:400px;\"></div>\n    </el-card>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport * as echarts from 'echarts'\nimport request from '@/utils/request'  // 你的封装好的 axios 工具\n\n// 统一定义默认时间：最近7天\nconst today = new Date()\nconst sevenAgo = new Date(today.getTime() - 6 * 24 * 3600 * 1000)\n\nconst rangeLine   = ref([sevenAgo, today])\nconst rangeBar    = ref([sevenAgo, today])\nconst rangePie    = ref([sevenAgo, today])\nconst rangeOnline = ref([sevenAgo, today])\n\nlet lineChart, barChart, pieChart, onlineChart\n\nonMounted(() => {\n  lineChart   = echarts.init(document.getElementById('lineChart'))\n  barChart    = echarts.init(document.getElementById('barChart'))\n  pieChart    = echarts.init(document.getElementById('pieChart'))\n  onlineChart = echarts.init(document.getElementById('onlineChart'))\n\n  loadLine()\n  loadBar()\n  loadPie()\n  loadOnline()\n})\n\n// 加载第一张图（销售额 + 订单数折线）\nfunction loadLine() {\n  const [start, end] = rangeLine.value.map(d => formatDate(d))\n  request.get('/orders/lineWithCount', { params: { startDate: start, endDate: end } })\n    .then(res => {\n      const data = res.data || []\n      lineChart.setOption({\n        tooltip: { trigger: 'axis' },\n        legend: { data: ['销售额', '订单数'] },\n        xAxis: { type: 'category', data: data.map(i => i.name) },\n        yAxis: [\n          { type: 'value', name: '销售额(元)' },\n          { type: 'value', name: '订单数', position: 'right' }\n        ],\n        series: [\n          { name: '销售额', type: 'line', data: data.map(i => i.sales) },\n          { name: '订单数', type: 'line', yAxisIndex: 1, data: data.map(i => i.count) }\n        ]\n      })\n    })\n}\n\n// 加载第二张图（商家销售额排行柱状）\nfunction loadBar() {\n  const [start, end] = rangeBar.value.map(d => formatDate(d))\n  request.get('/orders/selectBar', { params: { startDate: start, endDate: end } })\n    .then(res => {\n      const data = res.data || []\n      barChart.setOption({\n        tooltip: {},\n        xAxis: { type: 'value' },\n        yAxis: { type: 'category', data: data.map(i => i.name) },\n        series: [{ type: 'bar', data: data.map(i => i.value) }]\n      })\n    })\n}\n\n// 加载第三张图（商品分类销量占比饼图）\nfunction loadPie() {\n  const [start, end] = rangePie.value.map(d => formatDate(d))\n  request.get('/orders/selectCategorySalesCount', { params: { startDate: start, endDate: end } })\n    .then(res => {\n      const data = res.data || []\n      pieChart.setOption({\n        tooltip: { trigger: 'item' },\n        series: [{\n          type: 'pie',\n          radius: '60%',\n          data\n        }]\n      })\n    })\n}\n\n// 加载第四张图（用户在线趋势折线）\nfunction loadOnline() {\n  const [start, end] = rangeOnline.value.map(d => formatDate(d))\n  request.get('/user/selectOnlineTrend', { params: { startDate: start, endDate: end } })\n    .then(res => {\n      const data = res.data || []\n      onlineChart.setOption({\n        tooltip: { trigger: 'axis' },\n        xAxis: { type: 'category', data: data.map(i => i.name) },\n        yAxis: { type: 'value', name: '在线人数' },\n        series: [{ type: 'line', data: data.map(i => i.value) }]\n      })\n    })\n}\n\n// 工具函数：把日期对象转成 yyyy-MM-dd\nfunction formatDate(date) {\n  const d = new Date(date)\n  const year = d.getFullYear()\n  const month = String(d.getMonth() + 1).padStart(2, '0')\n  const day = String(d.getDate()).padStart(2, '0')\n  return `${year}-${month}-${day}`\n}\n</script>\n\n<style scoped>\n.home-container {\n  padding: 20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}