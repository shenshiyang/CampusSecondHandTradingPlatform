{"ast":null,"code":"export default {\n  name: 'UserHelp',\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      keyword: '',\n      dialogVisible: false,\n      btnLoading: false,\n      form: {\n        solved: '未解决'\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }]\n      },\n      fileList: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    /* ---------- 列表 ---------- */\n    async load(page = this.pageNum) {\n      this.pageNum = page;\n      const {\n        code,\n        data,\n        msg\n      } = await this.$request.get('/help/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.keyword\n        }\n      });\n      if (code === '200') {\n        this.tableData = data.list;\n        this.total = data.total;\n      } else {\n        this.$message.error(msg);\n      }\n    },\n    handleCurrentChange(page) {\n      this.load(page);\n    },\n    /* ---------- 弹窗 ---------- */\n    handleAdd() {\n      this.form = {\n        solved: '未解决'\n      };\n      this.fileList = [];\n      this.dialogVisible = true;\n    },\n    handleEdit(row) {\n      this.form = {\n        ...row\n      };\n      this.fileList = row.img ? [{\n        url: row.img\n      }] : [];\n      this.dialogVisible = true;\n    },\n    handleImgSuccess({\n      data\n    }) {\n      this.form.img = data;\n    },\n    async save() {\n      const valid = await this.$refs.formRef.validate().catch(() => false);\n      if (!valid) return;\n      this.btnLoading = true;\n      const url = this.form.id ? '/help/update' : '/help/add';\n      const method = this.form.id ? 'PUT' : 'POST';\n      const {\n        code,\n        msg\n      } = await this.$request({\n        url,\n        method,\n        data: this.form\n      });\n      this.btnLoading = false;\n      if (code === '200') {\n        this.$message.success('保存成功');\n        this.dialogVisible = false;\n        this.load(1);\n      } else {\n        this.$message.error(msg);\n      }\n    },\n    /* ---------- 删除 ---------- */\n    del(id) {\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: 'warning'\n      }).then(() => this.$request.delete(`/help/delete/${id}`)).then(({\n        code,\n        msg\n      }) => {\n        code === '200' ? (this.$message.success('操作成功'), this.load(1)) : this.$message.error(msg);\n      }).catch(() => {});\n    },\n    /* ---------- 切换求助状态 ---------- */\n    async toggleSolved(row) {\n      const newStatus = row.solved === '已解决' ? '未解决' : '已解决';\n      try {\n        await this.$request.post('/help/updateSolvedStatus', {\n          id: row.id,\n          solved: newStatus\n        });\n        row.solved = newStatus;\n        this.$message.success('状态更新成功');\n      } catch (error) {\n        this.$message.error('操作失败：' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","keyword","dialogVisible","btnLoading","form","solved","rules","title","required","message","trigger","content","fileList","user","JSON","parse","localStorage","getItem","created","load","methods","page","code","msg","$request","get","params","list","$message","error","handleCurrentChange","handleAdd","handleEdit","row","img","url","handleImgSuccess","save","valid","$refs","formRef","validate","catch","id","method","success","del","$confirm","type","then","delete","toggleSolved","newStatus","post"],"sources":["src/views/front/UserHelp.vue"],"sourcesContent":["<template>\n  <div class=\"user-help card\">\n    <!-- ▍顶部操作 -->\n    <div class=\"toolbar\">\n      <el-button type=\"primary\" plain size=\"mini\" @click=\"handleAdd\">\n        发布求助\n      </el-button>\n    </div>\n\n    <!-- ▍列表 -->\n    <el-table\n      :data=\"tableData\"\n      stripe\n      border\n    >\n      <el-table-column prop=\"title\" label=\"标题\" />\n      <el-table-column prop=\"content\" label=\"内容\" show-overflow-tooltip />\n      <el-table-column label=\"图片\" width=\"80\">\n        <template #default=\"{ row }\">\n          <el-image\n            v-if=\"row.img\"\n            :src=\"row.img\"\n            :preview-src-list=\"[row.img]\"\n            style=\"width: 50px\"\n          />\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"time\" label=\"发布时间\" width=\"160\" />\n      <el-table-column label=\"是否解决\" width=\"90\">\n        <template #default=\"{ row }\">\n          <el-tag type=\"danger\" v-if=\"row.solved === '未解决'\">未解决</el-tag>\n          <el-tag type=\"success\" v-else>已解决</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"审核状态\" width=\"90\">\n        <template #default=\"{ row }\">\n          <el-tag type=\"info\" v-if=\"row.status === '待审核'\">待审核</el-tag>\n          <el-tag type=\"success\" v-if=\"row.status === '通过'\">通过</el-tag>\n          <el-tag type=\"danger\" v-if=\"row.status === '拒绝'\">拒绝</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"280\" align=\"center\">\n        <template #default=\"{ row }\">\n          <div class=\"btn-group\">\n            <el-button\n              v-if=\"row.status !== '通过'\"\n              size=\"mini\"\n              type=\"success\"\n              plain\n              @click=\"handleEdit(row)\"\n            >编辑</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              plain\n              @click=\"del(row.id)\"\n            >删除</el-button>\n            <el-button\n              size=\"mini\"\n              :type=\"row.solved === '已解决' ? 'info' : 'warning'\"\n              plain\n              @click=\"toggleSolved(row)\"\n            >\n              {{ row.solved === '已解决' ? '标记未解决' : '标记已解决' }}\n            </el-button>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- ▍分页 -->\n    <el-pagination\n      v-if=\"total\"\n      class=\"pager\"\n      background\n      layout=\"total, prev, pager, next\"\n      :current-page=\"pageNum\"\n      :page-size=\"pageSize\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30]\"\n      @current-change=\"handleCurrentChange\"\n    />\n\n    <!-- ▍新增 / 编辑弹窗 -->\n    <el-dialog\n      title=\"求购信息\"\n      :visible.sync=\"dialogVisible\"\n      width=\"480px\"\n      :close-on-click-modal=\"false\"\n      destroy-on-close\n    >\n      <el-form\n        ref=\"formRef\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"90px\"\n      >\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model.trim=\"form.title\" />\n        </el-form-item>\n\n        <el-form-item label=\"内容\" prop=\"content\">\n          <el-input\n            type=\"textarea\"\n            :autosize=\"{ minRows: 3 }\"\n            v-model.trim=\"form.content\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"图片\">\n          <el-upload\n            :action=\"$baseUrl + '/files/upload'\"\n            :headers=\"{ token: user.token }\"\n            list-type=\"picture-card\"\n            :limit=\"1\"\n            :on-success=\"handleImgSuccess\"\n            :file-list=\"fileList\"\n          >\n            <i class=\"el-icon-plus\" />\n          </el-upload>\n        </el-form-item>\n\n        <el-form-item label=\"是否解决\" prop=\"solved\">\n          <el-select v-model=\"form.solved\" placeholder=\"请选择\">\n            <el-option value=\"未解决\" />\n            <el-option value=\"已解决\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n\n      <template #footer>\n        <el-button size=\"mini\" @click=\"dialogVisible = false\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          :loading=\"btnLoading\"\n          @click=\"save\"\n        >确定</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserHelp',\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      keyword: '',\n      dialogVisible: false,\n      btnLoading: false,\n      form: { solved: '未解决' },\n      rules: {\n        title: [{ required: true, message: '请输入标题', trigger: 'blur' }],\n        content: [{ required: true, message: '请输入内容', trigger: 'blur' }]\n      },\n      fileList: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    }\n  },\n  created() {\n    this.load()\n  },\n  methods: {\n    /* ---------- 列表 ---------- */\n    async load(page = this.pageNum) {\n      this.pageNum = page\n      const { code, data, msg } = await this.$request.get('/help/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.keyword\n        }\n      })\n      if (code === '200') {\n        this.tableData = data.list\n        this.total = data.total\n      } else {\n        this.$message.error(msg)\n      }\n    },\n    handleCurrentChange(page) {\n      this.load(page)\n    },\n\n    /* ---------- 弹窗 ---------- */\n    handleAdd() {\n      this.form = { solved: '未解决' }\n      this.fileList = []\n      this.dialogVisible = true\n    },\n    handleEdit(row) {\n      this.form = { ...row }\n      this.fileList = row.img ? [{ url: row.img }] : []\n      this.dialogVisible = true\n    },\n    handleImgSuccess({ data }) {\n      this.form.img = data\n    },\n    async save() {\n      const valid = await this.$refs.formRef.validate().catch(() => false)\n      if (!valid) return\n      this.btnLoading = true\n      const url = this.form.id ? '/help/update' : '/help/add'\n      const method = this.form.id ? 'PUT' : 'POST'\n      const { code, msg } = await this.$request({ url, method, data: this.form })\n      this.btnLoading = false\n      if (code === '200') {\n        this.$message.success('保存成功')\n        this.dialogVisible = false\n        this.load(1)\n      } else {\n        this.$message.error(msg)\n      }\n    },\n\n    /* ---------- 删除 ---------- */\n    del(id) {\n      this.$confirm('您确定删除吗？', '确认删除', { type: 'warning' })\n        .then(() => this.$request.delete(`/help/delete/${id}`))\n        .then(({ code, msg }) => {\n          code === '200'\n            ? (this.$message.success('操作成功'), this.load(1))\n            : this.$message.error(msg)\n        })\n        .catch(() => {})\n    },\n\n    /* ---------- 切换求助状态 ---------- */\n    async toggleSolved(row) {\n      const newStatus = row.solved === '已解决' ? '未解决' : '已解决'\n      try {\n        await this.$request.post('/help/updateSolvedStatus', {\n          id: row.id,\n          solved: newStatus\n        })\n        row.solved = newStatus\n        this.$message.success('状态更新成功')\n      } catch (error) {\n        this.$message.error('操作失败：' + error.message)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-help {\n  width: 80%;\n  margin: 20px auto;\n}\n.toolbar {\n  margin-bottom: 12px;\n}\n.pager {\n  margin-top: 16px;\n  text-align: center;\n}\n.btn-group {\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}