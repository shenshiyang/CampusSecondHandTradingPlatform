{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ProductListPage',\n  data() {\n    return {\n      query: '',\n      selectedCategory: '',\n      categories: [{\n        label: '全部',\n        value: ''\n      }, {\n        label: '分类1',\n        value: 'category1'\n      }, {\n        label: '分类2',\n        value: 'category2'\n      }],\n      productList: [],\n      page: 1,\n      pageSize: 10,\n      total: 0,\n      loading: false\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    // 获取商品列表数据\n    fetchProducts() {\n      this.loading = true;\n      axios.get('/api/products', {\n        params: {\n          page: this.page,\n          pageSize: this.pageSize,\n          ...(this.query ? {\n            keyword: this.query\n          } : {}),\n          ...(this.selectedCategory ? {\n            category: this.selectedCategory\n          } : {})\n        }\n      }).then(res => {\n        this.loading = false;\n        const data = res.data;\n        this.total = data.total;\n        const list = data.list || data.items || data.products || data; // 根据实际返回结构调整\n        // 随机生成标签（不影响后端数据）\n        const tags = ['新品', '热卖'];\n        this.productList = list.map(item => {\n          return {\n            ...item,\n            tag: item.tag ? item.tag : tags[Math.floor(Math.random() * tags.length)]\n          };\n        });\n      }).catch(err => {\n        this.loading = false;\n        console.error('Failed to fetch products:', err);\n      });\n    },\n    // 执行搜索\n    doSearch() {\n      this.page = 1;\n      this.fetchProducts();\n    },\n    // 处理分类筛选变化\n    handleCategoryChange() {\n      this.page = 1;\n      this.fetchProducts();\n    },\n    // 分页页码改变\n    handlePageChange(page) {\n      this.page = page;\n      this.fetchProducts();\n    },\n    // 跳转商品详情页\n    goDetail(item) {\n      // 假设使用 Vue Router 进行页面导航\n      this.$router.push({\n        path: '/product/detail',\n        query: {\n          id: item.id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","query","selectedCategory","categories","label","value","productList","page","pageSize","total","loading","created","fetchProducts","methods","get","params","keyword","category","then","res","list","items","products","tags","map","item","tag","Math","floor","random","length","catch","err","console","error","doSearch","handleCategoryChange","handlePageChange","goDetail","$router","push","path","id"],"sources":["src/views/front/Home.vue"],"sourcesContent":["<template>\n  <div class=\"product-page\">\n    <div class=\"page-container\">\n      <!-- 搜索和筛选栏 -->\n      <div class=\"search-container\">\n        <el-select v-model=\"selectedCategory\" class=\"filter-select\" placeholder=\"选择分类\" @change=\"handleCategoryChange\" clearable>\n          <el-option v-for=\"cat in categories\" :key=\"cat.value\" :label=\"cat.label\" :value=\"cat.value\" />\n        </el-select>\n        <el-input v-model=\"query\" class=\"search-input\" placeholder=\"搜索商品...\" clearable @keyup.enter=\"doSearch\">\n          <template slot=\"suffix\">\n            <i class=\"el-icon-search search-icon\" @click=\"doSearch\"></i>\n          </template>\n        </el-input>\n      </div>\n      <!-- 商品卡片网格 -->\n      <div class=\"products-grid\" v-loading=\"loading\">\n        <el-row :gutter=\"20\">\n          <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"6\" v-for=\"item in productList\" :key=\"item.id\">\n            <el-card class=\"product-card\" shadow=\"always\" :body-style=\"{ padding: '0px' }\">\n              <div class=\"image-container\">\n                <el-image :src=\"item.imageUrl\" fit=\"cover\" class=\"product-image\" />\n                <el-tag v-if=\"item.tag\" :type=\"item.tag === '新品' ? 'success' : 'warning'\" effect=\"dark\" size=\"small\" class=\"product-tag\">\n                  {{ item.tag }}\n                </el-tag>\n              </div>\n              <div class=\"product-info\">\n                <div class=\"product-title\" @click=\"goDetail(item)\">{{ item.name }}</div>\n                <div class=\"card-footer\">\n                  <span class=\"price\">￥{{ Number(item.price).toFixed(2) }}</span>\n                  <el-button type=\"text\" size=\"mini\" class=\"detail-btn\" @click=\"goDetail(item)\">查看详情</el-button>\n                </div>\n              </div>\n            </el-card>\n          </el-col>\n        </el-row>\n        <!-- 分页组件 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            background\n            layout=\"prev, pager, next, jumper\"\n            :current-page=\"page\"\n            :page-size=\"pageSize\"\n            :total=\"total\"\n            @current-change=\"handlePageChange\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'ProductListPage',\n  data() {\n    return {\n      query: '',\n      selectedCategory: '',\n      categories: [\n        { label: '全部', value: '' },\n        { label: '分类1', value: 'category1' },\n        { label: '分类2', value: 'category2' }\n      ],\n      productList: [],\n      page: 1,\n      pageSize: 10,\n      total: 0,\n      loading: false\n    };\n  },\n  created() {\n    this.fetchProducts();\n  },\n  methods: {\n    // 获取商品列表数据\n    fetchProducts() {\n      this.loading = true;\n      axios.get('/api/products', {\n        params: {\n          page: this.page,\n          pageSize: this.pageSize,\n          ...(this.query ? { keyword: this.query } : {}),\n          ...(this.selectedCategory ? { category: this.selectedCategory } : {})\n        }\n      }).then(res => {\n        this.loading = false;\n        const data = res.data;\n        this.total = data.total;\n        const list = data.list || data.items || data.products || data;  // 根据实际返回结构调整\n        // 随机生成标签（不影响后端数据）\n        const tags = ['新品', '热卖'];\n        this.productList = list.map(item => {\n          return {\n            ...item,\n            tag: item.tag ? item.tag : tags[Math.floor(Math.random() * tags.length)]\n          };\n        });\n      }).catch(err => {\n        this.loading = false;\n        console.error('Failed to fetch products:', err);\n      });\n    },\n    // 执行搜索\n    doSearch() {\n      this.page = 1;\n      this.fetchProducts();\n    },\n    // 处理分类筛选变化\n    handleCategoryChange() {\n      this.page = 1;\n      this.fetchProducts();\n    },\n    // 分页页码改变\n    handlePageChange(page) {\n      this.page = page;\n      this.fetchProducts();\n    },\n    // 跳转商品详情页\n    goDetail(item) {\n      // 假设使用 Vue Router 进行页面导航\n      this.$router.push({ path: '/product/detail', query: { id: item.id } });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.product-page {\n  min-height: 100vh;\n  background: linear-gradient(135deg, #f0f0f0 0%, #e8f5ff 100%);\n}\n.page-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n/* 玻璃拟态搜索栏样式 */\n.search-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 10px;\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 12px;\n  padding: 10px 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n.search-input {\n  flex: 1;\n  min-width: 200px;\n}\n.search-icon {\n  cursor: pointer;\n  color: #409EFF;\n}\n/* 商品卡片样式 */\n.product-card {\n  border: none !important;\n  border-radius: 8px;\n  overflow: hidden;\n}\n.image-container {\n  position: relative;\n  width: 100%;\n  height: 200px;\n  background: #f5f5f5;\n}\n.product-tag {\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  z-index: 1;\n}\n.product-info {\n  padding: 10px;\n}\n.product-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: #333;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 20px;\n  height: 40px;\n  margin-bottom: 8px;\n  cursor: pointer;\n}\n.card-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.price {\n  font-size: 16px;\n  font-weight: bold;\n  color: #e54d42;\n}\n</style>\n"],"mappings":";AAmDA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,gBAAA;MACAC,UAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,WAAA;MACAC,IAAA;MACAC,QAAA;MACAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA;IACAD,cAAA;MACA,KAAAF,OAAA;MACAZ,KAAA,CAAAgB,GAAA;QACAC,MAAA;UACAR,IAAA,OAAAA,IAAA;UACAC,QAAA,OAAAA,QAAA;UACA,SAAAP,KAAA;YAAAe,OAAA,OAAAf;UAAA;UACA,SAAAC,gBAAA;YAAAe,QAAA,OAAAf;UAAA;QACA;MACA,GAAAgB,IAAA,CAAAC,GAAA;QACA,KAAAT,OAAA;QACA,MAAAV,IAAA,GAAAmB,GAAA,CAAAnB,IAAA;QACA,KAAAS,KAAA,GAAAT,IAAA,CAAAS,KAAA;QACA,MAAAW,IAAA,GAAApB,IAAA,CAAAoB,IAAA,IAAApB,IAAA,CAAAqB,KAAA,IAAArB,IAAA,CAAAsB,QAAA,IAAAtB,IAAA;QACA;QACA,MAAAuB,IAAA;QACA,KAAAjB,WAAA,GAAAc,IAAA,CAAAI,GAAA,CAAAC,IAAA;UACA;YACA,GAAAA,IAAA;YACAC,GAAA,EAAAD,IAAA,CAAAC,GAAA,GAAAD,IAAA,CAAAC,GAAA,GAAAH,IAAA,CAAAI,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,KAAAN,IAAA,CAAAO,MAAA;UACA;QACA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACA,KAAAtB,OAAA;QACAuB,OAAA,CAAAC,KAAA,8BAAAF,GAAA;MACA;IACA;IACA;IACAG,SAAA;MACA,KAAA5B,IAAA;MACA,KAAAK,aAAA;IACA;IACA;IACAwB,qBAAA;MACA,KAAA7B,IAAA;MACA,KAAAK,aAAA;IACA;IACA;IACAyB,iBAAA9B,IAAA;MACA,KAAAA,IAAA,GAAAA,IAAA;MACA,KAAAK,aAAA;IACA;IACA;IACA0B,SAAAb,IAAA;MACA;MACA,KAAAc,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAxC,KAAA;UAAAyC,EAAA,EAAAjB,IAAA,CAAAiB;QAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}