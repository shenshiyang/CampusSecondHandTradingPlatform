{"ast":null,"code":"import E from 'wangeditor';\nconst validatePrice = (rule, value, cb) => value > 0 ? cb() : cb(new Error('价格必须大于 0'));\nexport default {\n  name: 'AddGoods',\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: {\n        id: null,\n        name: '',\n        price: null,\n        category: '',\n        stock: 1,\n        address: '',\n        saleStatus: '下架',\n        img: '',\n        content: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入商品名称',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          validator: validatePrice,\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: '请选择分类',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: '请输入发货地址',\n          trigger: 'blur'\n        }],\n        stock: [{\n          required: true,\n          type: 'number',\n          message: '请输入库存',\n          trigger: 'blur'\n        }]\n      },\n      editor: null,\n      btnLoading: false\n    };\n  },\n  async mounted() {\n    await Promise.all([this.loadCategory(), this.loadGoods()]);\n    this.initEditor(this.form.content || '');\n  },\n  beforeDestroy() {\n    this.editor && this.editor.destroy();\n  },\n  methods: {\n    /* 获取分类 */\n    async loadCategory() {\n      const {\n        data\n      } = await this.$request.get('/category/selectAll');\n      this.categoryList = data || [];\n    },\n    /* 编辑回显 */\n    async loadGoods() {\n      if (!this.id) return;\n      const {\n        data\n      } = await this.$request.get('/goods/selectById/' + this.id);\n      if (data) this.form = {\n        ...this.form,\n        ...data\n      };\n    },\n    /* 富文本初始化 */\n    initEditor(html) {\n      this.editor = new E('#editor');\n      this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n      this.editor.config.uploadFileName = 'file';\n      this.editor.config.uploadImgHeaders = {\n        token: this.user.token\n      };\n      this.editor.config.uploadImgParams = {\n        type: 'img'\n      };\n      this.editor.create();\n      this.editor.txt.html(html);\n    },\n    /* 图片上传成功 */\n    handleImgSuccess(resp) {\n      this.form.img = resp.data;\n      this.$message.success('上传成功');\n    },\n    /* 表单提交 */\n    save() {\n      this.$refs.formRef.validate(async valid => {\n        if (!valid) return;\n        this.btnLoading = true;\n        this.form.content = this.editor.txt.html();\n        const isUpdate = !!this.form.id;\n        const res = await this.$request({\n          url: isUpdate ? '/goods/update' : '/goods/add',\n          method: isUpdate ? 'PUT' : 'POST',\n          data: this.form\n        });\n        this.btnLoading = false;\n        if (res.code === '200') {\n          this.$message.success(isUpdate ? '修改成功' : '发布成功');\n          this.$router.back();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["E","validatePrice","rule","value","cb","Error","name","data","id","$route","query","user","JSON","parse","localStorage","getItem","categoryList","form","price","category","stock","address","saleStatus","img","content","rules","required","message","trigger","validator","type","editor","btnLoading","mounted","Promise","all","loadCategory","loadGoods","initEditor","beforeDestroy","destroy","methods","$request","get","html","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","create","txt","handleImgSuccess","resp","$message","success","save","$refs","formRef","validate","valid","isUpdate","res","url","method","code","$router","back","error","msg"],"sources":["src/views/front/AddGoods.vue"],"sourcesContent":["<template>\n  <div class=\"add-goods-container\">\n    <div class=\"content-wrapper\">\n      <div class=\"header-section\">\n        <el-button class=\"back-btn\" type=\"text\" @click=\"$router.back()\">\n          <i class=\"el-icon-arrow-left\"></i> 返回\n        </el-button>\n        <h2 class=\"page-title\">{{ form.id ? '编辑商品' : '发布商品' }}</h2>\n      </div>\n\n      <el-card class=\"form-card\" shadow=\"never\">\n        <el-form\n          ref=\"formRef\"\n          :model=\"form\"\n          :rules=\"rules\"\n          label-width=\"100px\"\n          class=\"goods-form\"\n        >\n          <el-row :gutter=\"24\">\n            <!-- 基本信息 -->\n            <el-col :span=\"14\">\n              <div class=\"form-section\">\n                <h3 class=\"section-title\">基本信息</h3>\n                <el-form-item label=\"商品名称\" prop=\"name\">\n                  <el-input \n                    v-model.trim=\"form.name\" \n                    placeholder=\"请输入商品名称\"\n                    clearable \n                  />\n                </el-form-item>\n\n                <el-form-item label=\"商品价格\" prop=\"price\">\n                  <el-input \n                    v-model.number=\"form.price\" \n                    placeholder=\"请输入价格\"\n                    class=\"price-input\"\n                  >\n                    <template #prefix>￥</template>\n                  </el-input>\n                </el-form-item>\n\n                <el-form-item label=\"商品分类\" prop=\"category\">\n                  <el-select \n                    v-model=\"form.category\" \n                    placeholder=\"请选择分类\"\n                    class=\"category-select\"\n                  >\n                    <el-option\n                      v-for=\"c in categoryList\"\n                      :key=\"c.id\"\n                      :label=\"c.name\"\n                      :value=\"c.name\"\n                    />\n                  </el-select>\n                </el-form-item>\n\n                <el-form-item label=\"商品库存\" prop=\"stock\">\n                  <el-input-number\n                    v-model.number=\"form.stock\"\n                    :min=\"1\"\n                    :max=\"9999\"\n                    controls-position=\"right\"\n                    class=\"stock-input\"\n                  />\n                </el-form-item>\n\n                <el-form-item label=\"发货地址\" prop=\"address\">\n                  <el-input \n                    v-model.trim=\"form.address\" \n                    placeholder=\"请输入发货地址\"\n                    class=\"address-input\"\n                  >\n                    <template #prefix>\n                      <i class=\"el-icon-location\"></i>\n                    </template>\n                  </el-input>\n                </el-form-item>\n\n                <el-form-item label=\"上架状态\" prop=\"saleStatus\">\n                  <el-radio-group v-model=\"form.saleStatus\" class=\"status-radio\">\n                    <el-radio label=\"上架\">立即上架</el-radio>\n                    <el-radio label=\"下架\">暂不上架</el-radio>\n                  </el-radio-group>\n                </el-form-item>\n              </div>\n            </el-col>\n\n            <!-- 商品图片 -->\n            <el-col :span=\"10\">\n              <div class=\"form-section\">\n                <h3 class=\"section-title\">商品图片</h3>\n                <el-form-item prop=\"img\" class=\"upload-container\">\n                  <div class=\"upload-wrapper\">\n                    <div class=\"upload-area\">\n                      <el-upload\n                        :action=\"$baseUrl + '/files/upload'\"\n                        :headers=\"{ token: user.token }\"\n                        list-type=\"picture-card\"\n                        :on-success=\"handleImgSuccess\"\n                        class=\"goods-uploader\"\n                      >\n                        <div class=\"upload-content\">\n                          <i class=\"el-icon-picture-outline-round\"></i>\n                        </div>\n                      </el-upload>\n                    </div>\n                    <div class=\"upload-tips\">\n                      <p><i class=\"el-icon-info\"></i> 图片要求：</p>\n                      <ul>\n                        <li>图片清晰，不能虚化、模糊</li>\n                        <li>主体突出，背景干净</li>\n                        <li>不能带有水印、二维码等</li>\n                      </ul>\n                    </div>\n                  </div>\n                </el-form-item>\n              </div>\n            </el-col>\n\n            <!-- 商品详情 -->\n            <el-col :span=\"24\">\n              <div class=\"form-section\">\n                <h3 class=\"section-title\">商品详情</h3>\n                <el-form-item prop=\"content\">\n                  <div id=\"editor\" class=\"rich-editor\"></div>\n                </el-form-item>\n              </div>\n            </el-col>\n          </el-row>\n\n          <div class=\"form-actions\">\n            <el-button \n              type=\"primary\" \n              :loading=\"btnLoading\" \n              @click=\"save\"\n              class=\"submit-btn\"\n            >\n              {{ form.id ? '保存修改' : '发布商品' }}\n            </el-button>\n          </div>\n        </el-form>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor'\nconst validatePrice = (rule, value, cb) =>\n  value > 0 ? cb() : cb(new Error('价格必须大于 0'))\n\nexport default {\n  name: 'AddGoods',\n  data() {\n    return {\n      id: this.$route.query.id,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      categoryList: [],\n      form: {\n        id: null,\n        name: '',\n        price: null,\n        category: '',\n        stock: 1,\n        address: '',\n        saleStatus: '下架',\n        img: '',\n        content: ''\n      },\n      rules: {\n        name: [{ required: true, message: '请输入商品名称', trigger: 'blur' }],\n        price: [{ required: true, validator: validatePrice, trigger: 'blur' }],\n        category: [{ required: true, message: '请选择分类', trigger: 'change' }],\n        address: [{ required: true, message: '请输入发货地址', trigger: 'blur' }],\n        stock: [{ required: true, type: 'number', message: '请输入库存', trigger: 'blur' }]\n      },\n      editor: null,\n      btnLoading: false\n    }\n  },\n  async mounted() {\n    await Promise.all([this.loadCategory(), this.loadGoods()])\n    this.initEditor(this.form.content || '')\n  },\n  beforeDestroy() {\n    this.editor && this.editor.destroy()\n  },\n  methods: {\n    /* 获取分类 */\n    async loadCategory() {\n      const { data } = await this.$request.get('/category/selectAll')\n      this.categoryList = data || []\n    },\n    /* 编辑回显 */\n    async loadGoods() {\n      if (!this.id) return\n      const { data } = await this.$request.get('/goods/selectById/' + this.id)\n      if (data) this.form = { ...this.form, ...data }\n    },\n    /* 富文本初始化 */\n    initEditor(html) {\n      this.editor = new E('#editor')\n      this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\n      this.editor.config.uploadFileName = 'file'\n      this.editor.config.uploadImgHeaders = { token: this.user.token }\n      this.editor.config.uploadImgParams = { type: 'img' }\n      this.editor.create()\n      this.editor.txt.html(html)\n    },\n    /* 图片上传成功 */\n    handleImgSuccess(resp) {\n      this.form.img = resp.data\n      this.$message.success('上传成功')\n    },\n    /* 表单提交 */\n    save() {\n      this.$refs.formRef.validate(async valid => {\n        if (!valid) return\n        this.btnLoading = true\n        this.form.content = this.editor.txt.html()\n        const isUpdate = !!this.form.id\n        const res = await this.$request({\n          url: isUpdate ? '/goods/update' : '/goods/add',\n          method: isUpdate ? 'PUT' : 'POST',\n          data: this.form\n        })\n        this.btnLoading = false\n        if (res.code === '200') {\n          this.$message.success(isUpdate ? '修改成功' : '发布成功')\n          this.$router.back()\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.add-goods-container {\n  min-height: 100vh;\n  background-color: #f5f7fa;\n  padding: 20px;\n}\n\n.content-wrapper {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.header-section {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.back-btn {\n  font-size: 16px;\n  padding: 0;\n  margin-right: 20px;\n}\n\n.back-btn i {\n  margin-right: 4px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n}\n\n.form-card {\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08) !important;\n}\n\n.form-section {\n  padding: 20px 0;\n  margin-bottom: 24px;\n}\n\n.section-title {\n  font-size: 18px;\n  font-weight: 500;\n  color: #333;\n  margin: 0 0 20px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #f0f0f0;\n  padding-left: 10px;\n}\n\n.goods-form :deep(.el-form-item__label) {\n  font-weight: 500;\n  color: #333;\n}\n\n.price-input :deep(.el-input__prefix) {\n  color: #ff4d4f;\n  font-weight: 500;\n}\n\n.category-select {\n  width: 100%;\n}\n\n.stock-input {\n  width: 100%;\n}\n\n.upload-container {\n  margin-left: -58px;\n}\n\n.upload-wrapper {\n  display: flex;\n  align-items: flex-start;\n  gap: 15px;\n}\n\n.upload-area {\n  padding-left: 0;\n}\n\n.goods-uploader {\n  width: 160px;\n}\n\n.goods-uploader :deep(.el-upload--picture-card) {\n  width: 160px;\n  height: 160px;\n  line-height: 160px;\n  border: 2px dashed #e8e8e8;\n  border-radius: 8px;\n  background-color: #fafafa;\n  transition: all 0.3s;\n  margin: 0;\n}\n\n.goods-uploader :deep(.el-upload-list--picture-card .el-upload-list__item) {\n  width: 160px;\n  height: 160px;\n  border-radius: 8px;\n  margin: 0;\n}\n\n.upload-content {\n  text-align: center;\n}\n\n.upload-content i {\n  font-size: 28px;\n  color: #1890ff;\n}\n\n.upload-tips {\n  flex: 1;\n  background: #f6f8fa;\n  padding: 12px 15px;\n  border-radius: 8px;\n  max-width: 200px;\n  margin-top: 0;\n}\n\n.upload-tips p {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 13px;\n  color: #333;\n  margin-bottom: 8px;\n}\n\n.upload-tips i {\n  color: #1890ff;\n  font-size: 14px;\n}\n\n.upload-tips ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.upload-tips li {\n  font-size: 12px;\n  color: #666;\n  line-height: 1.6;\n  position: relative;\n  padding-left: 12px;\n}\n\n.upload-tips li::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 8px;\n  width: 4px;\n  height: 4px;\n  background: #1890ff;\n  border-radius: 50%;\n}\n\n.address-input :deep(.el-input__prefix) {\n  color: #1890ff;\n}\n\n.status-radio :deep(.el-radio__label) {\n  font-size: 14px;\n}\n\n.rich-editor {\n  border: 1px solid #e8e8e8;\n  border-radius: 8px;\n  min-height: 300px;\n  margin-left: -80px;\n}\n\n.form-actions {\n  text-align: center;\n  margin-top: 40px;\n  padding-top: 20px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.submit-btn {\n  width: 180px;\n  height: 40px;\n  font-size: 16px;\n  border-radius: 20px;\n  background: #1890ff;\n  border-color: #1890ff;\n  transition: all 0.3s;\n}\n\n.submit-btn:hover {\n  background: #40a9ff;\n  border-color: #40a9ff;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(24, 144, 255, 0.2);\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}