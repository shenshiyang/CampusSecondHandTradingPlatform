{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  mounted() {\n    const pieChart = echarts.init(document.getElementById('pie')); // 图1：商品销售额趋势（折线图）\n    const pictorialChart = echarts.init(document.getElementById('pictorial')); // 图2：商家销售额排行榜（横向条形图）\n    const categoryPieChart = echarts.init(document.getElementById('categoryPie')); // 图3：商品种类销售占比（饼图）\n    const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart')); // 图4：用户每日在线趋势\n\n    // ✅ 图1：商品销售额趋势（折线图）\n    this.$request.get('/orders/selectLine').then(res => {\n      const data = res.data || [];\n      const lineOption = {\n        title: {\n          text: '商品销售额趋势',\n          subtext: '折线图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: {\n            rotate: 30,\n            interval: 0\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '销售额（元）'\n        },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: {\n            color: '#5470c6'\n          }\n        }]\n      };\n      pieChart.setOption(lineOption);\n    });\n\n    // ✅ 图2：商家销售额排行榜（横向条形图）\n    this.$request.get('/orders/selectBar').then(res => {\n      const data = (res.data || []).sort((a, b) => b.value - a.value);\n      const horizontalBarOption = {\n        title: {\n          text: '商家销售额排行榜',\n          subtext: '横向条形图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '120px',\n          right: '40px',\n          bottom: '50px',\n          top: '80px'\n        },\n        xAxis: {\n          type: 'value',\n          name: '销售额（元）'\n        },\n        yAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          inverse: true\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          barWidth: '50%',\n          data: data.map(v => v.value),\n          itemStyle: {\n            color: '#91cc75'\n          },\n          label: {\n            show: true,\n            position: 'right'\n          }\n        }]\n      };\n      pictorialChart.setOption(horizontalBarOption);\n    });\n\n    // ✅ 图3：商品种类销售数量占比（饼图）\n    this.$request.get('/orders/selectCategorySalesCount').then(res => {\n      const data = res.data || [];\n      const categoryOption = {\n        title: {\n          text: '商品种类销量占比',\n          subtext: '饼图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: '销量',\n          type: 'pie',\n          radius: '60%',\n          center: ['50%', '55%'],\n          data: data.map(item => ({\n            value: item.value,\n            name: item.name\n          })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      categoryPieChart.setOption(categoryOption);\n    });\n\n    // ✅ 图4：用户每日在线数量趋势（折线图）\n    this.$request.get('/user/selectOnlineTrend').then(res => {\n      const data = res.data || [];\n      const onlineOption = {\n        title: {\n          text: '用户每日在线趋势',\n          subtext: '折线图',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: {\n            rotate: 30,\n            interval: 0\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '在线人数'\n        },\n        series: [{\n          name: '在线人数',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: {\n            color: '#73c0de'\n          }\n        }]\n      };\n      onlineTrendChart.setOption(onlineOption);\n    });\n  }\n};","map":{"version":3,"names":["echarts","name","data","user","JSON","parse","localStorage","getItem","mounted","pieChart","init","document","getElementById","pictorialChart","categoryPieChart","onlineTrendChart","$request","get","then","res","lineOption","title","text","subtext","left","tooltip","trigger","xAxis","type","map","v","axisLabel","rotate","interval","yAxis","series","smooth","value","itemStyle","color","setOption","sort","a","b","horizontalBarOption","axisPointer","grid","right","bottom","top","inverse","barWidth","label","show","position","categoryOption","legend","orient","radius","center","item","emphasis","shadowBlur","shadowOffsetX","shadowColor","onlineOption"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n    }\n  },\n  mounted() {\n    const pieChart = echarts.init(document.getElementById('pie'))             // 图1：商品销售额趋势（折线图）\n    const pictorialChart = echarts.init(document.getElementById('pictorial')) // 图2：商家销售额排行榜（横向条形图）\n    const categoryPieChart = echarts.init(document.getElementById('categoryPie')) // 图3：商品种类销售占比（饼图）\n    const onlineTrendChart = echarts.init(document.getElementById('onlineTrendChart')) // 图4：用户每日在线趋势\n\n    // ✅ 图1：商品销售额趋势（折线图）\n    this.$request.get('/orders/selectLine').then(res => {\n      const data = res.data || []\n      const lineOption = {\n        title: { text: '商品销售额趋势', subtext: '折线图', left: 'center' },\n        tooltip: { trigger: 'axis' },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: { rotate: 30, interval: 0 }\n        },\n        yAxis: { type: 'value', name: '销售额（元）' },\n        series: [{\n          name: '销售额',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: { color: '#5470c6' }\n        }]\n      }\n      pieChart.setOption(lineOption)\n    })\n\n    // ✅ 图2：商家销售额排行榜（横向条形图）\n    this.$request.get('/orders/selectBar').then(res => {\n      const data = (res.data || []).sort((a, b) => b.value - a.value)\n      const horizontalBarOption = {\n        title: { text: '商家销售额排行榜', subtext: '横向条形图', left: 'center' },\n        tooltip: { trigger: 'axis', axisPointer: { type: 'shadow' }},\n        grid: { left: '120px', right: '40px', bottom: '50px', top: '80px' },\n        xAxis: { type: 'value', name: '销售额（元）' },\n        yAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          inverse: true\n        },\n        series: [{\n          name: '销售额',\n          type: 'bar',\n          barWidth: '50%',\n          data: data.map(v => v.value),\n          itemStyle: { color: '#91cc75' },\n          label: { show: true, position: 'right' }\n        }]\n      }\n      pictorialChart.setOption(horizontalBarOption)\n    })\n\n    // ✅ 图3：商品种类销售数量占比（饼图）\n    this.$request.get('/orders/selectCategorySalesCount').then(res => {\n      const data = res.data || []\n      const categoryOption = {\n        title: { text: '商品种类销量占比', subtext: '饼图', left: 'center' },\n        tooltip: { trigger: 'item' },\n        legend: { orient: 'vertical', left: 'left' },\n        series: [{\n          name: '销量',\n          type: 'pie',\n          radius: '60%',\n          center: ['50%', '55%'],\n          data: data.map(item => ({ value: item.value, name: item.name })),\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      }\n      categoryPieChart.setOption(categoryOption)\n    })\n\n    // ✅ 图4：用户每日在线数量趋势（折线图）\n    this.$request.get('/user/selectOnlineTrend').then(res => {\n      const data = res.data || []\n      const onlineOption = {\n        title: { text: '用户每日在线趋势', subtext: '折线图', left: 'center' },\n        tooltip: { trigger: 'axis' },\n        xAxis: {\n          type: 'category',\n          data: data.map(v => v.name),\n          axisLabel: { rotate: 30, interval: 0 }\n        },\n        yAxis: { type: 'value', name: '在线人数' },\n        series: [{\n          name: '在线人数',\n          type: 'line',\n          smooth: true,\n          data: data.map(v => v.value),\n          itemStyle: { color: '#73c0de' }\n        }]\n      }\n      onlineTrendChart.setOption(onlineOption)\n    })\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}