{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"FrontLayout\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      menus: [{\n        text: '热卖专区',\n        path: '/front/home'\n      }, {\n        text: '社区广场',\n        path: '/front/posts'\n      }, {\n        text: '求助专区',\n        path: '/front/help'\n      }, {\n        text: '系统公告',\n        path: '/front/notice'\n      }, {\n        text: '留言反馈',\n        path: '/front/feedback'\n      }],\n      totalUnreadCount: 0,\n      ws: null\n    };\n  },\n  mounted() {\n    if (this.user.id) {\n      this.getUnreadCount();\n      this.initWebSocket();\n    }\n  },\n  beforeDestroy() {\n    this.closeWebSocket();\n  },\n  methods: {\n    initWebSocket() {\n      if (typeof WebSocket === 'undefined') {\n        this.$message.error('您的浏览器不支持WebSocket');\n        return;\n      }\n      this.closeWebSocket();\n      const wsUrl = `ws://${window.location.host}/chatServer/${this.user.id}`;\n      this.ws = new WebSocket(wsUrl);\n      this.ws.onopen = () => {\n        console.log('WebSocket连接成功');\n      };\n      this.ws.onmessage = e => {\n        try {\n          const data = JSON.parse(e.data);\n          if (data.type === 'chat' && data.toUserId === this.user.id) {\n            // 收到新消息，更新未读消息数\n            this.getUnreadCount();\n            // 显示消息提醒\n            this.$notify({\n              title: '新消息',\n              message: `来自 ${data.fromUserName} 的新消息`,\n              type: 'success',\n              duration: 3000\n            });\n          }\n        } catch (error) {\n          console.error('解析WebSocket消息失败:', error);\n        }\n      };\n      this.ws.onclose = () => {\n        console.log('WebSocket连接关闭');\n        // 自动重连\n        setTimeout(() => {\n          this.initWebSocket();\n        }, 3000);\n      };\n      this.ws.onerror = () => {\n        console.error('WebSocket连接错误');\n        this.closeWebSocket();\n      };\n    },\n    closeWebSocket() {\n      if (this.ws) {\n        this.ws.close();\n        this.ws = null;\n      }\n    },\n    getUnreadCount() {\n      this.$request.get('/chatGroup/selectUserGroup').then(res => {\n        if (res.code === '200') {\n          this.totalUnreadCount = res.data.reduce((total, chat) => total + (chat.chatNum || 0), 0);\n        }\n      });\n    },\n    updateUser() {\n      this.user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}');\n      if (this.user.id) {\n        this.getUnreadCount();\n        this.initWebSocket();\n      } else {\n        this.closeWebSocket();\n      }\n    },\n    goToChat() {\n      this.$router.push('/front/chat');\n    },\n    logout() {\n      localStorage.removeItem(\"xm-user\");\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","menus","text","path","totalUnreadCount","ws","mounted","id","getUnreadCount","initWebSocket","beforeDestroy","closeWebSocket","methods","WebSocket","$message","error","wsUrl","window","location","host","onopen","console","log","onmessage","e","type","toUserId","$notify","title","message","fromUserName","duration","onclose","setTimeout","onerror","close","$request","get","then","res","code","reduce","total","chat","chatNum","updateUser","goToChat","$router","push","logout","removeItem"],"sources":["src/views/Front.vue"],"sourcesContent":["<template>\n  <div class=\"front-container\">\n    <!-- 顶部导航 -->\n    <div class=\"front-header\">\n      <!-- 左侧 LOGO -->\n      <a href=\"/front/home\" class=\"front-header-left\">\n        <img src=\"@/assets/imgs/logo.png\" class=\"logo\" alt=\"logo\" />\n        <div class=\"title\">前湖集市</div>\n      </a>\n\n      <!-- 中间菜单 -->\n      <div class=\"front-header-center\">\n        <div\n          v-for=\"item in menus\"\n          :key=\"item.path\"\n          class=\"menu\"\n          :class=\"{ 'menu-active': item.path === $route.path }\"\n          @click=\"$router.push(item.path)\"\n        >\n          {{ item.text }}\n        </div>\n      </div>\n\n      <!-- 聊天消息 -->\n      <div class=\"front-header-chat\" @click=\"goToChat\">\n        <i class=\"el-icon-chat-dot-round\" style=\"margin-right: 4px\"></i> 聊天消息\n        <div v-if=\"totalUnreadCount > 0\" class=\"unread-badge\">{{ totalUnreadCount }}</div>\n      </div>\n\n      <!-- 右侧用户 -->\n      <div class=\"front-header-right\">\n        <template v-if=\"!user.username\">\n          <el-button type=\"text\" @click=\"$router.push('/login')\">登录</el-button>\n          <el-button type=\"text\" @click=\"$router.push('/register')\">注册</el-button>\n        </template>\n        <template v-else>\n          <el-dropdown>\n            <div class=\"user-info\">\n              <div class=\"avatar-wrapper\">\n                <img :src=\"user.avatar\" class=\"avatar\" alt=\"用户头像\" />\n                <div v-if=\"totalUnreadCount > 0\" class=\"unread-badge avatar-badge\">{{ totalUnreadCount }}</div>\n              </div>\n              <span>{{ user.name }}</span>\n              <i class=\"el-icon-arrow-down\" style=\"margin-left: 4px\"></i>\n            </div>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item @click.native=\"$router.push('/front/orders')\">我的订单</el-dropdown-item>\n              <el-dropdown-item @click.native=\"$router.push('/front/goods')\">我的商品</el-dropdown-item>\n              <el-dropdown-item @click.native=\"$router.push('/front/userPosts')\">我的发帖</el-dropdown-item>\n              <el-dropdown-item @click.native=\"$router.push('/front/userHelp')\">我的求助</el-dropdown-item>\n              <el-dropdown-item @click.native=\"$router.push('/front/userFeedback')\">我的反馈</el-dropdown-item>\n              <el-dropdown-item @click.native=\"$router.push('/front/address')\">我的地址</el-dropdown-item>\n              <el-dropdown-item @click.native=\"$router.push('/front/person')\">个人信息</el-dropdown-item>\n              <el-dropdown-item @click.native=\"$router.push('/front/collect')\">我的收藏</el-dropdown-item>\n              <el-dropdown-item @click.native=\"logout\">退出登录</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </template>\n      </div>\n    </div>\n\n    <!-- 主体内容 -->\n    <div class=\"main-body\">\n      <router-view ref=\"child\" @update:user=\"updateUser\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"FrontLayout\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      menus: [\n        { text: '热卖专区', path: '/front/home' },\n        { text: '社区广场', path: '/front/posts' },\n        { text: '求助专区', path: '/front/help' },\n        { text: '系统公告', path: '/front/notice' },\n        { text: '留言反馈', path: '/front/feedback' },\n      ],\n      totalUnreadCount: 0,\n      ws: null\n    }\n  },\n  mounted() {\n    if (this.user.id) {\n      this.getUnreadCount();\n      this.initWebSocket();\n    }\n  },\n  beforeDestroy() {\n    this.closeWebSocket();\n  },\n  methods: {\n    initWebSocket() {\n      if (typeof WebSocket === 'undefined') {\n        this.$message.error('您的浏览器不支持WebSocket');\n        return;\n      }\n      this.closeWebSocket();\n      \n      const wsUrl = `ws://${window.location.host}/chatServer/${this.user.id}`;\n      this.ws = new WebSocket(wsUrl);\n      \n      this.ws.onopen = () => {\n        console.log('WebSocket连接成功');\n      };\n      \n      this.ws.onmessage = (e) => {\n        try {\n          const data = JSON.parse(e.data);\n          if (data.type === 'chat' && data.toUserId === this.user.id) {\n            // 收到新消息，更新未读消息数\n            this.getUnreadCount();\n            // 显示消息提醒\n            this.$notify({\n              title: '新消息',\n              message: `来自 ${data.fromUserName} 的新消息`,\n              type: 'success',\n              duration: 3000\n            });\n          }\n        } catch (error) {\n          console.error('解析WebSocket消息失败:', error);\n        }\n      };\n      \n      this.ws.onclose = () => {\n        console.log('WebSocket连接关闭');\n        // 自动重连\n        setTimeout(() => {\n          this.initWebSocket();\n        }, 3000);\n      };\n      \n      this.ws.onerror = () => {\n        console.error('WebSocket连接错误');\n        this.closeWebSocket();\n      };\n    },\n    closeWebSocket() {\n      if (this.ws) {\n        this.ws.close();\n        this.ws = null;\n      }\n    },\n    getUnreadCount() {\n      this.$request.get('/chatGroup/selectUserGroup').then(res => {\n        if (res.code === '200') {\n          this.totalUnreadCount = res.data.reduce((total, chat) => total + (chat.chatNum || 0), 0);\n        }\n      });\n    },\n    updateUser() {\n      this.user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}');\n      if (this.user.id) {\n        this.getUnreadCount();\n        this.initWebSocket();\n      } else {\n        this.closeWebSocket();\n      }\n    },\n    goToChat() {\n      this.$router.push('/front/chat');\n    },\n    logout() {\n      localStorage.removeItem(\"xm-user\")\n      this.$router.push(\"/login\")\n    }\n  }\n}\n</script>\n\n<style scoped>\n.front-container {\n  background-color: #f5f7fa;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.front-header {\n  display: flex;\n  align-items: center;\n  background: linear-gradient(135deg, #40a9ff 0%, #1d39c4 100%);\n  color: white;\n  height: 64px;\n  padding: 0 50px;\n  justify-content: space-between;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n}\n\n.front-header-left {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  transition: all 0.3s;\n  padding: 6px 12px;\n  border-radius: 8px;\n}\n\n.front-header-left:hover {\n  background: rgba(255, 255, 255, 0.1);\n  transform: translateY(-1px);\n}\n\n.front-header-left .logo {\n  width: 36px;\n  height: 36px;\n  margin-right: 12px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s;\n}\n\n.front-header-left:hover .logo {\n  transform: rotate(5deg);\n}\n\n.front-header-left .title {\n  font-size: 22px;\n  font-weight: bold;\n  color: #fff;\n  letter-spacing: 0.5px;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.front-header-center {\n  display: flex;\n  gap: 8px;\n  margin: 0 40px;\n  flex-grow: 1;\n  justify-content: center;\n  position: relative;\n}\n\n.menu {\n  cursor: pointer;\n  font-size: 15px;\n  color: rgba(255, 255, 255, 0.85);\n  transition: all 0.3s;\n  padding: 8px 20px;\n  border-radius: 20px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.menu::before {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  width: 0;\n  height: 2px;\n  background-color: #fff;\n  transition: all 0.3s;\n  transform: translateX(-50%);\n  opacity: 0;\n}\n\n.menu:hover::before,\n.menu-active::before {\n  width: 80%;\n  opacity: 1;\n}\n\n.menu:hover {\n  color: #fff;\n  background: rgba(255, 255, 255, 0.1);\n  transform: translateY(-1px);\n}\n\n.menu-active {\n  color: #fff;\n  background: rgba(255, 255, 255, 0.15);\n  font-weight: 500;\n}\n\n.front-header-chat {\n  font-size: 15px;\n  cursor: pointer;\n  color: rgba(255, 255, 255, 0.85);\n  margin-right: 25px;\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  border-radius: 20px;\n  transition: all 0.3s;\n  background: rgba(255, 255, 255, 0.1);\n  position: relative;\n}\n\n.front-header-chat:hover {\n  color: #fff;\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-1px);\n}\n\n.front-header-chat i {\n  margin-right: 6px;\n  font-size: 18px;\n}\n\n.front-header-right {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.front-header-right :deep(.el-button--text) {\n  color: rgba(255, 255, 255, 0.85);\n  font-size: 15px;\n  padding: 8px 16px;\n  transition: all 0.3s;\n  height: auto;\n  border-radius: 20px;\n}\n\n.front-header-right :deep(.el-button--text:hover) {\n  color: #fff;\n  background: rgba(255, 255, 255, 0.1);\n  transform: translateY(-1px);\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 6px 16px;\n  border-radius: 20px;\n  transition: all 0.3s;\n  background: rgba(255, 255, 255, 0.1);\n  gap: 8px;\n}\n\n.user-info:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-1px);\n}\n\n.user-info .avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s;\n  object-fit: cover;\n}\n\n.user-info:hover .avatar {\n  border-color: rgba(255, 255, 255, 0.4);\n  transform: scale(1.05);\n}\n\n.user-info span {\n  font-size: 15px;\n  color: #fff;\n}\n\n.user-info i {\n  font-size: 14px;\n  transition: all 0.3s;\n}\n\n.user-info:hover i {\n  transform: rotate(180deg);\n}\n\n.main-body {\n  padding: 24px;\n  flex: 1;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n}\n\n:deep(.el-dropdown-menu) {\n  padding: 8px;\n  border-radius: 12px;\n  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);\n  border: none;\n}\n\n:deep(.el-dropdown-menu__item) {\n  padding: 10px 20px;\n  font-size: 14px;\n  border-radius: 6px;\n  margin: 2px 0;\n  transition: all 0.3s;\n}\n\n:deep(.el-dropdown-menu__item:hover) {\n  background-color: #f0f7ff;\n  color: #1890ff;\n  transform: translateX(4px);\n}\n\n:deep(.el-dropdown-menu__item i) {\n  margin-right: 8px;\n  font-size: 16px;\n}\n\n.avatar-wrapper {\n  position: relative;\n  display: inline-block;\n}\n\n.avatar-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  z-index: 1;\n}\n\n.unread-badge {\n  position: absolute;\n  background-color: #ff4d4f;\n  color: white;\n  font-size: 12px;\n  padding: 0 6px;\n  height: 18px;\n  min-width: 18px;\n  border-radius: 9px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  box-shadow: 0 2px 6px rgba(255, 77, 79, 0.4);\n  animation: badge-pop 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n}\n\n@keyframes badge-pop {\n  from {\n    transform: scale(0);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n</style>\n"],"mappings":";AAqEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,EACA;MACAC,gBAAA;MACAC,EAAA;IACA;EACA;EACAC,QAAA;IACA,SAAAV,IAAA,CAAAW,EAAA;MACA,KAAAC,cAAA;MACA,KAAAC,aAAA;IACA;EACA;EACAC,cAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACAH,cAAA;MACA,WAAAI,SAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAAJ,cAAA;MAEA,MAAAK,KAAA,WAAAC,MAAA,CAAAC,QAAA,CAAAC,IAAA,oBAAAvB,IAAA,CAAAW,EAAA;MACA,KAAAF,EAAA,OAAAQ,SAAA,CAAAG,KAAA;MAEA,KAAAX,EAAA,CAAAe,MAAA;QACAC,OAAA,CAAAC,GAAA;MACA;MAEA,KAAAjB,EAAA,CAAAkB,SAAA,GAAAC,CAAA;QACA;UACA,MAAA7B,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAA0B,CAAA,CAAA7B,IAAA;UACA,IAAAA,IAAA,CAAA8B,IAAA,eAAA9B,IAAA,CAAA+B,QAAA,UAAA9B,IAAA,CAAAW,EAAA;YACA;YACA,KAAAC,cAAA;YACA;YACA,KAAAmB,OAAA;cACAC,KAAA;cACAC,OAAA,QAAAlC,IAAA,CAAAmC,YAAA;cACAL,IAAA;cACAM,QAAA;YACA;UACA;QACA,SAAAhB,KAAA;UACAM,OAAA,CAAAN,KAAA,qBAAAA,KAAA;QACA;MACA;MAEA,KAAAV,EAAA,CAAA2B,OAAA;QACAX,OAAA,CAAAC,GAAA;QACA;QACAW,UAAA;UACA,KAAAxB,aAAA;QACA;MACA;MAEA,KAAAJ,EAAA,CAAA6B,OAAA;QACAb,OAAA,CAAAN,KAAA;QACA,KAAAJ,cAAA;MACA;IACA;IACAA,eAAA;MACA,SAAAN,EAAA;QACA,KAAAA,EAAA,CAAA8B,KAAA;QACA,KAAA9B,EAAA;MACA;IACA;IACAG,eAAA;MACA,KAAA4B,QAAA,CAAAC,GAAA,+BAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAApC,gBAAA,GAAAmC,GAAA,CAAA5C,IAAA,CAAA8C,MAAA,EAAAC,KAAA,EAAAC,IAAA,KAAAD,KAAA,IAAAC,IAAA,CAAAC,OAAA;QACA;MACA;IACA;IACAC,WAAA;MACA,KAAAjD,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,SAAAJ,IAAA,CAAAW,EAAA;QACA,KAAAC,cAAA;QACA,KAAAC,aAAA;MACA;QACA,KAAAE,cAAA;MACA;IACA;IACAmC,SAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,OAAA;MACAlD,YAAA,CAAAmD,UAAA;MACA,KAAAH,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}